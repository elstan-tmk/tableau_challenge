<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20211.21.0511.0935                               -->
<workbook original-version='18.1' source-build='2021.1.2 (20211.21.0511.0935)' source-platform='mac' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <_.fcp.SetMembershipControl.true...SetMembershipControl />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='201901-03-citibike-tripdata+' inline='true' name='federated.11eicbn0gn6f3s129ifne1hgiaob' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='201901-citibike-tripdata' name='textscan.09ds0f20lp9yya16blpo012ixxfe'>
            <connection class='textscan' directory='/Users/mic_elstan/Desktop/data' filename='201901-citibike-tripdata.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.09ds0f20lp9yya16blpo012ixxfe' name='201901-citibike-tripdata.csv' table='[201901-citibike-tripdata#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='tripduration' ordinal='0' />
            <column datatype='datetime' name='starttime' ordinal='1' />
            <column datatype='datetime' name='stoptime' ordinal='2' />
            <column datatype='integer' name='start station id' ordinal='3' />
            <column datatype='string' name='start station name' ordinal='4' />
            <column datatype='real' name='start station latitude' ordinal='5' />
            <column datatype='real' name='start station longitude' ordinal='6' />
            <column datatype='integer' name='end station id' ordinal='7' />
            <column datatype='string' name='end station name' ordinal='8' />
            <column datatype='real' name='end station latitude' ordinal='9' />
            <column datatype='real' name='end station longitude' ordinal='10' />
            <column datatype='integer' name='bikeid' ordinal='11' />
            <column datatype='string' name='usertype' ordinal='12' />
            <column datatype='integer' name='birth year' ordinal='13' />
            <column datatype='integer' name='gender' ordinal='14' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation type='collection'>
          <relation connection='textscan.09ds0f20lp9yya16blpo012ixxfe' name='201901-citibike-tripdata.csv' table='[201901-citibike-tripdata#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='tripduration' ordinal='0' />
              <column datatype='datetime' name='starttime' ordinal='1' />
              <column datatype='datetime' name='stoptime' ordinal='2' />
              <column datatype='integer' name='start station id' ordinal='3' />
              <column datatype='string' name='start station name' ordinal='4' />
              <column datatype='real' name='start station latitude' ordinal='5' />
              <column datatype='real' name='start station longitude' ordinal='6' />
              <column datatype='integer' name='end station id' ordinal='7' />
              <column datatype='string' name='end station name' ordinal='8' />
              <column datatype='real' name='end station latitude' ordinal='9' />
              <column datatype='real' name='end station longitude' ordinal='10' />
              <column datatype='integer' name='bikeid' ordinal='11' />
              <column datatype='string' name='usertype' ordinal='12' />
              <column datatype='integer' name='birth year' ordinal='13' />
              <column datatype='integer' name='gender' ordinal='14' />
            </columns>
          </relation>
          <relation connection='textscan.09ds0f20lp9yya16blpo012ixxfe' name='201902-citibike-tripdata.csv' table='[201902-citibike-tripdata#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='tripduration' ordinal='0' />
              <column datatype='datetime' name='starttime' ordinal='1' />
              <column datatype='datetime' name='stoptime' ordinal='2' />
              <column datatype='integer' name='start station id' ordinal='3' />
              <column datatype='string' name='start station name' ordinal='4' />
              <column datatype='real' name='start station latitude' ordinal='5' />
              <column datatype='real' name='start station longitude' ordinal='6' />
              <column datatype='integer' name='end station id' ordinal='7' />
              <column datatype='string' name='end station name' ordinal='8' />
              <column datatype='real' name='end station latitude' ordinal='9' />
              <column datatype='real' name='end station longitude' ordinal='10' />
              <column datatype='integer' name='bikeid' ordinal='11' />
              <column datatype='string' name='usertype' ordinal='12' />
              <column datatype='integer' name='birth year' ordinal='13' />
              <column datatype='integer' name='gender' ordinal='14' />
            </columns>
          </relation>
          <relation connection='textscan.09ds0f20lp9yya16blpo012ixxfe' name='201903-citibike-tripdata.csv' table='[201903-citibike-tripdata#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='tripduration' ordinal='0' />
              <column datatype='datetime' name='starttime' ordinal='1' />
              <column datatype='datetime' name='stoptime' ordinal='2' />
              <column datatype='integer' name='start station id' ordinal='3' />
              <column datatype='string' name='start station name' ordinal='4' />
              <column datatype='real' name='start station latitude' ordinal='5' />
              <column datatype='real' name='start station longitude' ordinal='6' />
              <column datatype='integer' name='end station id' ordinal='7' />
              <column datatype='string' name='end station name' ordinal='8' />
              <column datatype='real' name='end station latitude' ordinal='9' />
              <column datatype='real' name='end station longitude' ordinal='10' />
              <column datatype='integer' name='bikeid' ordinal='11' />
              <column datatype='string' name='usertype' ordinal='12' />
              <column datatype='integer' name='birth year' ordinal='13' />
              <column datatype='integer' name='gender' ordinal='14' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <cols>
          <map key='[bikeid (201902-citibike-tripdata.csv)]' value='[201902-citibike-tripdata.csv].[bikeid]' />
          <map key='[bikeid (201903-citibike-tripdata.csv)]' value='[201903-citibike-tripdata.csv].[bikeid]' />
          <map key='[bikeid]' value='[201901-citibike-tripdata.csv].[bikeid]' />
          <map key='[birth year (201902-citibike-tripdata.csv)]' value='[201902-citibike-tripdata.csv].[birth year]' />
          <map key='[birth year (201903-citibike-tripdata.csv)]' value='[201903-citibike-tripdata.csv].[birth year]' />
          <map key='[birth year]' value='[201901-citibike-tripdata.csv].[birth year]' />
          <map key='[end station id (201902-citibike-tripdata.csv)]' value='[201902-citibike-tripdata.csv].[end station id]' />
          <map key='[end station id (201903-citibike-tripdata.csv)]' value='[201903-citibike-tripdata.csv].[end station id]' />
          <map key='[end station id]' value='[201901-citibike-tripdata.csv].[end station id]' />
          <map key='[end station latitude (201902-citibike-tripdata.csv)]' value='[201902-citibike-tripdata.csv].[end station latitude]' />
          <map key='[end station latitude (201903-citibike-tripdata.csv)]' value='[201903-citibike-tripdata.csv].[end station latitude]' />
          <map key='[end station latitude]' value='[201901-citibike-tripdata.csv].[end station latitude]' />
          <map key='[end station longitude (201902-citibike-tripdata.csv)]' value='[201902-citibike-tripdata.csv].[end station longitude]' />
          <map key='[end station longitude (201903-citibike-tripdata.csv)]' value='[201903-citibike-tripdata.csv].[end station longitude]' />
          <map key='[end station longitude]' value='[201901-citibike-tripdata.csv].[end station longitude]' />
          <map key='[end station name (201902-citibike-tripdata.csv)]' value='[201902-citibike-tripdata.csv].[end station name]' />
          <map key='[end station name (201903-citibike-tripdata.csv)]' value='[201903-citibike-tripdata.csv].[end station name]' />
          <map key='[end station name]' value='[201901-citibike-tripdata.csv].[end station name]' />
          <map key='[gender (201902-citibike-tripdata.csv)]' value='[201902-citibike-tripdata.csv].[gender]' />
          <map key='[gender (201903-citibike-tripdata.csv)]' value='[201903-citibike-tripdata.csv].[gender]' />
          <map key='[gender]' value='[201901-citibike-tripdata.csv].[gender]' />
          <map key='[start station id (201902-citibike-tripdata.csv)]' value='[201902-citibike-tripdata.csv].[start station id]' />
          <map key='[start station id (201903-citibike-tripdata.csv)]' value='[201903-citibike-tripdata.csv].[start station id]' />
          <map key='[start station id]' value='[201901-citibike-tripdata.csv].[start station id]' />
          <map key='[start station latitude (201902-citibike-tripdata.csv)]' value='[201902-citibike-tripdata.csv].[start station latitude]' />
          <map key='[start station latitude (201903-citibike-tripdata.csv)]' value='[201903-citibike-tripdata.csv].[start station latitude]' />
          <map key='[start station latitude]' value='[201901-citibike-tripdata.csv].[start station latitude]' />
          <map key='[start station longitude (201902-citibike-tripdata.csv)]' value='[201902-citibike-tripdata.csv].[start station longitude]' />
          <map key='[start station longitude (201903-citibike-tripdata.csv)]' value='[201903-citibike-tripdata.csv].[start station longitude]' />
          <map key='[start station longitude]' value='[201901-citibike-tripdata.csv].[start station longitude]' />
          <map key='[start station name (201902-citibike-tripdata.csv)]' value='[201902-citibike-tripdata.csv].[start station name]' />
          <map key='[start station name (201903-citibike-tripdata.csv)]' value='[201903-citibike-tripdata.csv].[start station name]' />
          <map key='[start station name]' value='[201901-citibike-tripdata.csv].[start station name]' />
          <map key='[starttime (201902-citibike-tripdata.csv)]' value='[201902-citibike-tripdata.csv].[starttime]' />
          <map key='[starttime (201903-citibike-tripdata.csv)]' value='[201903-citibike-tripdata.csv].[starttime]' />
          <map key='[starttime]' value='[201901-citibike-tripdata.csv].[starttime]' />
          <map key='[stoptime (201902-citibike-tripdata.csv)]' value='[201902-citibike-tripdata.csv].[stoptime]' />
          <map key='[stoptime (201903-citibike-tripdata.csv)]' value='[201903-citibike-tripdata.csv].[stoptime]' />
          <map key='[stoptime]' value='[201901-citibike-tripdata.csv].[stoptime]' />
          <map key='[tripduration (201902-citibike-tripdata.csv)]' value='[201902-citibike-tripdata.csv].[tripduration]' />
          <map key='[tripduration (201903-citibike-tripdata.csv)]' value='[201903-citibike-tripdata.csv].[tripduration]' />
          <map key='[tripduration]' value='[201901-citibike-tripdata.csv].[tripduration]' />
          <map key='[usertype (201902-citibike-tripdata.csv)]' value='[201902-citibike-tripdata.csv].[usertype]' />
          <map key='[usertype (201903-citibike-tripdata.csv)]' value='[201903-citibike-tripdata.csv].[usertype]' />
          <map key='[usertype]' value='[201901-citibike-tripdata.csv].[usertype]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[201901-citibike-tripdata.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[201902-citibike-tripdata.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[201903-citibike-tripdata.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tripduration</remote-name>
            <remote-type>20</remote-type>
            <local-name>[tripduration]</local-name>
            <parent-name>[201901-citibike-tripdata.csv]</parent-name>
            <remote-alias>tripduration</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[201901-citibike-tripdata.csv_C8898D05C2E441F09B9A7E86D279F1C2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>starttime</remote-name>
            <remote-type>135</remote-type>
            <local-name>[starttime]</local-name>
            <parent-name>[201901-citibike-tripdata.csv]</parent-name>
            <remote-alias>starttime</remote-alias>
            <ordinal>1</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[201901-citibike-tripdata.csv_C8898D05C2E441F09B9A7E86D279F1C2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>stoptime</remote-name>
            <remote-type>135</remote-type>
            <local-name>[stoptime]</local-name>
            <parent-name>[201901-citibike-tripdata.csv]</parent-name>
            <remote-alias>stoptime</remote-alias>
            <ordinal>2</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[201901-citibike-tripdata.csv_C8898D05C2E441F09B9A7E86D279F1C2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>start station id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[start station id]</local-name>
            <parent-name>[201901-citibike-tripdata.csv]</parent-name>
            <remote-alias>start station id</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[201901-citibike-tripdata.csv_C8898D05C2E441F09B9A7E86D279F1C2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>start station name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[start station name]</local-name>
            <parent-name>[201901-citibike-tripdata.csv]</parent-name>
            <remote-alias>start station name</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[201901-citibike-tripdata.csv_C8898D05C2E441F09B9A7E86D279F1C2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>start station latitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[start station latitude]</local-name>
            <parent-name>[201901-citibike-tripdata.csv]</parent-name>
            <remote-alias>start station latitude</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[201901-citibike-tripdata.csv_C8898D05C2E441F09B9A7E86D279F1C2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>start station longitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[start station longitude]</local-name>
            <parent-name>[201901-citibike-tripdata.csv]</parent-name>
            <remote-alias>start station longitude</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[201901-citibike-tripdata.csv_C8898D05C2E441F09B9A7E86D279F1C2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>end station id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[end station id]</local-name>
            <parent-name>[201901-citibike-tripdata.csv]</parent-name>
            <remote-alias>end station id</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[201901-citibike-tripdata.csv_C8898D05C2E441F09B9A7E86D279F1C2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>end station name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[end station name]</local-name>
            <parent-name>[201901-citibike-tripdata.csv]</parent-name>
            <remote-alias>end station name</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[201901-citibike-tripdata.csv_C8898D05C2E441F09B9A7E86D279F1C2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>end station latitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[end station latitude]</local-name>
            <parent-name>[201901-citibike-tripdata.csv]</parent-name>
            <remote-alias>end station latitude</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[201901-citibike-tripdata.csv_C8898D05C2E441F09B9A7E86D279F1C2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>end station longitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[end station longitude]</local-name>
            <parent-name>[201901-citibike-tripdata.csv]</parent-name>
            <remote-alias>end station longitude</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[201901-citibike-tripdata.csv_C8898D05C2E441F09B9A7E86D279F1C2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>bikeid</remote-name>
            <remote-type>20</remote-type>
            <local-name>[bikeid]</local-name>
            <parent-name>[201901-citibike-tripdata.csv]</parent-name>
            <remote-alias>bikeid</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[201901-citibike-tripdata.csv_C8898D05C2E441F09B9A7E86D279F1C2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>usertype</remote-name>
            <remote-type>129</remote-type>
            <local-name>[usertype]</local-name>
            <parent-name>[201901-citibike-tripdata.csv]</parent-name>
            <remote-alias>usertype</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[201901-citibike-tripdata.csv_C8898D05C2E441F09B9A7E86D279F1C2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>birth year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[birth year]</local-name>
            <parent-name>[201901-citibike-tripdata.csv]</parent-name>
            <remote-alias>birth year</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[201901-citibike-tripdata.csv_C8898D05C2E441F09B9A7E86D279F1C2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>gender</remote-name>
            <remote-type>20</remote-type>
            <local-name>[gender]</local-name>
            <parent-name>[201901-citibike-tripdata.csv]</parent-name>
            <remote-alias>gender</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[201901-citibike-tripdata.csv_C8898D05C2E441F09B9A7E86D279F1C2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tripduration</remote-name>
            <remote-type>20</remote-type>
            <local-name>[tripduration (201902-citibike-tripdata.csv)]</local-name>
            <parent-name>[201902-citibike-tripdata.csv]</parent-name>
            <remote-alias>tripduration</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[201902-citibike-tripdata.csv_F5CFD25BF97C4F07B133DA09FCBD25FF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>starttime</remote-name>
            <remote-type>135</remote-type>
            <local-name>[starttime (201902-citibike-tripdata.csv)]</local-name>
            <parent-name>[201902-citibike-tripdata.csv]</parent-name>
            <remote-alias>starttime</remote-alias>
            <ordinal>16</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[201902-citibike-tripdata.csv_F5CFD25BF97C4F07B133DA09FCBD25FF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>stoptime</remote-name>
            <remote-type>135</remote-type>
            <local-name>[stoptime (201902-citibike-tripdata.csv)]</local-name>
            <parent-name>[201902-citibike-tripdata.csv]</parent-name>
            <remote-alias>stoptime</remote-alias>
            <ordinal>17</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[201902-citibike-tripdata.csv_F5CFD25BF97C4F07B133DA09FCBD25FF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>start station id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[start station id (201902-citibike-tripdata.csv)]</local-name>
            <parent-name>[201902-citibike-tripdata.csv]</parent-name>
            <remote-alias>start station id</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[201902-citibike-tripdata.csv_F5CFD25BF97C4F07B133DA09FCBD25FF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>start station name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[start station name (201902-citibike-tripdata.csv)]</local-name>
            <parent-name>[201902-citibike-tripdata.csv]</parent-name>
            <remote-alias>start station name</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[201902-citibike-tripdata.csv_F5CFD25BF97C4F07B133DA09FCBD25FF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>start station latitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[start station latitude (201902-citibike-tripdata.csv)]</local-name>
            <parent-name>[201902-citibike-tripdata.csv]</parent-name>
            <remote-alias>start station latitude</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[201902-citibike-tripdata.csv_F5CFD25BF97C4F07B133DA09FCBD25FF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>start station longitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[start station longitude (201902-citibike-tripdata.csv)]</local-name>
            <parent-name>[201902-citibike-tripdata.csv]</parent-name>
            <remote-alias>start station longitude</remote-alias>
            <ordinal>21</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[201902-citibike-tripdata.csv_F5CFD25BF97C4F07B133DA09FCBD25FF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>end station id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[end station id (201902-citibike-tripdata.csv)]</local-name>
            <parent-name>[201902-citibike-tripdata.csv]</parent-name>
            <remote-alias>end station id</remote-alias>
            <ordinal>22</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[201902-citibike-tripdata.csv_F5CFD25BF97C4F07B133DA09FCBD25FF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>end station name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[end station name (201902-citibike-tripdata.csv)]</local-name>
            <parent-name>[201902-citibike-tripdata.csv]</parent-name>
            <remote-alias>end station name</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[201902-citibike-tripdata.csv_F5CFD25BF97C4F07B133DA09FCBD25FF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>end station latitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[end station latitude (201902-citibike-tripdata.csv)]</local-name>
            <parent-name>[201902-citibike-tripdata.csv]</parent-name>
            <remote-alias>end station latitude</remote-alias>
            <ordinal>24</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[201902-citibike-tripdata.csv_F5CFD25BF97C4F07B133DA09FCBD25FF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>end station longitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[end station longitude (201902-citibike-tripdata.csv)]</local-name>
            <parent-name>[201902-citibike-tripdata.csv]</parent-name>
            <remote-alias>end station longitude</remote-alias>
            <ordinal>25</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[201902-citibike-tripdata.csv_F5CFD25BF97C4F07B133DA09FCBD25FF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>bikeid</remote-name>
            <remote-type>20</remote-type>
            <local-name>[bikeid (201902-citibike-tripdata.csv)]</local-name>
            <parent-name>[201902-citibike-tripdata.csv]</parent-name>
            <remote-alias>bikeid</remote-alias>
            <ordinal>26</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[201902-citibike-tripdata.csv_F5CFD25BF97C4F07B133DA09FCBD25FF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>usertype</remote-name>
            <remote-type>129</remote-type>
            <local-name>[usertype (201902-citibike-tripdata.csv)]</local-name>
            <parent-name>[201902-citibike-tripdata.csv]</parent-name>
            <remote-alias>usertype</remote-alias>
            <ordinal>27</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[201902-citibike-tripdata.csv_F5CFD25BF97C4F07B133DA09FCBD25FF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>birth year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[birth year (201902-citibike-tripdata.csv)]</local-name>
            <parent-name>[201902-citibike-tripdata.csv]</parent-name>
            <remote-alias>birth year</remote-alias>
            <ordinal>28</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[201902-citibike-tripdata.csv_F5CFD25BF97C4F07B133DA09FCBD25FF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>gender</remote-name>
            <remote-type>20</remote-type>
            <local-name>[gender (201902-citibike-tripdata.csv)]</local-name>
            <parent-name>[201902-citibike-tripdata.csv]</parent-name>
            <remote-alias>gender</remote-alias>
            <ordinal>29</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[201902-citibike-tripdata.csv_F5CFD25BF97C4F07B133DA09FCBD25FF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tripduration</remote-name>
            <remote-type>20</remote-type>
            <local-name>[tripduration (201903-citibike-tripdata.csv)]</local-name>
            <parent-name>[201903-citibike-tripdata.csv]</parent-name>
            <remote-alias>tripduration</remote-alias>
            <ordinal>30</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[201903-citibike-tripdata.csv_8A86846DAF004B479E668EB191B9072A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>starttime</remote-name>
            <remote-type>135</remote-type>
            <local-name>[starttime (201903-citibike-tripdata.csv)]</local-name>
            <parent-name>[201903-citibike-tripdata.csv]</parent-name>
            <remote-alias>starttime</remote-alias>
            <ordinal>31</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[201903-citibike-tripdata.csv_8A86846DAF004B479E668EB191B9072A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>stoptime</remote-name>
            <remote-type>135</remote-type>
            <local-name>[stoptime (201903-citibike-tripdata.csv)]</local-name>
            <parent-name>[201903-citibike-tripdata.csv]</parent-name>
            <remote-alias>stoptime</remote-alias>
            <ordinal>32</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[201903-citibike-tripdata.csv_8A86846DAF004B479E668EB191B9072A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>start station id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[start station id (201903-citibike-tripdata.csv)]</local-name>
            <parent-name>[201903-citibike-tripdata.csv]</parent-name>
            <remote-alias>start station id</remote-alias>
            <ordinal>33</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[201903-citibike-tripdata.csv_8A86846DAF004B479E668EB191B9072A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>start station name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[start station name (201903-citibike-tripdata.csv)]</local-name>
            <parent-name>[201903-citibike-tripdata.csv]</parent-name>
            <remote-alias>start station name</remote-alias>
            <ordinal>34</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[201903-citibike-tripdata.csv_8A86846DAF004B479E668EB191B9072A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>start station latitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[start station latitude (201903-citibike-tripdata.csv)]</local-name>
            <parent-name>[201903-citibike-tripdata.csv]</parent-name>
            <remote-alias>start station latitude</remote-alias>
            <ordinal>35</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[201903-citibike-tripdata.csv_8A86846DAF004B479E668EB191B9072A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>start station longitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[start station longitude (201903-citibike-tripdata.csv)]</local-name>
            <parent-name>[201903-citibike-tripdata.csv]</parent-name>
            <remote-alias>start station longitude</remote-alias>
            <ordinal>36</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[201903-citibike-tripdata.csv_8A86846DAF004B479E668EB191B9072A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>end station id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[end station id (201903-citibike-tripdata.csv)]</local-name>
            <parent-name>[201903-citibike-tripdata.csv]</parent-name>
            <remote-alias>end station id</remote-alias>
            <ordinal>37</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[201903-citibike-tripdata.csv_8A86846DAF004B479E668EB191B9072A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>end station name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[end station name (201903-citibike-tripdata.csv)]</local-name>
            <parent-name>[201903-citibike-tripdata.csv]</parent-name>
            <remote-alias>end station name</remote-alias>
            <ordinal>38</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[201903-citibike-tripdata.csv_8A86846DAF004B479E668EB191B9072A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>end station latitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[end station latitude (201903-citibike-tripdata.csv)]</local-name>
            <parent-name>[201903-citibike-tripdata.csv]</parent-name>
            <remote-alias>end station latitude</remote-alias>
            <ordinal>39</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[201903-citibike-tripdata.csv_8A86846DAF004B479E668EB191B9072A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>end station longitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[end station longitude (201903-citibike-tripdata.csv)]</local-name>
            <parent-name>[201903-citibike-tripdata.csv]</parent-name>
            <remote-alias>end station longitude</remote-alias>
            <ordinal>40</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[201903-citibike-tripdata.csv_8A86846DAF004B479E668EB191B9072A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>bikeid</remote-name>
            <remote-type>20</remote-type>
            <local-name>[bikeid (201903-citibike-tripdata.csv)]</local-name>
            <parent-name>[201903-citibike-tripdata.csv]</parent-name>
            <remote-alias>bikeid</remote-alias>
            <ordinal>41</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[201903-citibike-tripdata.csv_8A86846DAF004B479E668EB191B9072A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>usertype</remote-name>
            <remote-type>129</remote-type>
            <local-name>[usertype (201903-citibike-tripdata.csv)]</local-name>
            <parent-name>[201903-citibike-tripdata.csv]</parent-name>
            <remote-alias>usertype</remote-alias>
            <ordinal>42</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[201903-citibike-tripdata.csv_8A86846DAF004B479E668EB191B9072A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>birth year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[birth year (201903-citibike-tripdata.csv)]</local-name>
            <parent-name>[201903-citibike-tripdata.csv]</parent-name>
            <remote-alias>birth year</remote-alias>
            <ordinal>43</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[201903-citibike-tripdata.csv_8A86846DAF004B479E668EB191B9072A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>gender</remote-name>
            <remote-type>20</remote-type>
            <local-name>[gender (201903-citibike-tripdata.csv)]</local-name>
            <parent-name>[201903-citibike-tripdata.csv]</parent-name>
            <remote-alias>gender</remote-alias>
            <ordinal>44</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[201903-citibike-tripdata.csv_8A86846DAF004B479E668EB191B9072A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='201901-citibike-tripdata.csv' datatype='table' name='[__tableau_internal_object_id__].[201901-citibike-tripdata.csv_C8898D05C2E441F09B9A7E86D279F1C2]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='201902-citibike-tripdata.csv' datatype='table' name='[__tableau_internal_object_id__].[201902-citibike-tripdata.csv_F5CFD25BF97C4F07B133DA09FCBD25FF]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='201903-citibike-tripdata.csv' datatype='table' name='[__tableau_internal_object_id__].[201903-citibike-tripdata.csv_8A86846DAF004B479E668EB191B9072A]' role='measure' type='quantitative' />
      <column caption='Bikeid (201902-Citibike-Tripdata.Csv)' datatype='integer' name='[bikeid (201902-citibike-tripdata.csv)]' role='measure' type='quantitative' />
      <column caption='Bikeid (201903-Citibike-Tripdata.Csv)' datatype='integer' name='[bikeid (201903-citibike-tripdata.csv)]' role='measure' type='quantitative' />
      <column caption='Bikeid' datatype='integer' name='[bikeid]' role='measure' type='quantitative' />
      <column caption='Birth Year (201902-Citibike-Tripdata.Csv)' datatype='integer' name='[birth year (201902-citibike-tripdata.csv)]' role='dimension' type='quantitative' />
      <column caption='Birth Year (201903-Citibike-Tripdata.Csv)' datatype='integer' name='[birth year (201903-citibike-tripdata.csv)]' role='dimension' type='quantitative' />
      <column caption='Birth Year' datatype='integer' name='[birth year]' role='dimension' type='quantitative' />
      <column caption='End Station Id (201902-Citibike-Tripdata.Csv)' datatype='integer' name='[end station id (201902-citibike-tripdata.csv)]' role='measure' type='quantitative' />
      <column caption='End Station Id (201903-Citibike-Tripdata.Csv)' datatype='integer' name='[end station id (201903-citibike-tripdata.csv)]' role='measure' type='quantitative' />
      <column caption='End Station Id' datatype='integer' name='[end station id]' role='measure' type='quantitative' />
      <column aggregation='Avg' caption='End Station Latitude (201902-Citibike-Tripdata.Csv)' datatype='real' name='[end station latitude (201902-citibike-tripdata.csv)]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' caption='End Station Latitude (201903-Citibike-Tripdata.Csv)' datatype='real' name='[end station latitude (201903-citibike-tripdata.csv)]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' caption='End Station Latitude' datatype='real' name='[end station latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' caption='End Station Longitude (201902-Citibike-Tripdata.Csv)' datatype='real' name='[end station longitude (201902-citibike-tripdata.csv)]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column aggregation='Avg' caption='End Station Longitude (201903-Citibike-Tripdata.Csv)' datatype='real' name='[end station longitude (201903-citibike-tripdata.csv)]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column aggregation='Avg' caption='End Station Longitude' datatype='real' name='[end station longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column caption='End Station Name (201902-Citibike-Tripdata.Csv)' datatype='string' name='[end station name (201902-citibike-tripdata.csv)]' role='dimension' type='nominal' />
      <column caption='End Station Name (201903-Citibike-Tripdata.Csv)' datatype='string' name='[end station name (201903-citibike-tripdata.csv)]' role='dimension' type='nominal' />
      <column caption='End Station Name' datatype='string' name='[end station name]' role='dimension' type='nominal' />
      <column caption='Gender (201902-Citibike-Tripdata.Csv)' datatype='integer' name='[gender (201902-citibike-tripdata.csv)]' role='measure' type='quantitative' />
      <column caption='Gender (201903-Citibike-Tripdata.Csv)' datatype='integer' name='[gender (201903-citibike-tripdata.csv)]' role='measure' type='quantitative' />
      <column caption='Gender' datatype='integer' name='[gender]' role='measure' type='quantitative' />
      <column caption='Start Station Id (201902-Citibike-Tripdata.Csv)' datatype='integer' name='[start station id (201902-citibike-tripdata.csv)]' role='measure' type='quantitative' />
      <column caption='Start Station Id (201903-Citibike-Tripdata.Csv)' datatype='integer' name='[start station id (201903-citibike-tripdata.csv)]' role='measure' type='quantitative' />
      <column caption='Start Station Id' datatype='integer' name='[start station id]' role='measure' type='quantitative' />
      <column aggregation='Avg' caption='Start Station Latitude (201902-Citibike-Tripdata.Csv)' datatype='real' name='[start station latitude (201902-citibike-tripdata.csv)]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' caption='Start Station Latitude (201903-Citibike-Tripdata.Csv)' datatype='real' name='[start station latitude (201903-citibike-tripdata.csv)]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' caption='Start Station Latitude' datatype='real' name='[start station latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' caption='Start Station Longitude (201902-Citibike-Tripdata.Csv)' datatype='real' name='[start station longitude (201902-citibike-tripdata.csv)]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column aggregation='Avg' caption='Start Station Longitude (201903-Citibike-Tripdata.Csv)' datatype='real' name='[start station longitude (201903-citibike-tripdata.csv)]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column aggregation='Avg' caption='Start Station Longitude' datatype='real' name='[start station longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column caption='Start Station Name (201902-Citibike-Tripdata.Csv)' datatype='string' name='[start station name (201902-citibike-tripdata.csv)]' role='dimension' type='nominal' />
      <column caption='Start Station Name (201903-Citibike-Tripdata.Csv)' datatype='string' name='[start station name (201903-citibike-tripdata.csv)]' role='dimension' type='nominal' />
      <column caption='Start Station Name' datatype='string' name='[start station name]' role='dimension' type='nominal' />
      <column caption='Starttime (201902-Citibike-Tripdata.Csv)' datatype='datetime' name='[starttime (201902-citibike-tripdata.csv)]' role='dimension' type='ordinal' />
      <column caption='Starttime (201903-Citibike-Tripdata.Csv)' datatype='datetime' name='[starttime (201903-citibike-tripdata.csv)]' role='dimension' type='ordinal' />
      <column caption='Starttime' datatype='datetime' name='[starttime]' role='dimension' type='ordinal' />
      <column caption='Stoptime (201902-Citibike-Tripdata.Csv)' datatype='datetime' name='[stoptime (201902-citibike-tripdata.csv)]' role='dimension' type='ordinal' />
      <column caption='Stoptime (201903-Citibike-Tripdata.Csv)' datatype='datetime' name='[stoptime (201903-citibike-tripdata.csv)]' role='dimension' type='ordinal' />
      <column caption='Stoptime' datatype='datetime' name='[stoptime]' role='dimension' type='ordinal' />
      <column caption='Tripduration (201902-Citibike-Tripdata.Csv)' datatype='integer' name='[tripduration (201902-citibike-tripdata.csv)]' role='measure' type='quantitative' />
      <column caption='Tripduration (201903-Citibike-Tripdata.Csv)' datatype='integer' name='[tripduration (201903-citibike-tripdata.csv)]' role='measure' type='quantitative' />
      <column caption='Tripduration' datatype='integer' name='[tripduration]' role='measure' type='quantitative' />
      <column caption='Usertype (201902-Citibike-Tripdata.Csv)' datatype='string' name='[usertype (201902-citibike-tripdata.csv)]' role='dimension' type='nominal' />
      <column caption='Usertype (201903-Citibike-Tripdata.Csv)' datatype='string' name='[usertype (201903-citibike-tripdata.csv)]' role='dimension' type='nominal' />
      <column caption='Usertype' datatype='string' name='[usertype]' role='dimension' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='201901-citibike-tripdata.csv' id='201901-citibike-tripdata.csv_C8898D05C2E441F09B9A7E86D279F1C2'>
            <properties context=''>
              <relation connection='textscan.09ds0f20lp9yya16blpo012ixxfe' name='201901-citibike-tripdata.csv' table='[201901-citibike-tripdata#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='integer' name='tripduration' ordinal='0' />
                  <column datatype='datetime' name='starttime' ordinal='1' />
                  <column datatype='datetime' name='stoptime' ordinal='2' />
                  <column datatype='integer' name='start station id' ordinal='3' />
                  <column datatype='string' name='start station name' ordinal='4' />
                  <column datatype='real' name='start station latitude' ordinal='5' />
                  <column datatype='real' name='start station longitude' ordinal='6' />
                  <column datatype='integer' name='end station id' ordinal='7' />
                  <column datatype='string' name='end station name' ordinal='8' />
                  <column datatype='real' name='end station latitude' ordinal='9' />
                  <column datatype='real' name='end station longitude' ordinal='10' />
                  <column datatype='integer' name='bikeid' ordinal='11' />
                  <column datatype='string' name='usertype' ordinal='12' />
                  <column datatype='integer' name='birth year' ordinal='13' />
                  <column datatype='integer' name='gender' ordinal='14' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='201902-citibike-tripdata.csv' id='201902-citibike-tripdata.csv_F5CFD25BF97C4F07B133DA09FCBD25FF'>
            <properties context=''>
              <relation connection='textscan.09ds0f20lp9yya16blpo012ixxfe' name='201902-citibike-tripdata.csv' table='[201902-citibike-tripdata#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='integer' name='tripduration' ordinal='0' />
                  <column datatype='datetime' name='starttime' ordinal='1' />
                  <column datatype='datetime' name='stoptime' ordinal='2' />
                  <column datatype='integer' name='start station id' ordinal='3' />
                  <column datatype='string' name='start station name' ordinal='4' />
                  <column datatype='real' name='start station latitude' ordinal='5' />
                  <column datatype='real' name='start station longitude' ordinal='6' />
                  <column datatype='integer' name='end station id' ordinal='7' />
                  <column datatype='string' name='end station name' ordinal='8' />
                  <column datatype='real' name='end station latitude' ordinal='9' />
                  <column datatype='real' name='end station longitude' ordinal='10' />
                  <column datatype='integer' name='bikeid' ordinal='11' />
                  <column datatype='string' name='usertype' ordinal='12' />
                  <column datatype='integer' name='birth year' ordinal='13' />
                  <column datatype='integer' name='gender' ordinal='14' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='201903-citibike-tripdata.csv' id='201903-citibike-tripdata.csv_8A86846DAF004B479E668EB191B9072A'>
            <properties context=''>
              <relation connection='textscan.09ds0f20lp9yya16blpo012ixxfe' name='201903-citibike-tripdata.csv' table='[201903-citibike-tripdata#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='integer' name='tripduration' ordinal='0' />
                  <column datatype='datetime' name='starttime' ordinal='1' />
                  <column datatype='datetime' name='stoptime' ordinal='2' />
                  <column datatype='integer' name='start station id' ordinal='3' />
                  <column datatype='string' name='start station name' ordinal='4' />
                  <column datatype='real' name='start station latitude' ordinal='5' />
                  <column datatype='real' name='start station longitude' ordinal='6' />
                  <column datatype='integer' name='end station id' ordinal='7' />
                  <column datatype='string' name='end station name' ordinal='8' />
                  <column datatype='real' name='end station latitude' ordinal='9' />
                  <column datatype='real' name='end station longitude' ordinal='10' />
                  <column datatype='integer' name='bikeid' ordinal='11' />
                  <column datatype='string' name='usertype' ordinal='12' />
                  <column datatype='integer' name='birth year' ordinal='13' />
                  <column datatype='integer' name='gender' ordinal='14' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='='>
              <expression op='[bikeid]' />
              <expression op='[bikeid (201902-citibike-tripdata.csv)]' />
            </expression>
            <first-end-point object-id='201901-citibike-tripdata.csv_C8898D05C2E441F09B9A7E86D279F1C2' />
            <second-end-point object-id='201902-citibike-tripdata.csv_F5CFD25BF97C4F07B133DA09FCBD25FF' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[bikeid (201902-citibike-tripdata.csv)]' />
              <expression op='[bikeid (201903-citibike-tripdata.csv)]' />
            </expression>
            <first-end-point object-id='201902-citibike-tripdata.csv_F5CFD25BF97C4F07B133DA09FCBD25FF' />
            <second-end-point object-id='201903-citibike-tripdata.csv_8A86846DAF004B479E668EB191B9072A' />
          </relationship>
        </relationships>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='combined_tripdata_2019-jan-to-mar' inline='true' name='federated.1ci9hct0n41gi71f5vkxs08n8zq0' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='combined_tripdata_2019-jan-to-mar' name='textscan.1xomtym08fyqvk1bduy4j0isn3uc'>
            <connection class='textscan' directory='/Users/mic_elstan/Desktop/tableau_challenge/data' filename='combined_tripdata_2019-jan-to-mar.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.1xomtym08fyqvk1bduy4j0isn3uc' name='combined_tripdata_2019-jan-to-mar.csv' table='[combined_tripdata_2019-jan-to-mar#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='tripduration' ordinal='0' />
            <column datatype='datetime' name='starttime' ordinal='1' />
            <column datatype='datetime' name='stoptime' ordinal='2' />
            <column datatype='real' name='start station id' ordinal='3' />
            <column datatype='string' name='start station name' ordinal='4' />
            <column datatype='real' name='start station latitude' ordinal='5' />
            <column datatype='real' name='start station longitude' ordinal='6' />
            <column datatype='real' name='end station id' ordinal='7' />
            <column datatype='string' name='end station name' ordinal='8' />
            <column datatype='real' name='end station latitude' ordinal='9' />
            <column datatype='real' name='end station longitude' ordinal='10' />
            <column datatype='integer' name='bikeid' ordinal='11' />
            <column datatype='string' name='usertype' ordinal='12' />
            <column datatype='integer' name='birth year' ordinal='13' />
            <column datatype='integer' name='gender' ordinal='14' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.1xomtym08fyqvk1bduy4j0isn3uc' name='combined_tripdata_2019-jan-to-mar.csv' table='[combined_tripdata_2019-jan-to-mar#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='tripduration' ordinal='0' />
            <column datatype='datetime' name='starttime' ordinal='1' />
            <column datatype='datetime' name='stoptime' ordinal='2' />
            <column datatype='real' name='start station id' ordinal='3' />
            <column datatype='string' name='start station name' ordinal='4' />
            <column datatype='real' name='start station latitude' ordinal='5' />
            <column datatype='real' name='start station longitude' ordinal='6' />
            <column datatype='real' name='end station id' ordinal='7' />
            <column datatype='string' name='end station name' ordinal='8' />
            <column datatype='real' name='end station latitude' ordinal='9' />
            <column datatype='real' name='end station longitude' ordinal='10' />
            <column datatype='integer' name='bikeid' ordinal='11' />
            <column datatype='string' name='usertype' ordinal='12' />
            <column datatype='integer' name='birth year' ordinal='13' />
            <column datatype='integer' name='gender' ordinal='14' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[combined_tripdata_2019-jan-to-mar.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tripduration</remote-name>
            <remote-type>20</remote-type>
            <local-name>[tripduration]</local-name>
            <parent-name>[combined_tripdata_2019-jan-to-mar.csv]</parent-name>
            <remote-alias>tripduration</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[combined_tripdata_2019-jan-to-mar.csv_AF6A3C63C63B49CEAF86C47F0666035B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>starttime</remote-name>
            <remote-type>135</remote-type>
            <local-name>[starttime]</local-name>
            <parent-name>[combined_tripdata_2019-jan-to-mar.csv]</parent-name>
            <remote-alias>starttime</remote-alias>
            <ordinal>1</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[combined_tripdata_2019-jan-to-mar.csv_AF6A3C63C63B49CEAF86C47F0666035B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>stoptime</remote-name>
            <remote-type>135</remote-type>
            <local-name>[stoptime]</local-name>
            <parent-name>[combined_tripdata_2019-jan-to-mar.csv]</parent-name>
            <remote-alias>stoptime</remote-alias>
            <ordinal>2</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[combined_tripdata_2019-jan-to-mar.csv_AF6A3C63C63B49CEAF86C47F0666035B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>start station id</remote-name>
            <remote-type>5</remote-type>
            <local-name>[start station id]</local-name>
            <parent-name>[combined_tripdata_2019-jan-to-mar.csv]</parent-name>
            <remote-alias>start station id</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[combined_tripdata_2019-jan-to-mar.csv_AF6A3C63C63B49CEAF86C47F0666035B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>start station name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[start station name]</local-name>
            <parent-name>[combined_tripdata_2019-jan-to-mar.csv]</parent-name>
            <remote-alias>start station name</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[combined_tripdata_2019-jan-to-mar.csv_AF6A3C63C63B49CEAF86C47F0666035B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>start station latitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[start station latitude]</local-name>
            <parent-name>[combined_tripdata_2019-jan-to-mar.csv]</parent-name>
            <remote-alias>start station latitude</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[combined_tripdata_2019-jan-to-mar.csv_AF6A3C63C63B49CEAF86C47F0666035B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>start station longitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[start station longitude]</local-name>
            <parent-name>[combined_tripdata_2019-jan-to-mar.csv]</parent-name>
            <remote-alias>start station longitude</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[combined_tripdata_2019-jan-to-mar.csv_AF6A3C63C63B49CEAF86C47F0666035B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>end station id</remote-name>
            <remote-type>5</remote-type>
            <local-name>[end station id]</local-name>
            <parent-name>[combined_tripdata_2019-jan-to-mar.csv]</parent-name>
            <remote-alias>end station id</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[combined_tripdata_2019-jan-to-mar.csv_AF6A3C63C63B49CEAF86C47F0666035B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>end station name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[end station name]</local-name>
            <parent-name>[combined_tripdata_2019-jan-to-mar.csv]</parent-name>
            <remote-alias>end station name</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[combined_tripdata_2019-jan-to-mar.csv_AF6A3C63C63B49CEAF86C47F0666035B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>end station latitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[end station latitude]</local-name>
            <parent-name>[combined_tripdata_2019-jan-to-mar.csv]</parent-name>
            <remote-alias>end station latitude</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[combined_tripdata_2019-jan-to-mar.csv_AF6A3C63C63B49CEAF86C47F0666035B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>end station longitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[end station longitude]</local-name>
            <parent-name>[combined_tripdata_2019-jan-to-mar.csv]</parent-name>
            <remote-alias>end station longitude</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[combined_tripdata_2019-jan-to-mar.csv_AF6A3C63C63B49CEAF86C47F0666035B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>bikeid</remote-name>
            <remote-type>20</remote-type>
            <local-name>[bikeid]</local-name>
            <parent-name>[combined_tripdata_2019-jan-to-mar.csv]</parent-name>
            <remote-alias>bikeid</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[combined_tripdata_2019-jan-to-mar.csv_AF6A3C63C63B49CEAF86C47F0666035B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>usertype</remote-name>
            <remote-type>129</remote-type>
            <local-name>[usertype]</local-name>
            <parent-name>[combined_tripdata_2019-jan-to-mar.csv]</parent-name>
            <remote-alias>usertype</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[combined_tripdata_2019-jan-to-mar.csv_AF6A3C63C63B49CEAF86C47F0666035B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>birth year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[birth year]</local-name>
            <parent-name>[combined_tripdata_2019-jan-to-mar.csv]</parent-name>
            <remote-alias>birth year</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[combined_tripdata_2019-jan-to-mar.csv_AF6A3C63C63B49CEAF86C47F0666035B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>gender</remote-name>
            <remote-type>20</remote-type>
            <local-name>[gender]</local-name>
            <parent-name>[combined_tripdata_2019-jan-to-mar.csv]</parent-name>
            <remote-alias>gender</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[combined_tripdata_2019-jan-to-mar.csv_AF6A3C63C63B49CEAF86C47F0666035B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Age' datatype='integer' name='[Calculation_489836882665963522]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='2021 - [birth year]' />
      </column>
      <column caption='Gender(Text)' datatype='string' name='[Calculation_489836882666475523]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [gender] = 0 THEN &apos;UNKNOWN&apos;&#10;ELSEIF [gender] = 1 THEN &apos; MALE&apos;&#10;ELSEIF [gender] = 2 THEN &apos;FEMALE&apos;&#10;ELSE &apos;UNKNOWN&apos; END' />
      </column>
      <column caption='Trip Duration (Min)' datatype='real' name='[Calculation_489836882667237380]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[tripduration] /60' />
      </column>
      <column caption='Number of Records' datatype='integer' name='[Calculation_489836882667462661]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='1' />
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='combined_tripdata_2019-jan-to-mar.csv' datatype='table' name='[__tableau_internal_object_id__].[combined_tripdata_2019-jan-to-mar.csv_AF6A3C63C63B49CEAF86C47F0666035B]' role='measure' type='quantitative' />
      <column caption='Bikeid' datatype='integer' name='[bikeid]' role='measure' type='quantitative' />
      <column caption='Birth Year' datatype='integer' name='[birth year]' role='dimension' type='quantitative' />
      <column caption='End Station Id' datatype='real' name='[end station id]' role='measure' type='quantitative' />
      <column aggregation='Avg' caption='End Station Latitude' datatype='real' name='[end station latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' caption='End Station Longitude' datatype='real' name='[end station longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column caption='End Station Name' datatype='string' name='[end station name]' role='dimension' type='nominal' />
      <column caption='Gender' datatype='integer' name='[gender]' role='measure' type='quantitative' />
      <column caption='Start Station Id' datatype='real' name='[start station id]' role='measure' type='quantitative' />
      <column aggregation='Avg' caption='Start Station Latitude' datatype='real' name='[start station latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' caption='Start Station Longitude' datatype='real' name='[start station longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column caption='Start Station Name' datatype='string' name='[start station name]' role='dimension' type='nominal' />
      <column caption='Starttime' datatype='datetime' name='[starttime]' role='dimension' type='ordinal' />
      <column caption='Stoptime' datatype='datetime' name='[stoptime]' role='dimension' type='ordinal' />
      <column caption='Tripduration' datatype='integer' name='[tripduration]' role='measure' type='quantitative' />
      <column caption='Usertype' datatype='string' name='[usertype]' role='dimension' type='nominal' />
      <column-instance column='[end station name]' derivation='None' name='[none:end station name:nk]' pivot='key' type='nominal' />
      <column-instance column='[start station name]' derivation='None' name='[none:start station name:nk]' pivot='key' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:start station name:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;1 Ave &amp; E 94 St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;11 Ave &amp; W 59 St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;27 St &amp; Hunter St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;3 St &amp; 7 Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;34 Ave &amp; 13 St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;47 Ave &amp; 31 St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;6 Ave &amp; Canal St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Amsterdam Ave &amp; W 125 St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Bergen St &amp; Smith St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Broadway &amp; W 36 St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Carlton Ave &amp; Flushing Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Central Park West &amp; W 85 St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Coffey St &amp; Conover St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Crescent St &amp; Ditmars Blvd&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Driggs Ave &amp; N 9 St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;E 11 St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;E 33 St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;E 55 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;E 77 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;E 97 St &amp; Madison Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;East End Ave &amp; E 86 St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Front St &amp; Washington St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Grand Ave &amp; Bergen St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Henry St &amp; W 9 St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kosciuszko St &amp; Tompkins Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Lewis Ave &amp; Kosciuszko St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Madison Ave &amp; E 120 St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Morningside Ave &amp; W 123 St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Nostrand Ave &amp; Myrtle Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Pierrepont St &amp; Monroe Pl&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Richardson St &amp; N Henry St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sigourney St &amp; Columbia St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Steinway St &amp; 28 Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Van Brunt St &amp; Wolcott St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;W 106 St &amp; Amsterdam Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;W 18 St &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;W 38 St &amp; 8 Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;W 59 St &amp; 10 Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;West End Ave &amp; W 94 St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;21 St &amp; Hoyt Ave S&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;3 Ave &amp; E 62 St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;31 St &amp; 23 Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;39 St &amp; 2 Ave - Citi Bike HQ at Industry City&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;5 Ave &amp; E 103 St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;9 Ave &amp; W 28 St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Allen St &amp; Hester St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Barclay St &amp; Church St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Broadway &amp; Berry St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Bushwick Ave &amp; Powers St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Center Blvd &amp; 48 Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Cliff St &amp; Fulton St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Congress St &amp; Clinton St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Devoe St &amp; Lorimer St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;E 115 St &amp; Madison Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;E 24 St &amp; Park Ave S&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;E 48 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;E 6 St &amp; Avenue D&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;E 68 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;E 88 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Franklin St &amp; Dupont St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Garfield Pl &amp; 8 Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Handlebar @ Gowanus&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Jay St &amp; York St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Lenox Ave &amp; W 117 St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Lispenard St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Metropolitan Ave &amp; Bedford Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;N 15 St &amp; Wythe Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Park Pl &amp; Vanderbilt Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Prospect Pl &amp; Underhill Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;S 4 St &amp; Rodney St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;St Nicholas Ave &amp; Manhattan Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Union Ave &amp; N 12 St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;W 13 St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;W 27 St &amp; 7 Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;W 50 St &amp; 9 Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;W 88 St &amp; West End Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Washington Ave &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Wythe Ave &amp; Metropolitan Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;1 Ave &amp; E 44 St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;10 St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;24 Ave &amp; 29 St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;3 Ave &amp; E 100 St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;31 St &amp; Hoyt Ave N&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;44 Dr &amp; 21 St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;5 St &amp; Market St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Amsterdam Ave &amp; W 73 St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bedford Ave &amp; Bergen St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Broadway &amp; Roebling St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Cadman Plaza West &amp; Montague St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Central Park W &amp; W 96 St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Clinton St &amp; Centre St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Crescent St &amp; 30 Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Division St &amp; Bowery&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;E 10 St &amp; Avenue A&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;E 118 St &amp; Madison Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;E 30 St &amp; Park Ave S&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;E 52 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;E 72 St &amp; York Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;E 91 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Frederick Douglass Blvd &amp; W 117 St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Graham Ave &amp; Herbert St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Henry St &amp; Bay St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kent Ave &amp; N 7 St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Leonard St &amp; Church St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;MacDougal St &amp; Washington Sq&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Monroe St &amp; Classon Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Newton Rd &amp; 44 St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Perry St &amp; Bleecker St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Queens Plaza North &amp; Crescent St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;S Portland Ave &amp; Hanson Pl&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Stanton St &amp; Mangin St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Union St &amp; Nevins St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;W 15 St &amp; 10 Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;W 34 St &amp; 11 Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;W 53 St &amp; 10 Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;W 95 St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Washington St &amp; Gansevoort St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;12 St &amp; 4 Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;2 Ave &amp; 36 St - Citi Bike HQ at Industry City&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;28 St &amp; 38 Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;35 Ave &amp; 10 St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;4 Ave &amp; 9 St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;49 Ave &amp; 21 St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;7 Ave &amp; Central Park South&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Avenue C &amp; E 18 St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Berry St &amp; N 8 St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Broadway &amp; W 49 St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Carroll St &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Centre St &amp; Worth St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Columbia St &amp; Lorraine St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Dean St &amp; Franklin Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Dwight St &amp; Van Dyke St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;E 103 St &amp; Lexington Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;E 16 St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;E 41 St &amp; Madison Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;E 58 St &amp;  1 Ave (NW Corner)&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;E 81 St &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Emerson Pl &amp; Myrtle Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Fulton St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Great Jones St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Hudson St &amp; Reade St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Lafayette St &amp; E 8 St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Lexington Ave &amp; E 29 St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Marcus Garvey Blvd &amp; Macon St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Murray St &amp; Greenwich St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Old Slip &amp; Front St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Pioneer St &amp; Van Brunt St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Riverside Dr &amp; W 82 St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;South St &amp; Gouverneur Ln&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Suffolk St &amp; Stanton St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Vernon Blvd &amp; 41 Rd&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;W 113 St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;W 20 St &amp; 11 Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;W 43 St &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;W 70 St &amp; Amsterdam Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;William St &amp; Pine St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;1 Ave &amp; E 110 St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;11 St &amp; 35 Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;28 Ave &amp; 35 St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;3 St &amp; Hoyt St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;34 Ave &amp; 21 St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;47 Ave &amp; Skillman Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;6 Ave &amp; Spring St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Astoria Park S &amp; Shore Blvd&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bergen St &amp; Vanderbilt Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Broadway &amp; W 37 St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Carlton Ave &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Central Park West &amp; W 100 St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Columbia Heights &amp; Cranberry St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Crown St &amp; Bedford Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Driggs Ave &amp; N Henry St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;E 12 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;E 35 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;E 55 St &amp; Lexington Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;E 78 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;E 98 St &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Eastern Pkwy &amp; Franklin Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Frost St &amp; Meeker Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Grand St &amp; Elizabeth St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Hicks St &amp; Montague St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Lafayette Ave &amp; Classon Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Lewis Ave &amp; Madison St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Madison St &amp; Clinton St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Morningside Dr &amp; Amsterdam Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;NYCBS DEPOT - DELANCEY&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Pike St &amp; E Broadway&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Riverside Blvd &amp; W 67 St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Smith St &amp; 3 St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sterling Pl &amp; 7 Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Vernon Blvd &amp; 10 St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;W 106 St &amp; Central Park West&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;W 18 St &amp; 9 Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;W 41 St &amp; 8 Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;W 63 St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;West End Ave &amp; W 107 St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;1 Ave &amp; E 62 St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;10 St &amp; 7 Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;24 St &amp; 41 Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;3 Ave &amp; E 112 St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;31 St &amp; Newtown Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;44 Dr &amp; Jackson Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;6 Ave &amp; 9 St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Amsterdam Ave &amp; W 79 St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bedford Ave &amp; Nassau Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Broadway &amp; W 25 St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Cambridge Pl &amp; Gates Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Central Park West &amp; W 68 St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Clinton St &amp; Grand St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Crescent St &amp; 34 Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Douglass St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;E 11 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;E 118 St &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;E 31 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;E 53 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;E 74 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;E 91 St &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Frederick Douglass Blvd &amp; W 129 St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Graham Ave &amp; Withers St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Henry St &amp; Degraw St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kent Ave &amp; S 11 St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Leonard St &amp; Maujer St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Macon St &amp; Nostrand Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Monroe St &amp; Tompkins Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Newtown Ave &amp; 23 St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Pershing Square North&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Railroad Ave &amp; Kay Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Schermerhorn St &amp; Bond St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Stanton St &amp; Norfolk St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;University Pl &amp; E 8 St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;W 100 St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;W 16 St &amp; 8 Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;W 35 St &amp; Dyer Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;W 54 St &amp; 9 Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Water - Whitehall Plaza&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;2 Ave &amp; E 122 St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;21 St &amp; 38 Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;31 Ave &amp; Crescent St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;37 Ave &amp; 35 St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;5 Ave &amp; E 88 St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;8 Ave &amp; W 52 St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Adelphi St &amp; Myrtle Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bank St &amp; Washington St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Broadway &amp; 12 St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Broadway &amp; Whipple St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Cathedral Pkwy &amp; Broadway&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Clermont Ave &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Commerce St &amp; Van Brunt St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;DeKalb Ave &amp; Skillman St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;E 114 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;E 20 St &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;E 47 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;E 5 St &amp; Avenue C&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;E 66 St &amp; Madison Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;E 85 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Franklin Ave &amp; Myrtle Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Fulton St &amp; William St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Halsey St &amp; Tompkins Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Jackson St &amp; Leonard St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Lenox Ave &amp; W 111 St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Liberty St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Mercer St &amp; Spring St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;N 11 St &amp; Kent Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Park Pl &amp; Church St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Prospect Park West &amp; 8 St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Rogers Ave &amp; Sterling St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;St Marks Pl &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Underhill Ave &amp; Pacific St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;W 11 St &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;W 26 St &amp; 8 Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;W 47 St &amp; 10 Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;W 84 St &amp; Columbus Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Warren St &amp; Court St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Wyckoff St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;1 Ave &amp; E 16 St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;21 St &amp; Queens Plaza North&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;3 Ave &amp; E 71 St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;31 St &amp; 35 Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;40 Ave &amp; 9 St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;5 Ave &amp; E 126 St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;9 Ave &amp; W 45 St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Allen St &amp; Rivington St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Barrow St &amp; Hudson St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Broadway &amp; E 14 St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Butler St &amp; Court St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Center Blvd &amp; 51 Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Clinton Ave &amp; Flushing Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Cooper Square &amp; Astor Pl&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ditmars Blvd &amp; 19 St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;E 116 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;E 25 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;E 48 St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;E 68 St &amp; Madison Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;E 7 St &amp; Avenue A&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;E 88 St &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Franklin St &amp; W Broadway&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Gold St &amp; Frankfort St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Hanson Pl &amp; Ashland Pl&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;John St &amp; William St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lenox Ave &amp; W 126 St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Little West St &amp; 1 Pl&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Metropolitan Ave &amp; Meeker Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Nassau Ave &amp; Newell St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Pearl St &amp; Anchorage Pl&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Pulaski St &amp; Marcus Garvey Blvd&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;S 4 St &amp; Wythe Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;St. Nicholas Ave &amp; W 126 St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Union Ave &amp; Wallabout St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;W 13 St &amp; 7 Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;W 27 St &amp; 10 Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;W 52 St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;W 89 St &amp; Columbus Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Washington Park&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;2 Ave &amp; E 99 St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;21 St &amp; 31 Dr&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;31 Ave &amp; 30 St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;36 Ave &amp; 10 St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;5 Ave &amp; E 73 St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;8 Ave &amp; W 31 St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Adam Clayton Powell Blvd &amp; W 123 St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Baltic St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bond St &amp; Fulton St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Broadway &amp; W 60 St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Carroll St &amp; Smith St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Classon Ave &amp; St Marks Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Columbus Ave &amp; W 95 St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;DeKalb Ave &amp; Hudson Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;E 109 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;E 2 St &amp; Avenue C&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;E 20 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;E 45 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;E 60 St &amp; York Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;E 84 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Forsyth St &amp; Canal St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Fulton St &amp; Utica Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Greenwich Ave &amp; Charles St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;India St &amp; West St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lawrence St &amp; Willoughby St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lexington Ave &amp; E 120 St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;McKibbin St &amp; Manhattan Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Myrtle Ave &amp; St Edwards St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Park Ave &amp; Marcus Garvey Blvd&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Pleasant Ave &amp; E 120 St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Rivington St &amp; Ridge St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;St James Pl &amp; Pearl St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tompkins Ave &amp; Hopkins St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Vesey Pl &amp; River Terrace&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;W 129 St &amp; Convent Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;W 24 St &amp; 7 Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;W 45 St &amp; 8 Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;W 82 St &amp; Central Park West&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Willoughby St &amp; Fleet St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;1 Ave &amp; E 68 St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;11 Ave &amp; W 27 St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;27 Ave &amp; 4 St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;3 Ave &amp; Schermerhorn St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;31 St &amp; Northern Blvd&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;45 Rd &amp; 11 St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;6 Ave &amp; 12 St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Amsterdam Ave &amp; W 82 St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bedford Ave &amp; S 9 St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Broadway &amp; W 29 St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Canal St &amp; Rutgers St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Central Park West &amp; W 72 St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Clinton St &amp; Joralemon St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Crescent St &amp; 35 Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Douglass St &amp; 4 Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;E 11 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;E 123 St &amp; Lexington Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;E 32 St &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;E 53 St &amp; Madison Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;E 75 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;E 93 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Front St &amp; Gold St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Grand Army Plaza &amp; Central Park S&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Henry St &amp; Grand St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kingston Ave &amp; Herkimer St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Leonard St &amp; Nassau Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Madison Ave &amp; E 82 St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Montgomery St &amp; Franklin Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Norfolk St &amp; Broome St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Pershing Square South&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Reade St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Schermerhorn St &amp; Court St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;State St &amp; Smith St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;University Pl &amp; E 14 St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;W 100 St &amp; Manhattan Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;W 16 St &amp; The High Line&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;W 37 St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;W 55 St &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Watts St &amp; Greenwich St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;14 St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;2 Ave &amp; E 31 St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;28 St &amp; 41 Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;35 Ave &amp; 37 St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;5 Ave &amp; 3 St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;58th St Depot&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;7 Ave &amp; Park Pl&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Avenue D &amp; E 3 St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bialystoker Pl &amp; Delancey St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Broadway &amp; W 51 St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Carroll St &amp; Bond St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cherry St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Columbia St &amp; Rivington St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Dean St &amp; Hoyt St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;E 106 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;E 16 St &amp; Irving Pl&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;E 2 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;E 43 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;E 58 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;E 81 St &amp; York Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;FDR Drive &amp; E 35 St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Fulton St &amp; Clermont Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Greene Ave &amp; Nostrand Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Humboldt St &amp; Varet St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Lafayette St &amp; Jersey St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Lexington Ave &amp; E 36 St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Marcy Ave &amp; Lafayette Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Murray St &amp; West St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Pacific St &amp; Classon Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Pitt St &amp; Stanton St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Riverside Dr &amp; W 91 St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;South St &amp; Whitehall St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sullivan Pl &amp; Bedford Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Vernon Blvd &amp; 47 Rd&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;W 116 St &amp; Amsterdam Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;W 21 St &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;W 43 St &amp; 10 Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;W 74 St &amp; Columbus Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Willoughby Ave &amp; Hall St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;14 St &amp; 7 Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;2 Ave &amp; E 72 St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;30 Ave &amp; 21 St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;35 St &amp; 34 Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;5 Ave &amp; E 29 St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;7 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Adam Clayton Powell Blvd &amp; W 115 St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Avenue D &amp; E 8 St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Boerum St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Broadway &amp; W 53 St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Carroll St &amp; Columbia St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Christopher St &amp; Greenwich St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Columbia St &amp; W 9 St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Degraw St &amp; Hoyt St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;E 106 St &amp; Lexington Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;E 17 St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;E 2 St &amp; Avenue A&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;E 43 St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;E 58 St &amp; Madison Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;E 82 St &amp; East End Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Flushing Ave &amp; Vanderbilt Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Fulton St &amp; Grand Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Greene Ave &amp; Throop Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Huron St &amp; Franklin St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;LaGuardia Pl &amp; W 3 St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Lexington Ave &amp; E 63 St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Market St &amp; Cherry St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Myrtle Ave &amp; Lewis Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Pacific St &amp; Nevins St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Plaza St West &amp; Flatbush Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Riverside Dr &amp; W 104 St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Spruce St &amp; Nassau St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Sullivan St &amp; Washington Sq&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Vernon Blvd &amp; 50 Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;W 116 St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;W 22 St &amp; 8 Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;W 44 St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;W 76 St &amp; Columbus Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Willoughby Ave &amp; Tompkins Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;2 Ave &amp; E 104 St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;21 St &amp; 36 Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;31 Ave &amp; 34 St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;36 Ave &amp; 31 St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;5 Ave &amp; E 78 St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;8 Ave &amp; W 33 St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Adam Clayton Powell Blvd &amp; W 126 St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bank St &amp; Hudson St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Broad St &amp; Bridge St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Broadway &amp; W 122 St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Carroll St &amp; Washington Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Clermont Ave &amp; Lafayette Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Columbus Ave &amp; W 103 St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;DeKalb Ave &amp; S Portland Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;E 110 St &amp; Madison Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;E 20 St &amp; FDR Drive&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;E 4 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;E 47 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;E 65 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;E 84 St &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Franklin Ave &amp; Empire Blvd&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Fulton St &amp; Waverly Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Greenwich St &amp; W Houston St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Jackson Ave &amp; 46 Rd&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Lefferts Pl &amp; Franklin Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Lexington Ave &amp; E 127 St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Mercer St &amp; Bleecker St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;N 6 St &amp; Bedford Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Park Ave &amp; St Edwards St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;President St &amp; Henry St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Roebling St &amp; N 4 St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;St Johns Pl &amp; Washington Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Underhill Ave &amp; Lincoln Pl&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;W 25 St &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;W 4 St &amp; 7 Ave S&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;W 46 St &amp; 11 Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;W 84 St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;W Broadway &amp; Spring Street&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Wolcott St &amp; Dwight St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;21 St &amp; 43 Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;3 Ave &amp; 14 St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;31 Ave &amp; Steinway St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;37 St &amp; 24 Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;5 Ave &amp; E 93 St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;9 Ave &amp; W 22 St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Albany Ave &amp; Fulton St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Banker St &amp; Meserole Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Broadway &amp; Battery Pl&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Bus Slip &amp; State St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Catherine St &amp; Monroe St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Cleveland Pl &amp; Spring St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Concord St &amp; Bridge St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;DeKalb Ave &amp; Vanderbilt Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;E 115 St &amp; Lexington Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;E 23 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;E 47 St &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;E 6 St &amp; Avenue B&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;E 67 St &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;E 85 St &amp; York Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Franklin Ave &amp; St Marks Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Gansevoort St &amp; Hudson St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Hancock St &amp; Bedford Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Jay St &amp; Tech Pl&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Lenox Ave &amp; W 115 St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Lincoln Pl &amp; Classon Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Meserole Ave &amp; Manhattan Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;N 12 St &amp; Bedford Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Park Pl &amp; Franklin Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Prospect Pl &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;S 3 St &amp; Bedford Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;St Marks Pl &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Union Ave &amp; Jackson St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;W 12 St &amp; W 4 St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;W 26 St &amp; 10 Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;W 49 St &amp; 8 Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;W 87 St &amp; Amsterdam Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Washington Ave &amp; Greene Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Wyckoff St &amp; Bond St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;1 Pl &amp; Clinton St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;11 St &amp; 43 Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;28 Ave &amp; 44 St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;3 St &amp; Prospect Park West&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;34 Ave &amp; 38 St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;48 Ave &amp; 5 St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;6 Ave &amp; W 33 St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Atlantic Ave &amp; Fort Greene Pl&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Berkeley Pl &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Broadway &amp; W 38 St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Carmine St &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Central Park West &amp; W 102 St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Columbia St &amp; Degraw St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cumberland St &amp; Lafayette Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Duane St &amp; Greenwich St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;E 102 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;E 13 St &amp; Avenue A&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;E 39 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;E 58 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;E 81 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Eastern Pkwy &amp; Washington Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Frost St &amp; Meeker St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Grand St &amp; Greene St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Hope St &amp; Union Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Lafayette Ave &amp; Fort Greene Pl&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Lexington Ave &amp; Classon Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Madison St &amp; Montgomery St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mott St &amp; Prince St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;NYCBS Depot - GOW&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Pike St &amp; Monroe St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Riverside Dr &amp; W 72 St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Smith St &amp; 9 St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sterling Pl &amp; Bedford Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Vernon Blvd &amp; 30 Rd&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;W 107 St &amp; Columbus Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;W 20 St &amp; 7 Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;W 42 St &amp; 8 Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;W 64 St &amp; Thelonious Monk Circle&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;West St &amp; Chambers St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;1 Ave &amp; E 78 St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;11 Ave &amp; W 41 St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;27 Ave &amp; 9 St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;3 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;31 St &amp; Thomson Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;46 Ave &amp; 5 St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;6 Ave &amp; Broome St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Amsterdam Ave &amp; W 119 St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bergen St &amp; Flatbush Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Broadway &amp; W 32 St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Carlton Ave &amp; Dean St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Central Park West &amp; W 76 St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Clinton St &amp; Union St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Crescent St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Driggs Ave &amp; Lorimer St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;E 11 St &amp; Avenue B&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;E 128 St &amp; Madison Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;E 33 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;E 55 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;E 76 St &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;E 97 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Front St &amp; Maiden Ln&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Grand Army Plaza &amp; Plaza St West&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Henry St &amp; Poplar St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kosciuszko St &amp; Nostrand Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Lewis Ave &amp; Decatur St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Madison Ave &amp; E 99 St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Montrose Ave &amp; Bushwick Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;North Moore St &amp; Greenwich St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Pier 40 - Hudson River Park&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Richards St &amp; Delavan St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Scholes St &amp; Manhattan Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Steinway St &amp; 23 Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Van Brunt St &amp; Van Dyke St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;W 104 St &amp; Amsterdam Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;W 17 St &amp; 9 Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;W 37 St &amp; 10 Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;W 56 St &amp; 10 Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;West Drive &amp; Prospect Park West&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;1 Ave &amp; E 18 St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;23 Ave &amp; 27 St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;3 Ave &amp; E 72 St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;31 St &amp; Astoria Blvd&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;40 Ave &amp; Crescent St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;5 St &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;9 St &amp; 44 Rd&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Allen St &amp; Stanton St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bayard St &amp; Baxter St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Broadway &amp; E 22 St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Cadman Plaza E &amp; Johnson St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Central Park North &amp; Adam Clayton Powell Blvd&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Clinton Ave &amp; Myrtle Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Court St &amp; Nelson St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Division Av &amp; Hooper St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;E 118 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;E 25 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;E 51 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;E 71 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;E 89 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;E 9 St &amp; Avenue C&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Frederick Douglass Blvd &amp; W 112 St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Graham Ave &amp; Conselyea St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Harrison St &amp; Hudson St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Johnson St &amp; Gold St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Lenox Ave &amp; W 130 St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Lorimer St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Milton St &amp; Franklin St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Nassau Ave &amp; Russell St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Pearl St &amp; Hanover Square&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Putnam Ave &amp; Nostrand Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;S 5 Pl &amp; S 5 St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Stagg St &amp; Union Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Union St &amp; 4 Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;W 15 St &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;W 31 St &amp; 7 Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;W 52 St &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;W 90 St &amp; Amsterdam Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Washington Pl &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;19 St &amp; 24 Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;2 Ave &amp; E 96 St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;31 Ave &amp; 14 St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;35 St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;5 Ave &amp; E 63 St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;7 St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Adam Clayton Powell Blvd &amp; W 118 St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Avenue D &amp; E 12 St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bond St &amp; Bergen St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Broadway &amp; W 56 St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Carroll St &amp; Franklin Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Clark St &amp; Henry St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Columbus Ave &amp; W 72 St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Degraw St &amp; Smith St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;E 106 St &amp; Madison Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;E 19 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;E 2 St &amp; Avenue B&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;E 44 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;E 59 St &amp; Madison Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;E 84 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Forsyth St &amp; Broome St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Fulton St &amp; Rockwell Pl&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Greenpoint Ave &amp; Manhattan Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;India St &amp; Manhattan Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Laight St &amp; Hudson St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Lexington Ave &amp; E 111 St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;McGuinness Blvd &amp; Eagle St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Myrtle Ave &amp; Marcy Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Park Ave &amp; E 124 St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Pleasant Ave &amp; E 116 St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Rivington St &amp; Chrystie St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;St James Pl &amp; Oliver St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Throop Ave &amp; Myrtle Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Verona Pl &amp; Fulton St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;W 120 St &amp; Claremont Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;W 22 St &amp; 10 Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;W 45 St &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;W 78 St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Willoughby Ave &amp; Walworth St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;12 Ave &amp; W 40 St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;2 Ave &amp; 9 St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;28 St &amp; 36 Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;34 St &amp; 35 Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;4 Ave &amp; 2 St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;48 Ave &amp; 30 Pl&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;6 St &amp; 7 Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Atlantic Ave &amp; Furman St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Berkeley Pl &amp; 7 Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Broadway &amp; W 41 St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Carroll St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Centre St &amp; Chambers St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Columbia St &amp; Kane St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Dean St &amp; 4 Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Duffield St &amp; Willoughby St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;E 102 St &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;E 15 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;E 39 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;E 58 St &amp; 1 Ave (NE Corner)&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;E 81 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Eckford St &amp; Engert Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Fulton St &amp; Adams St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Grand St &amp; Havemeyer St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Howard St &amp; Centre St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Lafayette Ave &amp; St James Pl&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Lexington Ave &amp; E 26 St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Maiden Ln &amp; Pearl St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Mt Morris Park W &amp; W 120 St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Old Fulton St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Pioneer St &amp; Richards St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Riverside Dr &amp; W 78 St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;South End Ave &amp; Liberty St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sterling St &amp; Bedford Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Vernon Blvd &amp; 31 Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;W 110 St &amp; Amsterdam Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;W 20 St &amp; 8 Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;W 42 St &amp; Dyer Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;W 67 St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;West Thames St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;1 Ave &amp; E 30 St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;10 Hudson Yards&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;24 Ave &amp; 26 St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;3 Ave &amp; E 95 St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;31 St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;43 St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;5 St &amp; 51 Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Amsterdam Ave &amp; W 66 St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bayard St &amp; Leonard St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Broadway &amp; Moylan Pl&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Cadman Plaza E &amp; Red Cross Pl&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Central Park S &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Clinton St &amp; 4 Place&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Court St &amp; State St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Division Ave &amp; Marcy Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;E 10 St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;E 118 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;E 27 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;E 51 St &amp; Lexington Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;E 72 St &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;E 89 St &amp; York Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Frederick Douglass Blvd &amp; W 115 St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Graham Ave &amp; Grand St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Henry St &amp; Atlantic Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Kane St &amp; Clinton St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Leonard St &amp; Boerum St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;MacDougal St &amp; Prince St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Monroe St &amp; Bedford Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Nassau St &amp; Navy St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Peck Slip &amp; Front St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Putnam Ave &amp; Throop Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;S Portland Ave &amp; Atlantic Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Stanton St &amp; Chrystie St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Union St &amp; Bedford Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;W 15 St &amp; 7 Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;W 33 St &amp; 7 Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;W 52 St &amp; 11 Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;W 92 St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Washington Pl &amp; Broadway&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:end station name:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;1 Ave &amp; E 94 St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;11 Ave &amp; W 59 St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;27 St &amp; Hunter St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;3 St &amp; 7 Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;34 Ave &amp; 13 St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;47 Ave &amp; 31 St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;6 Ave &amp; Canal St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Amsterdam Ave &amp; W 125 St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Bergen St &amp; Smith St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Broadway &amp; W 36 St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Carlton Ave &amp; Dean St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Central Park West &amp; W 76 St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Clinton St &amp; Union St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Crescent St &amp; 35 Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Douglass St &amp; 4 Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;E 11 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;E 123 St &amp; Lexington Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;E 32 St &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;E 53 St &amp; Madison Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;E 75 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;E 93 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Frederick Douglass Blvd &amp; W 129 St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Graham Ave &amp; Withers St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Henry St &amp; Bay St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kent Ave &amp; N 7 St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Leonard St &amp; Church St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;MacDougal St &amp; Washington Sq&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Monroe St &amp; Bedford Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Nassau St &amp; Navy St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Paulus Hook&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Prospect Pl &amp; Underhill Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;S 3 St &amp; Bedford Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;St Marks Pl &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Union Ave &amp; Jackson St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;W 12 St &amp; W 4 St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;W 26 St &amp; 10 Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;W 49 St &amp; 8 Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;W 87 St &amp; Amsterdam Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Washington Ave &amp; Greene Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Wyckoff St &amp; Bond St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;21 St &amp; Hoyt Ave S&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;3 Ave &amp; E 62 St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;31 St &amp; 23 Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;39 St &amp; 2 Ave - Citi Bike HQ at Industry City&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;5 Ave &amp; E 103 St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;9 Ave &amp; W 28 St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Allen St &amp; Hester St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Barclay St &amp; Church St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Broadway &amp; Berry St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Bushwick Ave &amp; Powers St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Catherine St &amp; Monroe St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Cleveland Pl &amp; Spring St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Commerce St &amp; Van Brunt St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;DeKalb Ave &amp; Skillman St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;E 114 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;E 20 St &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;E 47 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;E 5 St &amp; Avenue C&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;E 66 St &amp; Madison Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;E 85 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Franklin Ave &amp; Empire Blvd&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Fulton St &amp; Waverly Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Greenwich St &amp; W Houston St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;India St &amp; West St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Lawrence St &amp; Willoughby St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Lexington Ave &amp; E 120 St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;McGuinness Blvd &amp; Eagle St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Myrtle Ave &amp; Marcy Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Pacific St &amp; Classon Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Pioneer St &amp; Van Brunt St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Riverside Dr &amp; W 82 St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;South End Ave &amp; Liberty St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Sterling St &amp; Bedford Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Vernon Blvd &amp; 31 Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;W 110 St &amp; Amsterdam Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;W 20 St &amp; 8 Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;W 42 St &amp; Dyer Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;W 67 St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;West Thames St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;1 Ave &amp; E 44 St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;10 St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;24 Ave &amp; 29 St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;3 Ave &amp; E 100 St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;31 St &amp; Hoyt Ave N&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;44 Dr &amp; 21 St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;5 St &amp; Market St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Amsterdam Ave &amp; W 73 St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bedford Ave &amp; Bergen St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Broadway &amp; Roebling St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Cadman Plaza E &amp; Tillary St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Central Park S &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Clinton St &amp; 4 Place&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Court St &amp; Nelson St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Division Av &amp; Hooper St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;E 118 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;E 25 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;E 51 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;E 71 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;E 89 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;E 9 St &amp; Avenue C&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Franklin St &amp; W Broadway&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Gold St &amp; Frankfort St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Hanson Pl &amp; Ashland Pl&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Jay St &amp; York St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Lenox Ave &amp; W 117 St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Lispenard St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Meserole Ave &amp; Manhattan Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;N 12 St &amp; Bedford Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Park Ave &amp; St Edwards St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Pleasant Ave &amp; E 120 St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Rivington St &amp; Chrystie St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;St James Pl &amp; Oliver St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Throop Ave &amp; Myrtle Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Verona Pl &amp; Fulton St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;W 120 St &amp; Claremont Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;W 22 St &amp; 10 Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;W 45 St &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;W 78 St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Willoughby Ave &amp; Walworth St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;12 St &amp; 4 Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;2 Ave &amp; 36 St - Citi Bike HQ at Industry City&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;28 St &amp; 38 Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;35 Ave &amp; 10 St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;4 Ave &amp; 9 St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;49 Ave &amp; 21 St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;7 Ave &amp; Central Park South&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Avenue C &amp; E 18 St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Berry St &amp; N 8 St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Broadway &amp; W 49 St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Carroll St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Centre St &amp; Chambers St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Columbia St &amp; Kane St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cumberland St &amp; Lafayette Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Duane St &amp; Greenwich St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;E 102 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;E 13 St &amp; Avenue A&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;E 39 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;E 58 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;E 81 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Eastern Pkwy &amp; Washington Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Frost St &amp; Meeker Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Grand St &amp; Elizabeth St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Henry St &amp; W 9 St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Kosciuszko St &amp; Tompkins Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Lewis Ave &amp; Kosciuszko St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Madison Ave &amp; E 120 St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Montrose Ave &amp; Bushwick Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Norfolk St &amp; Broome St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Perry St &amp; Bleecker St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Queens Plaza North &amp; Crescent St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;S Portland Ave &amp; Atlantic Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Stanton St &amp; Chrystie St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Union St &amp; Bedford Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;W 15 St &amp; 7 Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;W 33 St &amp; 7 Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;W 52 St &amp; 11 Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;W 92 St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Washington Pl &amp; Broadway&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;1 Ave &amp; E 110 St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;11 St &amp; 35 Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;28 Ave &amp; 35 St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;3 St &amp; Hoyt St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;34 Ave &amp; 21 St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;47 Ave &amp; Skillman Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;6 Ave &amp; Spring St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Astoria Park S &amp; Shore Blvd&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bergen St &amp; Vanderbilt Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Broadway &amp; W 37 St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Carlton Ave &amp; Flushing Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Central Park West &amp; W 85 St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Coffey St &amp; Conover St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Crescent St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Driggs Ave &amp; Lorimer St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;E 11 St &amp; Avenue B&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;E 128 St &amp; Madison Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;E 33 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;E 55 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;E 76 St &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;E 97 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Front St &amp; Gold St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Grand Army Plaza &amp; Central Park S&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Henry St &amp; Degraw St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kent Ave &amp; S 11 St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Leonard St &amp; Maujer St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Macon St &amp; Nostrand Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Monroe St &amp; Classon Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Newark Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Pearl St &amp; Anchorage Pl&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Pulaski St &amp; Marcus Garvey Blvd&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;S 4 St &amp; Rodney St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;St Nicholas Ave &amp; Manhattan Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Union Ave &amp; N 12 St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;W 13 St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;W 27 St &amp; 7 Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;W 50 St &amp; 9 Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;W 88 St &amp; West End Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Washington Ave &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Wythe Ave &amp; Metropolitan Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;1 Ave &amp; E 62 St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;10 St &amp; 7 Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;24 St &amp; 41 Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;3 Ave &amp; E 112 St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;31 St &amp; Newtown Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;44 Dr &amp; Jackson Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;6 Ave &amp; 9 St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Amsterdam Ave &amp; W 79 St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bedford Ave &amp; Nassau Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Broadway &amp; W 25 St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Cadman Plaza West &amp; Montague St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Central Park W &amp; W 96 St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Clinton St &amp; Centre St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Court St &amp; State St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Division Ave &amp; Marcy Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;E 10 St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;E 118 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;E 27 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;E 51 St &amp; Lexington Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;E 72 St &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;E 89 St &amp; York Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Frederick Douglass Blvd &amp; W 112 St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Graham Ave &amp; Conselyea St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Harborside&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;John St &amp; William St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Lenox Ave &amp; W 126 St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Little West St &amp; 1 Pl&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Metropolitan Ave &amp; Bedford Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;N 15 St &amp; Wythe Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Park Pl &amp; Church St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;President St &amp; Henry St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Rivington St &amp; Ridge St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;St James Pl &amp; Pearl St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Tompkins Ave &amp; Hopkins St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Vesey Pl &amp; River Terrace&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;W 129 St &amp; Convent Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;W 24 St &amp; 7 Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;W 45 St &amp; 8 Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;W 82 St &amp; Central Park West&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Willoughby St &amp; Fleet St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;2 Ave &amp; E 122 St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;21 St &amp; 38 Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;31 Ave &amp; Crescent St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;37 Ave &amp; 35 St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;5 Ave &amp; E 88 St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;8 Ave &amp; W 52 St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Adelphi St &amp; Myrtle Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bank St &amp; Washington St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Broadway &amp; 12 St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Broadway &amp; Whipple St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Carroll St &amp; Washington Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Clermont Ave &amp; Lafayette Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Columbus Ave &amp; W 103 St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;DeKalb Ave &amp; Hudson Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;E 109 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;E 2 St &amp; Avenue C&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;E 20 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;E 45 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;E 60 St &amp; York Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;E 84 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Forsyth St &amp; Broome St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Fulton St &amp; Rockwell Pl&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Greenpoint Ave &amp; Manhattan Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Huron St &amp; Franklin St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;LaGuardia Pl &amp; W 3 St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Lexington Ave &amp; E 63 St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Marin Light Rail&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Murray St &amp; West St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Old Fulton St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Pike St &amp; Monroe St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Riverside Dr &amp; W 72 St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Smith St &amp; 3 St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Sterling Pl &amp; 7 Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Vernon Blvd &amp; 10 St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;W 106 St &amp; Central Park West&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;W 18 St &amp; 9 Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;W 41 St &amp; 8 Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;W 63 St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;West End Ave &amp; W 107 St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;1 Ave &amp; E 16 St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;21 St &amp; Queens Plaza North&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;3 Ave &amp; E 71 St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;31 St &amp; 35 Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;40 Ave &amp; 9 St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;5 Ave &amp; E 126 St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;9 Ave &amp; W 45 St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Allen St &amp; Rivington St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Barrow St &amp; Hudson St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Broadway &amp; E 14 St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Butler St &amp; Court St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Center Blvd &amp; 48 Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Cliff St &amp; Fulton St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Concord St &amp; Bridge St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;DeKalb Ave &amp; Vanderbilt Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;E 115 St &amp; Lexington Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;E 23 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;E 47 St &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;E 6 St &amp; Avenue B&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;E 67 St &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;E 85 St &amp; York Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Franklin Ave &amp; Myrtle Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Fulton St &amp; William St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Halsey St &amp; Tompkins Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Jackson Ave &amp; 46 Rd&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lefferts Pl &amp; Franklin Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lexington Ave &amp; E 127 St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;McKibbin St &amp; Manhattan Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Myrtle Ave &amp; St Edwards St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Pacific St &amp; Nevins St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Pitt St &amp; Stanton St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Riverside Dr &amp; W 91 St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;South St &amp; Gouverneur Ln&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Suffolk St &amp; Stanton St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Vernon Blvd &amp; 41 Rd&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;W 113 St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;W 20 St &amp; 11 Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;W 43 St &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;W 70 St &amp; Amsterdam Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;William St &amp; Pine St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;2 Ave &amp; E 99 St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;21 St &amp; 31 Dr&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;31 Ave &amp; 30 St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;36 Ave &amp; 10 St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;5 Ave &amp; E 73 St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;8 Ave &amp; W 31 St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Adam Clayton Powell Blvd &amp; W 123 St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Baltic St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bond St &amp; Fulton St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Broadway &amp; W 60 St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Carroll St &amp; Franklin Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Clark St &amp; Henry St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Columbus Ave &amp; W 72 St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Degraw St &amp; Hoyt St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;E 106 St &amp; Lexington Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;E 17 St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;E 2 St &amp; Avenue A&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;E 43 St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;E 58 St &amp; Madison Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;E 82 St &amp; East End Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;FDR Drive &amp; E 35 St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Fulton St &amp; Clermont Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Greene Ave &amp; Nostrand Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Hudson St &amp; Reade St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lafayette St &amp; E 8 St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lexington Ave &amp; E 29 St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Marcus Garvey Blvd &amp; Macon St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mt Morris Park W &amp; W 120 St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;NYCBS Depot - GOW&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Pierrepont St &amp; Monroe Pl&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Richardson St &amp; N Henry St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Scholes St &amp; Manhattan Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Steinway St &amp; 23 Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Van Brunt St &amp; Van Dyke St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;W 104 St &amp; Amsterdam Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;W 17 St &amp; 9 Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;W 37 St &amp; 10 Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;W 56 St &amp; 10 Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;West Drive &amp; Prospect Park West&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;1 Ave &amp; E 68 St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;11 Ave &amp; W 27 St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;27 Ave &amp; 4 St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;3 Ave &amp; Schermerhorn St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;31 St &amp; Northern Blvd&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;45 Rd &amp; 11 St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;6 Ave &amp; 12 St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Amsterdam Ave &amp; W 82 St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bedford Ave &amp; S 9 St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Broadway &amp; W 29 St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cambridge Pl &amp; Gates Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Central Park West &amp; W 68 St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Clinton St &amp; Grand St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Crescent St &amp; 30 Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Division St &amp; Bowery&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;E 10 St &amp; Avenue A&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;E 118 St &amp; Madison Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;E 30 St &amp; Park Ave S&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;E 52 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;E 72 St &amp; York Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;E 91 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Frederick Douglass Blvd &amp; W 115 St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Graham Ave &amp; Grand St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Harrison St &amp; Hudson St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Johnson St &amp; Gold St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Lenox Ave &amp; W 130 St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Lorimer St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Metropolitan Ave &amp; Meeker Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Nassau Ave &amp; Newell St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Park Pl &amp; Franklin Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Prospect Park West &amp; 8 St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Roebling St &amp; N 4 St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;St Johns Pl &amp; Washington Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Underhill Ave &amp; Lincoln Pl&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;W 25 St &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;W 4 St &amp; 7 Ave S&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;W 46 St &amp; 11 Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;W 84 St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;W Broadway &amp; Spring Street&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Wolcott St &amp; Dwight St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;14 St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;2 Ave &amp; E 31 St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;28 St &amp; 41 Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;35 Ave &amp; 37 St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;5 Ave &amp; 3 St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;58th St Depot&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;7 Ave &amp; Park Pl&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Avenue D &amp; E 3 St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bialystoker Pl &amp; Delancey St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Broadway &amp; W 51 St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Carroll St &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Centre St &amp; Worth St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Columbia St &amp; Lorraine St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Dean St &amp; 4 Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Duffield St &amp; Willoughby St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;E 102 St &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;E 15 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;E 39 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;E 58 St &amp; 1 Ave (NE Corner)&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;E 81 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Eckford St &amp; Engert Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Frost St &amp; Meeker St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Grand St &amp; Greene St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Hicks St &amp; Montague St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Lafayette Ave &amp; Classon Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Lewis Ave &amp; Madison St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Madison St &amp; Clinton St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Morningside Ave &amp; W 123 St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;North Moore St &amp; Greenwich St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Pershing Square North&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Railroad Ave &amp; Kay Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;S Portland Ave &amp; Hanson Pl&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Stanton St &amp; Mangin St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Union St &amp; Nevins St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;W 15 St &amp; 10 Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;W 34 St &amp; 11 Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;W 53 St &amp; 10 Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;W 95 St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Washington St &amp; Gansevoort St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;14 St &amp; 7 Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;2 Ave &amp; E 72 St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;30 Ave &amp; 21 St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;35 St &amp; 34 Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;5 Ave &amp; E 29 St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;7 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Adam Clayton Powell Blvd &amp; W 115 St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Avenue D &amp; E 8 St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Boerum St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Broadway &amp; W 53 St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Carroll St &amp; Bond St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cherry St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Columbia St &amp; Rivington St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Dean St &amp; Franklin Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Dwight St &amp; Van Dyke St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;E 103 St &amp; Lexington Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;E 16 St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;E 41 St &amp; Madison Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;E 58 St &amp;  1 Ave (NW Corner)&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;E 81 St &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Emerson Pl &amp; Myrtle Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Fulton St &amp; Adams St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Grand St &amp; Havemeyer St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Hope St &amp; Union Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Lafayette Ave &amp; Fort Greene Pl&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Lexington Ave &amp; Classon Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Madison St &amp; Montgomery St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Morningside Dr &amp; Amsterdam Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Nostrand Ave &amp; Myrtle Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Pershing Square South&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Reade St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Schermerhorn St &amp; Bond St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Stanton St &amp; Norfolk St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;University Pl &amp; E 8 St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;W 100 St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;W 16 St &amp; 8 Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;W 35 St &amp; Dyer Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;W 54 St &amp; 9 Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Water - Whitehall Plaza&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;2 Ave &amp; E 104 St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;21 St &amp; 36 Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;31 Ave &amp; 34 St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;36 Ave &amp; 31 St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;5 Ave &amp; E 78 St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;8 Ave &amp; W 33 St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Adam Clayton Powell Blvd &amp; W 126 St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bank St &amp; Hudson St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Broad St &amp; Bridge St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Broadway &amp; W 122 St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Carroll St &amp; Smith St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Classon Ave &amp; St Marks Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Columbus Ave &amp; W 95 St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Degraw St &amp; Smith St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;E 106 St &amp; Madison Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;E 19 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;E 2 St &amp; Avenue B&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;E 44 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;E 59 St &amp; Madison Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;E 84 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Flushing Ave &amp; Vanderbilt Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Fulton St &amp; Grand Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Greene Ave &amp; Throop Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Humboldt St &amp; Varet St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Lafayette St &amp; Jersey St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Lexington Ave &amp; E 36 St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Marcy Ave &amp; Lafayette Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Murray St &amp; Greenwich St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;NYCBS Depot BAL - DYR&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Pike St &amp; E Broadway&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Riverside Blvd &amp; W 67 St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Sigourney St &amp; Columbia St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Steinway St &amp; 28 Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Van Brunt St &amp; Wolcott St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;W 106 St &amp; Amsterdam Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;W 18 St &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;W 38 St &amp; 8 Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;W 59 St &amp; 10 Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;West End Ave &amp; W 94 St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;21 St &amp; 43 Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;3 Ave &amp; 14 St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;31 Ave &amp; Steinway St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;37 St &amp; 24 Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;5 Ave &amp; E 93 St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;9 Ave &amp; W 22 St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Albany Ave &amp; Fulton St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Banker St &amp; Meserole Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Broadway &amp; Battery Pl&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Bus Slip &amp; State St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Cathedral Pkwy &amp; Broadway&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Clermont Ave &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Columbus Drive&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;DeKalb Ave &amp; S Portland Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;E 110 St &amp; Madison Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;E 20 St &amp; FDR Drive&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;E 4 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;E 47 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;E 65 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;E 84 St &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Forsyth St &amp; Canal St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Fulton St &amp; Utica Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Greenwich Ave &amp; Charles St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;India St &amp; Manhattan Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Laight St &amp; Hudson St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Lexington Ave &amp; E 111 St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Market St &amp; Cherry St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Myrtle Ave &amp; Lewis Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Old Slip &amp; Front St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Pioneer St &amp; Richards St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Riverside Dr &amp; W 78 St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Smith St &amp; 9 St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Sterling Pl &amp; Bedford Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Vernon Blvd &amp; 30 Rd&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;W 107 St &amp; Columbus Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;W 20 St &amp; 7 Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;W 42 St &amp; 8 Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;W 64 St &amp; Thelonious Monk Circle&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;West St &amp; Chambers St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;1 Pl &amp; Clinton St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;11 St &amp; 43 Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;28 Ave &amp; 44 St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;3 St &amp; Prospect Park West&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;34 Ave &amp; 38 St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;48 Ave &amp; 5 St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;6 Ave &amp; W 33 St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Atlantic Ave &amp; Fort Greene Pl&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Berkeley Pl &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Broadway &amp; W 38 St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Carlton Ave &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Central Park West &amp; W 100 St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Columbia Heights &amp; Cranberry St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Crescent St &amp; Ditmars Blvd&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Driggs Ave &amp; N 9 St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;E 11 St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;E 33 St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;E 55 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;E 77 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;E 97 St &amp; Madison Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;East End Ave &amp; E 86 St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Front St &amp; Maiden Ln&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Grand Army Plaza &amp; Plaza St West&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Henry St &amp; Grand St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Kingston Ave &amp; Herkimer St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Leonard St &amp; Nassau Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Madison Ave &amp; E 82 St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Monroe St &amp; Tompkins Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Newton Rd &amp; 44 St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Pearl St &amp; Hanover Square&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Putnam Ave &amp; Nostrand Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;S 4 St &amp; Wythe Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;St. Nicholas Ave &amp; W 126 St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Union Ave &amp; Wallabout St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;W 13 St &amp; 7 Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;W 27 St &amp; 10 Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;W 52 St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;W 89 St &amp; Columbus Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Washington Park&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;1 Ave &amp; E 78 St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;11 Ave &amp; W 41 St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;27 Ave &amp; 9 St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;3 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;31 St &amp; Thomson Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;46 Ave &amp; 5 St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;6 Ave &amp; Broome St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Amsterdam Ave &amp; W 119 St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bergen St &amp; Flatbush Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Broadway &amp; W 32 St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Canal St &amp; Rutgers St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Central Park West &amp; W 72 St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Clinton St &amp; Joralemon St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Crescent St &amp; 34 Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Douglass St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;E 11 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;E 118 St &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;E 31 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;E 53 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;E 74 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;E 91 St &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Frederick Douglass Blvd &amp; W 117 St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Graham Ave &amp; Herbert St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Henry St &amp; Atlantic Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kane St &amp; Clinton St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Leonard St &amp; Boerum St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;MacDougal St &amp; Prince St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Milton St &amp; Franklin St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Nassau Ave &amp; Russell St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Park Pl &amp; Vanderbilt Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Prospect Pl &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Rogers Ave &amp; Sterling St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;St Marks Pl &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Underhill Ave &amp; Pacific St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;W 11 St &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;W 26 St &amp; 8 Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;W 47 St &amp; 10 Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;W 84 St &amp; Columbus Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Warren St &amp; Court St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Wyckoff St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;1 Ave &amp; E 18 St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;23 Ave &amp; 27 St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;3 Ave &amp; E 72 St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;31 St &amp; Astoria Blvd&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;40 Ave &amp; Crescent St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;5 St &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;9 St &amp; 44 Rd&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Allen St &amp; Stanton St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bayard St &amp; Baxter St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Broadway &amp; E 22 St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Cadman Plaza E &amp; Johnson St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Center Blvd &amp; 51 Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Clinton Ave &amp; Flushing Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Congress St &amp; Clinton St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Devoe St &amp; Lorimer St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;E 115 St &amp; Madison Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;E 24 St &amp; Park Ave S&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;E 48 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;E 6 St &amp; Avenue D&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;E 68 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;E 88 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Franklin Ave &amp; St Marks Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Gansevoort St &amp; Hudson St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Hancock St &amp; Bedford Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Jackson St &amp; Leonard St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Lenox Ave &amp; W 111 St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Liberty St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mercer St &amp; Bleecker St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;N 6 St &amp; Bedford Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Park Ave &amp; E 124 St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Plaza St West &amp; Flatbush Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Riverside Dr &amp; W 104 St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;South St &amp; Whitehall St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Sullivan Pl &amp; Bedford Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Vernon Blvd &amp; 47 Rd&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;W 116 St &amp; Amsterdam Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;W 21 St &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;W 43 St &amp; 10 Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;W 74 St &amp; Columbus Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Willoughby Ave &amp; Hall St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;19 St &amp; 24 Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;2 Ave &amp; E 96 St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;31 Ave &amp; 14 St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;35 St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;5 Ave &amp; E 63 St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;7 St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Adam Clayton Powell Blvd &amp; W 118 St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Avenue D &amp; E 12 St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bond St &amp; Bergen St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Broadway &amp; W 56 St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Carroll St &amp; Columbia St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Christopher St &amp; Greenwich St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Columbia St &amp; W 9 St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Dean St &amp; Hoyt St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;E 106 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;E 16 St &amp; Irving Pl&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;E 2 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;E 43 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;E 58 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;E 81 St &amp; York Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Essex Light Rail&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Fulton St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Great Jones St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Howard St &amp; Centre St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Lafayette Ave &amp; St James Pl&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Lexington Ave &amp; E 26 St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Maiden Ln &amp; Pearl St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mott St &amp; Prince St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;NYCBS DEPOT - DELANCEY&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Pier 40 - Hudson River Park&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Richards St &amp; Delavan St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Schermerhorn St &amp; Court St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;State St &amp; Smith St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;University Pl &amp; E 14 St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;W 100 St &amp; Manhattan Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;W 16 St &amp; The High Line&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;W 37 St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;W 55 St &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Watts St &amp; Greenwich St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;12 Ave &amp; W 40 St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;2 Ave &amp; 9 St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;28 St &amp; 36 Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;34 St &amp; 35 Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;4 Ave &amp; 2 St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;48 Ave &amp; 30 Pl&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;6 St &amp; 7 Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Atlantic Ave &amp; Furman St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Berkeley Pl &amp; 7 Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Broadway &amp; W 41 St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Carmine St &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Central Park West &amp; W 102 St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Columbia St &amp; Degraw St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Crown St &amp; Bedford Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Driggs Ave &amp; N Henry St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;E 12 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;E 35 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;E 55 St &amp; Lexington Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;E 78 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;E 98 St &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Eastern Pkwy &amp; Franklin Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Front St &amp; Washington St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Grand Ave &amp; Bergen St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Henry St &amp; Poplar St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Kosciuszko St &amp; Nostrand Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Lewis Ave &amp; Decatur St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Madison Ave &amp; E 99 St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Montgomery St &amp; Franklin Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Newtown Ave &amp; 23 St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Peck Slip &amp; Front St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Putnam Ave &amp; Throop Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;S 5 Pl &amp; S 5 St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Stagg St &amp; Union Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Union St &amp; 4 Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;W 15 St &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;W 31 St &amp; 7 Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;W 52 St &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;W 90 St &amp; Amsterdam Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Washington Pl &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;1 Ave &amp; E 30 St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;10 Hudson Yards&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;24 Ave &amp; 26 St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;3 Ave &amp; E 95 St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;31 St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;43 St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;5 St &amp; 51 Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Amsterdam Ave &amp; W 66 St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bayard St &amp; Leonard St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Broadway &amp; Moylan Pl&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Cadman Plaza E &amp; Red Cross Pl&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Central Park North &amp; Adam Clayton Powell Blvd&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Clinton Ave &amp; Myrtle Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Cooper Square &amp; Astor Pl&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Ditmars Blvd &amp; 19 St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;E 116 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;E 25 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;E 48 St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;E 68 St &amp; Madison Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;E 7 St &amp; Avenue A&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;E 88 St &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Franklin St &amp; Dupont St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Garfield Pl &amp; 8 Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Handlebar @ Gowanus&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Jay St &amp; Tech Pl&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Lenox Ave &amp; W 115 St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Lincoln Pl &amp; Classon Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mercer St &amp; Spring St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;N 11 St &amp; Kent Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Park Ave &amp; Marcus Garvey Blvd&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Pleasant Ave &amp; E 116 St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Riverview Park&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Spruce St &amp; Nassau St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Sullivan St &amp; Washington Sq&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Vernon Blvd &amp; 50 Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;W 116 St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;W 22 St &amp; 8 Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;W 44 St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;W 76 St &amp; Columbus Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Willoughby Ave &amp; Tompkins Ave&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='combined_tripdata_2019-jan-to-mar.csv' id='combined_tripdata_2019-jan-to-mar.csv_AF6A3C63C63B49CEAF86C47F0666035B'>
            <properties context=''>
              <relation connection='textscan.1xomtym08fyqvk1bduy4j0isn3uc' name='combined_tripdata_2019-jan-to-mar.csv' table='[combined_tripdata_2019-jan-to-mar#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='integer' name='tripduration' ordinal='0' />
                  <column datatype='datetime' name='starttime' ordinal='1' />
                  <column datatype='datetime' name='stoptime' ordinal='2' />
                  <column datatype='real' name='start station id' ordinal='3' />
                  <column datatype='string' name='start station name' ordinal='4' />
                  <column datatype='real' name='start station latitude' ordinal='5' />
                  <column datatype='real' name='start station longitude' ordinal='6' />
                  <column datatype='real' name='end station id' ordinal='7' />
                  <column datatype='string' name='end station name' ordinal='8' />
                  <column datatype='real' name='end station latitude' ordinal='9' />
                  <column datatype='real' name='end station longitude' ordinal='10' />
                  <column datatype='integer' name='bikeid' ordinal='11' />
                  <column datatype='string' name='usertype' ordinal='12' />
                  <column datatype='integer' name='birth year' ordinal='13' />
                  <column datatype='integer' name='gender' ordinal='14' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Average Age at Station'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Different stations that average age people bike</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='combined_tripdata_2019-jan-to-mar' name='federated.1ci9hct0n41gi71f5vkxs08n8zq0' />
          </datasources>
          <datasource-dependencies datasource='federated.1ci9hct0n41gi71f5vkxs08n8zq0'>
            <column caption='Age' datatype='integer' name='[Calculation_489836882665963522]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='2021 - [birth year]' />
            </column>
            <column-instance column='[Calculation_489836882665963522]' derivation='Avg' name='[avg:Calculation_489836882665963522:qk]' pivot='key' type='quantitative' />
            <column caption='Birth Year' datatype='integer' name='[birth year]' role='dimension' type='quantitative' />
            <column-instance column='[start station name]' derivation='None' name='[none:start station name:nk]' pivot='key' type='nominal' />
            <column caption='Start Station Name' datatype='string' name='[start station name]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1ci9hct0n41gi71f5vkxs08n8zq0].[none:start station name:nk]'>
            <groupfilter from='&quot;1 Ave &amp; E 110 St&quot;' function='range' level='[none:start station name:nk]' to='&quot;Wythe Ave &amp; Metropolitan Ave&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1ci9hct0n41gi71f5vkxs08n8zq0].[none:start station name:nk]' direction='ASC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1ci9hct0n41gi71f5vkxs08n8zq0].[avg:Calculation_489836882665963522:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.1ci9hct0n41gi71f5vkxs08n8zq0].[none:start station name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.1ci9hct0n41gi71f5vkxs08n8zq0].[avg:Calculation_489836882665963522:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.1ci9hct0n41gi71f5vkxs08n8zq0].[none:start station name:nk]</rows>
        <cols>[federated.1ci9hct0n41gi71f5vkxs08n8zq0].[avg:Calculation_489836882665963522:qk]</cols>
      </table>
      <simple-id uuid='{BF19DAC8-EAE1-4F59-BB85-CF891BA73ED3}' />
    </worksheet>
    <worksheet name='Bike utilization'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Bike Utilization, most likely due for repair or inspection</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='combined_tripdata_2019-jan-to-mar' name='federated.1ci9hct0n41gi71f5vkxs08n8zq0' />
          </datasources>
          <datasource-dependencies datasource='federated.1ci9hct0n41gi71f5vkxs08n8zq0'>
            <column caption='Trip Duration (Min)' datatype='real' name='[Calculation_489836882667237380]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[tripduration] /60' />
            </column>
            <column caption='Bikeid' datatype='integer' name='[bikeid]' role='measure' type='quantitative' />
            <column-instance column='[bikeid]' derivation='None' name='[none:bikeid:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_489836882667237380]' derivation='Sum' name='[sum:Calculation_489836882667237380:qk]' pivot='key' type='quantitative' />
            <column caption='Tripduration' datatype='integer' name='[tripduration]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1ci9hct0n41gi71f5vkxs08n8zq0].[sum:Calculation_489836882667237380:qk]' included-values='in-range'>
            <min>1.4833333333333334</min>
            <max>50000.0</max>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1ci9hct0n41gi71f5vkxs08n8zq0].[none:bikeid:ok]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1ci9hct0n41gi71f5vkxs08n8zq0].[sum:Calculation_489836882667237380:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.1ci9hct0n41gi71f5vkxs08n8zq0].[sum:Calculation_489836882667237380:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1ci9hct0n41gi71f5vkxs08n8zq0].[sum:Calculation_489836882667237380:qk]' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#f1f1f1</color>
                <color>#e5d7d4</color>
                <color>#dabeb9</color>
                <color>#cfa7a0</color>
                <color>#c49289</color>
                <color>#b97e73</color>
                <color>#ae6b5f</color>
                <color>#a35a4d</color>
                <color>#984a3c</color>
                <color>#8d3c2d</color>
                <color>#822f20</color>
              </color-palette>
            </encoding>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1ci9hct0n41gi71f5vkxs08n8zq0].[sum:Calculation_489836882667237380:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='1.4172928333282471' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1ci9hct0n41gi71f5vkxs08n8zq0].[none:bikeid:ok]</rows>
        <cols>[federated.1ci9hct0n41gi71f5vkxs08n8zq0].[sum:Calculation_489836882667237380:qk]</cols>
      </table>
      <simple-id uuid='{37722A03-1E25-4BD6-8F8D-8E4B1806178F}' />
    </worksheet>
    <worksheet name='End Stations'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Most Popular Locations for Destination</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='combined_tripdata_2019-jan-to-mar' name='federated.1ci9hct0n41gi71f5vkxs08n8zq0' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1ci9hct0n41gi71f5vkxs08n8zq0'>
            <column caption='Number of Records' datatype='integer' name='[Calculation_489836882667462661]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='1' />
            </column>
            <column-instance column='[Calculation_489836882667462661]' derivation='Count' name='[cnt:Calculation_489836882667462661:qk]' pivot='key' type='quantitative' />
            <column aggregation='Avg' caption='End Station Latitude' datatype='real' name='[end station latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' caption='End Station Longitude' datatype='real' name='[end station longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column caption='End Station Name' datatype='string' name='[end station name]' role='dimension' type='nominal' />
            <column-instance column='[end station latitude]' derivation='None' name='[none:end station latitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[end station longitude]' derivation='None' name='[none:end station longitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[end station name]' derivation='None' name='[none:end station name:nk]' pivot='key' type='nominal' />
            <column-instance column='[start station name]' derivation='None' name='[none:start station name:nk]' pivot='key' type='nominal' />
            <column caption='Start Station Name' datatype='string' name='[start station name]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1ci9hct0n41gi71f5vkxs08n8zq0].[none:start station name:nk]'>
            <groupfilter from='&quot;1 Ave &amp; E 110 St&quot;' function='range' level='[none:start station name:nk]' to='&quot;Wythe Ave &amp; Metropolitan Ave&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1ci9hct0n41gi71f5vkxs08n8zq0].[none:start station name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='normal' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <size column='[federated.1ci9hct0n41gi71f5vkxs08n8zq0].[cnt:Calculation_489836882667462661:qk]' />
              <lod column='[federated.1ci9hct0n41gi71f5vkxs08n8zq0].[none:end station name:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#d3b348' />
                <format attr='size' value='1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1ci9hct0n41gi71f5vkxs08n8zq0].[none:end station latitude:qk]</rows>
        <cols>[federated.1ci9hct0n41gi71f5vkxs08n8zq0].[none:end station longitude:qk]</cols>
      </table>
      <simple-id uuid='{E26C97B1-A02E-4091-B9E8-2C1635AEF9AB}' />
    </worksheet>
    <worksheet name='Hour Demand'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Average Hourly bikes demand throughout the first quarter of 2019</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='combined_tripdata_2019-jan-to-mar' name='federated.1ci9hct0n41gi71f5vkxs08n8zq0' />
          </datasources>
          <datasource-dependencies datasource='federated.1ci9hct0n41gi71f5vkxs08n8zq0'>
            <column-instance column='[start station id]' derivation='Count' name='[cnt:start station id:qk]' pivot='key' type='quantitative' />
            <column-instance column='[starttime]' derivation='Hour' name='[hr:starttime:qk]' pivot='key' type='quantitative' />
            <column caption='Start Station Id' datatype='real' name='[start station id]' role='measure' type='quantitative' />
            <column caption='Starttime' datatype='datetime' name='[starttime]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.1ci9hct0n41gi71f5vkxs08n8zq0].[cnt:start station id:qk]</rows>
        <cols>[federated.1ci9hct0n41gi71f5vkxs08n8zq0].[hr:starttime:qk]</cols>
      </table>
      <simple-id uuid='{23A5CA20-C686-4204-BA90-602C2B55D9AE}' />
    </worksheet>
    <worksheet name='Male vs Female Distance'>
      <table>
        <view>
          <datasources>
            <datasource caption='combined_tripdata_2019-jan-to-mar' name='federated.1ci9hct0n41gi71f5vkxs08n8zq0' />
          </datasources>
          <datasource-dependencies datasource='federated.1ci9hct0n41gi71f5vkxs08n8zq0'>
            <column caption='Gender(Text)' datatype='string' name='[Calculation_489836882666475523]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [gender] = 0 THEN &apos;UNKNOWN&apos;&#10;ELSEIF [gender] = 1 THEN &apos; MALE&apos;&#10;ELSEIF [gender] = 2 THEN &apos;FEMALE&apos;&#10;ELSE &apos;UNKNOWN&apos; END' />
            </column>
            <column caption='Trip Duration (Min)' datatype='real' name='[Calculation_489836882667237380]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[tripduration] /60' />
            </column>
            <column caption='Number of Records' datatype='integer' name='[Calculation_489836882667462661]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='1' />
            </column>
            <column-instance column='[Calculation_489836882667237380]' derivation='Avg' name='[avg:Calculation_489836882667237380:qk]' pivot='key' type='quantitative' />
            <column caption='Gender' datatype='integer' name='[gender]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_489836882666475523]' derivation='None' name='[none:Calculation_489836882666475523:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_489836882667462661]' derivation='Sum' name='[sum:Calculation_489836882667462661:qk]' pivot='key' type='quantitative' />
            <column caption='Tripduration' datatype='integer' name='[tripduration]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.1ci9hct0n41gi71f5vkxs08n8zq0].[sum:Calculation_489836882667462661:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#69aaa5' />
                <format attr='mark-transparency' value='255' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#000000' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1ci9hct0n41gi71f5vkxs08n8zq0].[avg:Calculation_489836882667237380:qk]</rows>
        <cols>[federated.1ci9hct0n41gi71f5vkxs08n8zq0].[none:Calculation_489836882666475523:nk]</cols>
      </table>
      <simple-id uuid='{DA1FE110-DA13-4E61-8C5A-2B7C95EC4EDE}' />
    </worksheet>
    <worksheet name='Pie Male vs female'>
      <table>
        <view>
          <datasources>
            <datasource caption='combined_tripdata_2019-jan-to-mar' name='federated.1ci9hct0n41gi71f5vkxs08n8zq0' />
          </datasources>
          <datasource-dependencies datasource='federated.1ci9hct0n41gi71f5vkxs08n8zq0'>
            <column caption='Gender(Text)' datatype='string' name='[Calculation_489836882666475523]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [gender] = 0 THEN &apos;UNKNOWN&apos;&#10;ELSEIF [gender] = 1 THEN &apos; MALE&apos;&#10;ELSEIF [gender] = 2 THEN &apos;FEMALE&apos;&#10;ELSE &apos;UNKNOWN&apos; END' />
            </column>
            <column caption='Number of Records' datatype='integer' name='[Calculation_489836882667462661]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='Gender' datatype='integer' name='[gender]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_489836882666475523]' derivation='None' name='[none:Calculation_489836882666475523:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_489836882667462661]' derivation='Sum' name='[sum:Calculation_489836882667462661:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[federated.1ci9hct0n41gi71f5vkxs08n8zq0].[none:Calculation_489836882666475523:nk]' />
              <size column='[federated.1ci9hct0n41gi71f5vkxs08n8zq0].[sum:Calculation_489836882667462661:qk]' />
              <wedge-size column='[federated.1ci9hct0n41gi71f5vkxs08n8zq0].[sum:Calculation_489836882667462661:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{E977DE0A-76C1-4C0E-A187-0D97F9D5A187}' />
    </worksheet>
    <worksheet name='Start Stations'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Most Popular Locations of a Journey</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='combined_tripdata_2019-jan-to-mar' name='federated.1ci9hct0n41gi71f5vkxs08n8zq0' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1ci9hct0n41gi71f5vkxs08n8zq0'>
            <column caption='Number of Records' datatype='integer' name='[Calculation_489836882667462661]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='1' />
            </column>
            <column-instance column='[start station latitude]' derivation='Avg' name='[avg:start station latitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[start station longitude]' derivation='Avg' name='[avg:start station longitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_489836882667462661]' derivation='Count' name='[cnt:Calculation_489836882667462661:qk]' pivot='key' type='quantitative' />
            <column-instance column='[start station name]' derivation='None' name='[none:start station name:nk]' pivot='key' type='nominal' />
            <column aggregation='Avg' caption='Start Station Latitude' datatype='real' name='[start station latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' caption='Start Station Longitude' datatype='real' name='[start station longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column caption='Start Station Name' datatype='string' name='[start station name]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1ci9hct0n41gi71f5vkxs08n8zq0].[none:start station name:nk]'>
            <groupfilter from='&quot;1 Ave &amp; E 110 St&quot;' function='range' level='[none:start station name:nk]' to='&quot;Wythe Ave &amp; Metropolitan Ave&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1ci9hct0n41gi71f5vkxs08n8zq0].[none:start station name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='normal' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <lod column='[federated.1ci9hct0n41gi71f5vkxs08n8zq0].[none:start station name:nk]' />
              <size column='[federated.1ci9hct0n41gi71f5vkxs08n8zq0].[cnt:Calculation_489836882667462661:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='0.84558010101318359' />
                <format attr='has-halo' value='true' />
                <format attr='mark-color' value='#e799b3' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1ci9hct0n41gi71f5vkxs08n8zq0].[avg:start station latitude:qk]</rows>
        <cols>[federated.1ci9hct0n41gi71f5vkxs08n8zq0].[avg:start station longitude:qk]</cols>
      </table>
      <simple-id uuid='{0B9C5CDC-3272-4DF5-8868-7F88BBA1D21A}' />
    </worksheet>
    <worksheet name='Trip Times'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Trip record hours demand during the month</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='combined_tripdata_2019-jan-to-mar' name='federated.1ci9hct0n41gi71f5vkxs08n8zq0' />
          </datasources>
          <datasource-dependencies datasource='federated.1ci9hct0n41gi71f5vkxs08n8zq0'>
            <column caption='Gender(Text)' datatype='string' name='[Calculation_489836882666475523]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [gender] = 0 THEN &apos;UNKNOWN&apos;&#10;ELSEIF [gender] = 1 THEN &apos; MALE&apos;&#10;ELSEIF [gender] = 2 THEN &apos;FEMALE&apos;&#10;ELSE &apos;UNKNOWN&apos; END' />
            </column>
            <column caption='Number of Records' datatype='integer' name='[Calculation_489836882667462661]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='1' />
            </column>
            <column-instance column='[starttime]' derivation='Day' name='[dy:starttime:ok]' pivot='key' type='ordinal' />
            <column caption='Gender' datatype='integer' name='[gender]' role='measure' type='quantitative' />
            <column-instance column='[starttime]' derivation='Hour' name='[hr:starttime:ok]' pivot='key' type='ordinal' />
            <column-instance column='[starttime]' derivation='Month' name='[mn:starttime:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_489836882666475523]' derivation='None' name='[none:Calculation_489836882666475523:nk]' pivot='key' type='nominal' />
            <column caption='Starttime' datatype='datetime' name='[starttime]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_489836882667462661]' derivation='Sum' name='[sum:Calculation_489836882667462661:qk]' pivot='key' type='quantitative' />
            <column-instance column='[starttime]' derivation='Year' name='[yr:starttime:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <encodings>
              <color column='[federated.1ci9hct0n41gi71f5vkxs08n8zq0].[none:Calculation_489836882666475523:nk]' />
              <shape column='[federated.1ci9hct0n41gi71f5vkxs08n8zq0].[yr:starttime:ok]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.60000002384185791' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1ci9hct0n41gi71f5vkxs08n8zq0].[sum:Calculation_489836882667462661:qk]</rows>
        <cols>([federated.1ci9hct0n41gi71f5vkxs08n8zq0].[mn:starttime:ok] / ([federated.1ci9hct0n41gi71f5vkxs08n8zq0].[dy:starttime:ok] / [federated.1ci9hct0n41gi71f5vkxs08n8zq0].[hr:starttime:ok]))</cols>
      </table>
      <simple-id uuid='{B35F29D0-A2B8-4D56-90E9-63218C8ADB09}' />
    </worksheet>
    <worksheet name='trip Durations'>
      <layout-options>
        <title>
          <formatted-text>
            <run>The average trip durations for different age</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='combined_tripdata_2019-jan-to-mar' name='federated.1ci9hct0n41gi71f5vkxs08n8zq0' />
          </datasources>
          <datasource-dependencies datasource='federated.1ci9hct0n41gi71f5vkxs08n8zq0'>
            <column caption='Trip Duration (Min)' datatype='real' name='[Calculation_489836882667237380]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[tripduration] /60' />
            </column>
            <column caption='Number of Records' datatype='integer' name='[Calculation_489836882667462661]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='1' />
            </column>
            <column-instance column='[Calculation_489836882667237380]' derivation='Avg' name='[avg:Calculation_489836882667237380:qk]' pivot='key' type='quantitative' />
            <column caption='Birth Year' datatype='integer' name='[birth year]' role='dimension' type='quantitative' />
            <column-instance column='[birth year]' derivation='None' name='[none:birth year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_489836882667462661]' derivation='Sum' name='[sum:Calculation_489836882667462661:qk]' pivot='key' type='quantitative' />
            <column caption='Tripduration' datatype='integer' name='[tripduration]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1ci9hct0n41gi71f5vkxs08n8zq0].[none:birth year:qk]' included-values='in-range'>
            <min>1930</min>
            <max>2003</max>
          </filter>
          <slices>
            <column>[federated.1ci9hct0n41gi71f5vkxs08n8zq0].[none:birth year:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.1ci9hct0n41gi71f5vkxs08n8zq0].[sum:Calculation_489836882667462661:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#72b966' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1ci9hct0n41gi71f5vkxs08n8zq0].[avg:Calculation_489836882667237380:qk]</rows>
        <cols>[federated.1ci9hct0n41gi71f5vkxs08n8zq0].[none:birth year:qk]</cols>
      </table>
      <simple-id uuid='{476F0953-BA2D-4B27-AFF8-F9E4CDA4CAA7}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Dashboard 1'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='4' w='100000' x='0' y='0'>
          <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98000' id='7' param='horz' w='98400' x='800' y='1000'>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='98000' id='5' w='53500' x='800' y='1000'>
              <zone h='98000' id='3' name='Start Stations' w='53500' x='800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' fixed-size='449' h='98000' id='6' is-fixed='true' param='vert' w='44900' x='54300' y='1000'>
              <zone h='98000' id='10' name='End Stations' w='44900' x='54300' y='1000'>
                <layout-cache minheight='244' minwidth='202' type-h='scalable' type-w='scalable' />
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone _.fcp.SetMembershipControl.false...type='size' _.fcp.SetMembershipControl.true...type-v2='size' h='14625' id='8' name='Start Stations' pane-specification-id='0' param='[federated.1ci9hct0n41gi71f5vkxs08n8zq0].[cnt:Calculation_489836882667462661:qk]' w='17200' x='36200' y='83250' />
        <zone _.fcp.SetMembershipControl.false...type='size' _.fcp.SetMembershipControl.true...type-v2='size' h='12250' id='11' name='End Stations' pane-specification-id='0' param='[federated.1ci9hct0n41gi71f5vkxs08n8zq0].[cnt:Calculation_489836882667462661:qk]' w='16600' x='82200' y='85125' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='750' minheight='750' sizing-mode='vscroll' />
          <zones>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='17' w='100000' x='0' y='0'>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98000' id='16' param='vert' w='98400' x='800' y='1000'>
                <zone fixed-size='280' h='98000' id='3' is-fixed='true' name='Start Stations' w='53500' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='size' _.fcp.SetMembershipControl.true...type-v2='size' h='14625' id='8' name='Start Stations' pane-specification-id='0' param='[federated.1ci9hct0n41gi71f5vkxs08n8zq0].[cnt:Calculation_489836882667462661:qk]' w='17200' x='36200' y='83250'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='98000' id='10' is-fixed='true' name='End Stations' w='44900' x='54300' y='1000'>
                  <layout-cache minheight='244' minwidth='202' type-h='scalable' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='size' _.fcp.SetMembershipControl.true...type-v2='size' h='12250' id='11' name='End Stations' pane-specification-id='0' param='[federated.1ci9hct0n41gi71f5vkxs08n8zq0].[cnt:Calculation_489836882667462661:qk]' w='16600' x='82200' y='85125'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{2777E70D-DBA6-4C27-B2EA-BB1ACCE6F1FC}' />
    </dashboard>
    <dashboard name='Journey' type='storyboard'>
      <style />
      <size maxheight='964' maxwidth='1016' minheight='964' minwidth='1016' />
      <zones>
        <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='2' w='100000' x='0' y='0'>
          <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98340' id='1' param='vert' removable='false' w='98426' x='787' y='830'>
            <zone _.fcp.SetMembershipControl.false...type='title' _.fcp.SetMembershipControl.true...type-v2='title' h='3423' id='3' w='98426' x='787' y='830' />
            <zone _.fcp.SetMembershipControl.false...type='flipboard-nav' _.fcp.SetMembershipControl.true...type-v2='flipboard-nav' h='10477' id='4' is-fixed='true' paired-zone-id='5' removable='false' w='98426' x='787' y='4253' />
            <zone _.fcp.SetMembershipControl.false...type='flipboard' _.fcp.SetMembershipControl.true...type-v2='flipboard' h='84440' id='5' paired-zone-id='4' removable='false' w='98426' x='787' y='14730'>
              <flipboard active-id='2' nav-type='caption' show-nav-arrows='true'>
                <story-points>
                  <story-point caption='Most people visit here to start they journey' captured-sheet='Start Stations' id='1'>
                    <capturedDeltas>
                      <worksheet name='Start Stations'>
                        <selection-collection>
                          <tuple-selection>
                            <tuple-reference>
                              <tuple-descriptor>
                                <pane-descriptor>
                                  <x-fields>
                                    <field>[federated.1ci9hct0n41gi71f5vkxs08n8zq0].[avg:start station longitude:qk]</field>
                                  </x-fields>
                                  <y-fields>
                                    <field>[federated.1ci9hct0n41gi71f5vkxs08n8zq0].[avg:start station latitude:qk]</field>
                                  </y-fields>
                                </pane-descriptor>
                                <columns>
                                  <field>[federated.1ci9hct0n41gi71f5vkxs08n8zq0].[avg:start station latitude:qk]</field>
                                  <field>[federated.1ci9hct0n41gi71f5vkxs08n8zq0].[avg:start station longitude:qk]</field>
                                  <field>[federated.1ci9hct0n41gi71f5vkxs08n8zq0].[cnt:Calculation_489836882667462661:qk]</field>
                                  <field>[federated.1ci9hct0n41gi71f5vkxs08n8zq0].[none:start station name:nk]</field>
                                </columns>
                              </tuple-descriptor>
                              <tuple>
                                <value>40.751873000000579</value>
                                <value>-73.977706000001845</value>
                                <value>27847</value>
                                <value>&quot;Pershing Square North&quot;</value>
                              </tuple>
                            </tuple-reference>
                          </tuple-selection>
                        </selection-collection>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point caption='most people ends their journey here' captured-sheet='End Stations' id='2'>
                    <currentDeltas>
                      <worksheet name='End Stations'>
                        <style delta-type='added'>
                          <style-rule element='axis'>
                            <encoding attr='space' class='0' field='[federated.1ci9hct0n41gi71f5vkxs08n8zq0].[none:end station latitude:qk]' field-type='quantitative' max='4990400.6701623024' min='4955158.7182686301' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
                            <encoding attr='space' class='0' field='[federated.1ci9hct0n41gi71f5vkxs08n8zq0].[none:end station longitude:qk]' field-type='quantitative' max='-8216027.640097497' min='-8252419.2658016114' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
                          </style-rule>
                        </style>
                        <selection-collection>
                          <tuple-selection>
                            <tuple-reference>
                              <tuple-descriptor>
                                <pane-descriptor>
                                  <x-fields>
                                    <field>[federated.1ci9hct0n41gi71f5vkxs08n8zq0].[none:end station longitude:qk]</field>
                                  </x-fields>
                                  <y-fields>
                                    <field>[federated.1ci9hct0n41gi71f5vkxs08n8zq0].[none:end station latitude:qk]</field>
                                  </y-fields>
                                </pane-descriptor>
                                <columns>
                                  <field>[federated.1ci9hct0n41gi71f5vkxs08n8zq0].[cnt:Calculation_489836882667462661:qk]</field>
                                  <field>[federated.1ci9hct0n41gi71f5vkxs08n8zq0].[none:end station latitude:qk]</field>
                                  <field>[federated.1ci9hct0n41gi71f5vkxs08n8zq0].[none:end station longitude:qk]</field>
                                  <field>[federated.1ci9hct0n41gi71f5vkxs08n8zq0].[none:end station name:nk]</field>
                                </columns>
                              </tuple-descriptor>
                              <tuple>
                                <value>28017</value>
                                <value>40.751872999999996</value>
                                <value>-73.977706000000012</value>
                                <value>&quot;Pershing Square North&quot;</value>
                              </tuple>
                            </tuple-reference>
                          </tuple-selection>
                        </selection-collection>
                      </worksheet>
                    </currentDeltas>
                    <capturedDeltas>
                      <worksheet name='End Stations'>
                        <selection-collection>
                          <tuple-selection>
                            <tuple-reference>
                              <tuple-descriptor>
                                <pane-descriptor>
                                  <x-fields>
                                    <field>[federated.1ci9hct0n41gi71f5vkxs08n8zq0].[none:end station longitude:qk]</field>
                                  </x-fields>
                                  <y-fields>
                                    <field>[federated.1ci9hct0n41gi71f5vkxs08n8zq0].[none:end station latitude:qk]</field>
                                  </y-fields>
                                </pane-descriptor>
                                <columns>
                                  <field>[federated.1ci9hct0n41gi71f5vkxs08n8zq0].[cnt:Calculation_489836882667462661:qk]</field>
                                  <field>[federated.1ci9hct0n41gi71f5vkxs08n8zq0].[none:end station latitude:qk]</field>
                                  <field>[federated.1ci9hct0n41gi71f5vkxs08n8zq0].[none:end station longitude:qk]</field>
                                  <field>[federated.1ci9hct0n41gi71f5vkxs08n8zq0].[none:end station name:nk]</field>
                                </columns>
                              </tuple-descriptor>
                              <tuple>
                                <value>28017</value>
                                <value>40.751872999999996</value>
                                <value>-73.977706000000012</value>
                                <value>&quot;Pershing Square North&quot;</value>
                              </tuple>
                            </tuple-reference>
                          </tuple-selection>
                        </selection-collection>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                </story-points>
              </flipboard>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <simple-id uuid='{9801E397-1601-45FD-98D4-3C7A0B4C5521}' />
    </dashboard>
  </dashboards>
  <windows source-height='51'>
    <window class='worksheet' maximized='true' name='Start Stations'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1ci9hct0n41gi71f5vkxs08n8zq0].[none:start station name:nk]' type='highlighter' />
            <card pane-specification-id='0' param='[federated.1ci9hct0n41gi71f5vkxs08n8zq0].[cnt:Calculation_489836882667462661:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1ci9hct0n41gi71f5vkxs08n8zq0].[none:start station name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{DBFA467F-0A3D-46D3-895B-A252004576B3}' />
    </window>
    <window class='worksheet' name='End Stations'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1ci9hct0n41gi71f5vkxs08n8zq0].[cnt:Calculation_489836882667462661:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1ci9hct0n41gi71f5vkxs08n8zq0].[none:end station name:nk]</field>
            <field>[federated.1ci9hct0n41gi71f5vkxs08n8zq0].[none:start station name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{DD664EEB-350C-48DB-9640-A04EB07B2800}' />
    </window>
    <window class='worksheet' name='trip Durations'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1ci9hct0n41gi71f5vkxs08n8zq0].[none:Calculation_489836882665963522:qk]</field>
            <field>[federated.1ci9hct0n41gi71f5vkxs08n8zq0].[none:birth year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{1E9137FE-FB9E-4C1B-80B2-A6479F5FDF47}' />
    </window>
    <window class='worksheet' name='Trip Times'>
      <cards>
        <edge name='left'>
          <strip size='146'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1ci9hct0n41gi71f5vkxs08n8zq0].[none:Calculation_489836882666475523:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.1ci9hct0n41gi71f5vkxs08n8zq0].[yr:starttime:ok]' type='shape' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1ci9hct0n41gi71f5vkxs08n8zq0].[dy:starttime:ok]</field>
            <field>[federated.1ci9hct0n41gi71f5vkxs08n8zq0].[hr:starttime:ok]</field>
            <field>[federated.1ci9hct0n41gi71f5vkxs08n8zq0].[mn:starttime:ok]</field>
            <field>[federated.1ci9hct0n41gi71f5vkxs08n8zq0].[none:Calculation_489836882666475523:nk]</field>
            <field>[federated.1ci9hct0n41gi71f5vkxs08n8zq0].[qr:starttime:ok]</field>
            <field>[federated.1ci9hct0n41gi71f5vkxs08n8zq0].[yr:starttime:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B46127C9-D9EB-488F-BC00-4FC7E3F87D67}' />
    </window>
    <window class='worksheet' name='Hour Demand'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1ci9hct0n41gi71f5vkxs08n8zq0].[thr:starttime:ok]</field>
            <field>[federated.1ci9hct0n41gi71f5vkxs08n8zq0].[yr:starttime:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{DFC9031D-2410-4396-9551-8D643E36269D}' />
    </window>
    <window class='worksheet' name='Average Age at Station'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1ci9hct0n41gi71f5vkxs08n8zq0].[none:start station name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{548643DF-3943-4629-ABD2-7ABFA2605669}' />
    </window>
    <window class='worksheet' name='Pie Male vs female'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1ci9hct0n41gi71f5vkxs08n8zq0].[none:Calculation_489836882666475523:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.1ci9hct0n41gi71f5vkxs08n8zq0].[sum:Calculation_489836882667462661:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1ci9hct0n41gi71f5vkxs08n8zq0].[none:Calculation_489836882666475523:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C77A8852-76CB-4DD3-AF56-C5CE62753AFA}' />
    </window>
    <window class='worksheet' name='Male vs Female Distance'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-height' />
        <highlight>
          <color-one-way>
            <field>[federated.1ci9hct0n41gi71f5vkxs08n8zq0].[none:Calculation_489836882666475523:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{4A2D2A8A-FA0B-4DAB-9F6B-B658AB2CCD68}' />
    </window>
    <window class='worksheet' name='Bike utilization'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1ci9hct0n41gi71f5vkxs08n8zq0].[sum:Calculation_489836882667237380:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='0' param='[federated.1ci9hct0n41gi71f5vkxs08n8zq0].[sum:Calculation_489836882667237380:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1ci9hct0n41gi71f5vkxs08n8zq0].[ctd:bikeid:qk]</field>
            <field>[federated.1ci9hct0n41gi71f5vkxs08n8zq0].[none:bikeid:ok]</field>
            <field>[federated.1ci9hct0n41gi71f5vkxs08n8zq0].[none:bikeid:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{9489452F-386A-44FD-9BF2-19FEB49C431C}' />
    </window>
    <window class='dashboard' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='End Stations'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Start Stations'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{D1B1057C-F561-4200-8D15-D539D5985BE9}' />
    </window>
    <window class='dashboard' name='Journey'>
      <viewpoints />
      <active id='-1' />
      <simple-id uuid='{C9EFAD96-F9A6-4FEB-9C07-5DAFBFE03E17}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Average Age at Station' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Bike utilization' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAACFUlEQVR4nO3TMQEAIAzAMMC/5yFjRxMFfXpnZg5Eve0A2GQA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQD
      kGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBp
      BiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA
      0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDN
      AKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxA
      mgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKR9Y+0F
      fBUOM1sAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='End Stations' width='192'>
      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
      AAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Hour Demand' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAa3klEQVR4nO2d+W9b2XXHv+9xXyWKpERtluWRZEu2x2vi8UwnzmSQdEnTNJ0JkLRN0qZA
      UaAb+kuBokULFEX/gQL9oUWLNumSAGk6abNNk8kyk2RiZzbbsmRL1MZF3B/3/b13+wMtjTWi
      ZC6P5CXf/QCGYfrx8fDxft8959xzz+MIIQQMhkrhe20Ag9FLFBWAJEltn6NSqShgCYPRGGwG
      YKga6gTA89SZxBhg2GhjqBrqBKBEHMFgNAp1AmAuEKObUDfaOI7rtQkMFUGdANi6HKObUCcA
      WZZ7bQJjQJBkGQ988WOPoU4AGo2m1yYwBoREuog/+4dXEIhljjyGOgEwGEqxHU7h4rwHX/j2
      7SNda+oEwGIAhlJs7ibxkfc9AZtZjzce7NY9hgmAMbD4o2nMjA3hNz78JL7ygxWUK+KhY6gT
      AFsHYCiBJMuIp4twD1swYjfhqbPT+MZP1w8dx0YbYyDJ5MuwmHTQampD/KNPzePWahCxVP7A
      cdQJgKVBGUoQiGUx5bbv/1uv0+DFDy7hP767fMDNpk4AbCWYoQRboSRmxx0HXru8MI5yRcTK
      dmz/NSYAxkCyFUphdnz4wGs8x+HXP3weX3plGaJU8zSoEwCD0S6EEMRSeYwOWw7936TLjoUT
      LnzvrS0ATQhAlmUQQg783QlYOTSjXfKlKjiOg8mgO/R/HAe88IFFvHxrA7liBdpGTkgIgc/n
      QyaTgSiK0Gg0IITAYrEgm81ienoabrdbEeNZGpTRLmEhB8+IFUd502ajDh//udP40ivLjQkA
      AEwmE7LZLKxWK1KpFKanp5FIJBAOh7G0tARJkvZnh3aQZRmieHjBgsFolI1AAjNj9mPH0fWl
      CXz3zU1wjfQF2psBDAYDKpUKbDYbBEHA6OgoOI5DtVqFw+GAJEltF7NVq1XodIenLgajUf7h
      f97EBy7M4MyM69jjvAGhsRmA4zjMzMwceM3hcBxxdHuwdQBGu+wmsphw2R573NzUCH1ZIFYO
      zWgHUZJRqoiwmvQNHU+dABiMdggnchgdtoDnG1tPok4AzAVitMNOJIUZz1DDx1MnAAajHTZD
      qUMlEMdBnQDYOgCjHbZDKZz0DD/+wIew0cYYKLKFMuwWQ8PHUycAVgrBaJVktgirWQ9NgwEw
      QKEAmAt0GEmW8cN3ttl20cew9dD/b6aimLrRxsqhD5MvVvF3X72FcpXNjsexFUri1Hjj/j9A
      oQDYXe4wYSEHSZJxbyvaa1OohRBgc7e5DBBAoQDYOsBhwkIOl09P4K21cK9NoZa9PQCeEWtT
      76NOAKwU4jBhIYfnLp3EeiABid0g6lKsVKHXaY8sgT4K6gTAOEwkmceky44RuwnRZP7xb1Ah
      vkgGJ8bsTceQ1AmAuUAHIYQgnsrDPWzGxTkP3l5nblA96m2CbwTqBMA4iCQTlCoSLEYdLsyN
      4c5GhCUK6rAdSmG2iRXgPagTAFsHOEipIsKo14DjOHhGrEjnyyiW2Y65RyGEIBjPYtL9+D0A
      74WNNspJZotw2EwAamskc5MOrAeFHltFF8WyCHCouwn+cVAnAFYKcZBQIncgtXd5YRxvrYV6
      aBF91FqgmFt6L3UCYC7QQSLCQQEsTDnhDQiQZRYH7NFsCfSjUDfaWCnEQcJCDh7nuwKwmPSw
      mHSIplg6dI9aCcSACIBlOA6SyBThtJsOvHb+1BjubkR6ZBFdEAIE441tgq9HQwIghCAcDkMQ
      BASDQSSTSfj9fpTLZZTLZeRyuZY+vB5sHeBdCCFI5UoYthoPvH5xbgzveJkAAKAqSsgXK3DY
      jI8/uA4NN8Yym83w+/3I5/MYHx8Hz/NYX19HIBDAjRs39htjKQELhGsUylVoNTx47uA1GR02
      I57Oo1iqQK9Td+lILJWDw2Zseew1LIB79+5hcXER+Xwefr8fdrsdWq0WDocD+XweRqMRhJC2
      g1ie51kg/JB8SYTdbDh0PfQ8j1MTDmyEUjh7UpmWlP2KP5bFSc9wy2OmYQGcP38eGo0GGo0G
      V65cQalUgtlcSz3JsgyO4/b/tAMhhAXCD4ml8hh1WOpej0vz43hnPYxzs6M9sIwetkIpPDHR
      3CaYR2lINhzHwWq1wmQywWazQafTwWaz7QuCtTLsDGEhh7EjynsXZ1xY3YmpPmngi6QwM9Z4
      G5T3Qp2vwdyfdwkLeYwfIQCrSQ+dVoNUrtRlq+iBEIJktrS/Ut4KbLRRTETIYXTk8EMegNqs
      fEHl2aBktgSrSd9WIoA6AbAM0LtkC2XYzUe3+Lg8XyuLUKsbFIhlMPnIg/BagToBMBeohijJ
      KFUlmI1Hx1dTo3aEE1lIKi2LaGUT/HuhbrSxDFCNdL5US4Eecz14jsOMZxhboWQXLaMHb7C1
      TTCPQp0A1DqdvxchU8SI/fjgjuM4XJr3qLI6NJrMQ8gUWi6B2IM6AbBSiBoRIQ/PEQHwozz5
      xBjubkZVdeMghODL37uHF24s7T8JvlWoEwDrClEjJOTgGXn83c1mNoDnOaTz5S5YRQe+SBpC
      toiL8562z0WdABg1wolcQzMAAJybHcXypjqaZsmE4D9fWcannz93bHzUKNQJQE1T+XEkMgU4
      7Y3tcro078E7XnV0i1jZjkGr4TE/NaLI+ZgAKIQQglJFhMnQWKnWSc8wArEMquJgr6FIkoyv
      /GAFn/rQOcWyhdQJgK0D1DpBaDV8wwGeTquBZ8QKfzTTYct6y88e7GLcacXUaHuLX4/CRhuF
      xFIFuIfMTd3lBt0NqlQlfO1HD/DijSVFz0udAFgatJbjHnU0FgDvceaEC2v+RIcs6j0/eGcb
      T54ahXOote4PR0GdANhK8OGN8I3gGjYjnSuhMoDPECiUqnjlzS388tMLip+bCYBCwu9phdII
      Gp7H2IgVu4lsh6zqHd+8uY5nnzwB2zGFga1CnQDUDiGkJQEAwOkTTjzwxTtgVe/I5Mu4uRLE
      h6+e6sj5qRMAK4cGcsUKrCZ90+9bnHFjdWdwBEAIwVd+uIKPPb0Ag77h3btNQZ0A1J4GlQkB
      IYCmhRoXz4gVYSE3MGsp0WQe3oCAnzt/omOfQd1oU3sMkMyWMGQ9vgz6KAw6DexmA2KpQgcs
      6y6EEHz5+/fwyeeWwDfx2NNmOTSvyLKMl156CSMjI3C73Th79mzHPrweg3L3apVW/X+gdvOY
      nx7BeiDRdBqVJgghWN2JI50r4+Jc+wVvx3FoBuA4DtevX4ckSfttTwghCIVCiMfj2N3dRS6X
      g8/nQ7FYRLFYRDarXOZB7esA7QgA6P84oCpK+O/X7uPfv3MHn/+lix33COpGFtvb2+B5fl8A
      AGCxWOD3+6HT6RAIBDA1NYWNjQ34fD586EMf2u8Mp8QdXBTV+wCIUDyLxRlXy9dgZtSOf/+O
      0JfXcCeSwT99822cn3XjLz7zLHRavuPf45AAOI7DpUuX4PP5YDK9uyPpzp07WFpags/ng1ar
      RSKRgE6ng9vtRiaTgdtd61CmRBCr5j0B0WQez1851fI1sJg14MChKhEYO5Q5UZpKVcJ/vbqK
      1Z04fu9XrmJawVqfx1H3Ct29exeiKMLpdO6/dvXqVfA8jzNnzkCn06FSqcBgqC1M7HWGA9oP
      YmVZhlbbHz+c0hBCEEsX4B5urg7oUTgA81NOrPkTuNBh/7ldCCG474vjiy/fwVNnp/BXv3Wj
      7R1ezVJ3pM3OzuLll1/G7OwsgNqgNhoPdt99dHZQe+pSKUSpFv/otO3NgIsnXVjdiVMtgEKp
      ii9//x6CsQx+/xPva7u9SavUFUAwGMT8/Dx2d3fh8XT3IqpZTLUH4rU/+y2ecOHbN73U9Vnd
      6+T2k2U/Xr29g+evnMJnP/JkS2seSlE3DarX67G1tYXr16/3wibV0koVaD3sFgMK5SqqokxF
      +/RSRcSt1SBevb2DUkXEM+em8eefeRZD1tZ6+itJ3SC4VCrh0qVLEAQBY2NjXTVIkiTVxgCh
      NlOge3Ach2n3EPzRNJ6YVGbrYLOIkozlrSh++M42ArEsriyM43c+egnjzvbamCjNkSPtzp07
      uHbtWjdtAaBuFygs5DCh0ACpdY+Od10AuWIFX/vRfdzeiGBucgS/cG0eT0w4uh7cNkrdhbA9
      33FnZ6frBtHks3abiJA/sh16s5w+4cSDLm6QkQnBrdUg/uYLr8I9bMFff/45/O7HruD0tJPa
      wQ/UmQEIIRgaGsL4+Dgyme7vMVVzKUQiU4DrMd3gGmXCZUM0mUdVlNrOKh3HXmD7L99+BzzH
      4U8//TRGGuxmQQN1XaBAIABZlnHhwoVu26PaUghJkpEvVmG3KLPpQ8PzcNiMSGSKisQV9ZBk
      Gd9/axsv3/LiU8+fw+WF8b6bwQ/NTbIsQ5ZlRCIReL3erhuk1lXgYrmWAlVyAJ054cL9Dm2Q
      8Ucz+JsvvAZ/NI2//p3ncOX0RN8NfqDODMDzPEZGRnDx4kW2OaWLpPMlDCl0999jccaF7729
      jQ9ePKnYOStVCS/96D7ubETwuV+4gLnJkb4c+HvUjU4MBgMkSUIqleq2Pap1gVrZCP84pkeH
      EIimISsUVxFC8Pcv/Qw8x+EvP3cD81POvh78wBEC8Pl88Pv9XV8FVjPtlkHXw2zUwaDTIpVV
      5jlit1aDAIAXbixSscCmBHXToIuLi/D7/SgWi903SKXrAJ0QAACcmnBgU4EHaGTyZXzlh6v4
      7V/sfI1+N6k72srlMvL5PMLh7ncaU2vcEUvVqkCV5uzsKJa32uscLUoy/vXl23jhxiIV5QtK
      cmQMcP36dej1zXcmaBc1ZoEIIUjl2nvc51EsTI1gPSC0tb7y9dfX4B4y49ripIKW0cEhARBC
      sLy8jI2NDVgs/buvtJ/Il6ow6DQdWTE1G3XQa3ikc609QEPIFPHG/V184tkzA+X67FFXAC6X
      C4IgIJns/sPX1LgSnM6XYLd0xrXgOA6nJhzYaDEO+P7bW/jMR57sWF+eXlM3CC6VSnj66acx
      NNT6I+hbRY0CiCbzGOtgF4czM26s7sSaft9WKIn7vgQWpp2PP7hPqbsSzHEcXC4Xpqamum+Q
      CrNAncoA7TE/NQJvQGjqPZIs4x+//hZ+88PnB9L12ePQaON5HrIs46tf/SpisebvGozmqT0P
      rHMCsJsNKFXEhjtHE0Lw0mv3cWl+HCfG2nsQNe3UdYGsVitOnz4Nn8/XdYPUuBIcFvIYa/CB
      eK3A8809UNsfzeDNB6GHgW/HzKKCuv7G2bNnwfM8zp071217Bnq6rYcsE6TzJQx3OL9+5oQL
      qw0UxlVFCf/8zbfx+Y9eorqOXynqZoFWVlbgdDqxvb29//rGxgYKhQLW1tYQi8WwsrKCWCyG
      SCSCeFy5ikO1CSCeLmDIauxozT5QK4y7vxM/MslACEFVlPCtn3oxPzWCuR5tpew2dXNbkiTh
      jTfewDPPPLP/2vDwMMrlMkqlEnZ3dzE5OYlwOIz19XV8/OMfV6wzXD92NGuHjWACJ0btHf/e
      DqsB8XQB1Wrtc1K5EgKxDHYTOQTjWQTjWZQqIlxDZvz+r15Rze9Qd1O8JElwu937GRlCCARB
      gE6ng9lshiRJCAaD+2XTkUgE4+PjANpfyVXbpvjNUBqnp10d/84aQjA2YsVf/NMPANQ6R0y5
      7ZgatePGxZOYdNlgNelVNwPXveonT57EzZs3USjU2mxzHIf5+XkAB/P0nbhYakuDbu4m8YvX
      5jr+ORzH4Q8+8T5wHAe9VgOOU5+7WY+6o02v18PpdNYthuM4bv9PJ1DTj0IIQbZQVmwb5OMw
      GXQw6rXg+c79fv1GXQGUSiUIgtCThTA1rQRHknk4h8zQqGzWo4m6Vz6Xy8FisSCdTnfbHlWt
      A2zuJnFqwjHwuXaaqVsKUSqVcOPGjZ4MRjWVQ68HBNWkG2ml7kpwKpXCK6+8st/zn6E8hBBs
      7Ap4YtLRa1NUTd006LPPPtsLWwCoxwWSZIJSRYTV2P1NR4x3YdFXj4gm83APWZj/32OoE4Ba
      1gHWgwLmpvq7p84goI7RRiEbAQFzzP/vOdQJQA1dIQgh2AqnMDvOBNBrqBOAGlygclWCKMmw
      sAC451A32tTgE0ce7gFWwVelHuoEoIZSCC9bAKMG6gSghnWAjSBbAKMF6gQw6KUQhBD4YxlM
      j3a/5QzjMNQJYNAplKoghMBi1PXaFAYoFMCgu0B7PYDUEOz3A9QJYNDxBpMsAKYI6gQw6OsA
      3qDQs4dXMw4z2KONMggBQoksxhV+FBKjdagTwCCXQuSKZfAcxwJgiqBOAIPsAu3Gs5hw2VgA
      TBENN6Pxer0YHx9HIBCA2WxGNpuFy+WCJEnQ6XRwuVyKGDTIg4MFwPTRsAAcDgcqlQp4nkco
      FMLs7CwikQjrDNcE64E4Pvb0wkB/x36jIQE82hmuXC7D6XRid3cXLpcLly9fRjQa3X+kKusM
      dzTRVAETLvvAfr9+pKFf4tHOcJ1mUEshsoUytDwP44A+aqhfGdyIkzJ2ImmcGBsa6BinH6FO
      AINaCrERZCXQNEKdAAYVbzCJuSkmANqgTgCDuA5ASK0Nyugwe+4ybQzeaKOQfKkCvU4DnZZd
      btqg7hcZxFKIjaCAJyYcLACmEOoEMIgukPdhEywGfVA32gbtLkkIYZvgKYY6AQxaVwhZJohn
      ihhzsACYRqgTwKCtA2QLFVhNrAEWrVAngEErhfCyAJhqqBPAoPHWeghPPjHWazMYR0CdAAYp
      BqhUJWwEk1icUWavBEN5mAA6iDco4KRnCDrtYLl1gwR1AhikdYCfLPtx/dx0r81gHMPgjDbK
      qIoSvEGBuT+UQ50ABiUN6g0KODE6BIOObYChGeoEMCjpwteXA7h+dqrXZjAeAxNABxAlGWuB
      BM7MsOcs0w51AhgENoICptx2mAzM/aEd6gQwCOXQP7nH3J9+gToB9HsaVJYJVndiOHtytNem
      MBqg6Tl6dXUVTqcTsVgMTqcToijCaDSyznAP8e4KmHLZYdCzxa9+oGkBSJKEYDCIqampjnSG
      q1arbb2/1/zkrg/vX5wYCFdODTQtAKPRCKPRiFAoBJfLhatXr7LOcA+RZYJ723F86vnzffsd
      1EbTv9Lc3Fwn7Ninn8uht8MpjDutMOj69zuojf6OOCnjx8t+PHNuuu/jGDVBnQD6tRRClGTc
      3Yzg4pyn16YwmoA6AfQr/mgaYw4rDKz5bV9BnQD6dR3gdbb41Zf052ijDEmScXczytyfPoQ6
      AfRj/twfzcBpN8HMHn7Xd1AngH50gV5fYe5Pv0LdaOu3FKIsEyxvRljnhz6FOgH026Z4fzSN
      YasJNrOh16YwWoA6AfTbOsDNlSCuLU322gxGi1AnAI7jIffJLEAIwTveMC7Os+xPv0KdAG49
      COFvv/gafJF0r005FkKAr/34AaZH7bCx3p99C0cUdLolSWq7mK1SqWArnMG/fecuFk+48IkP
      nIHJQFd6kRCCr7++jjV/HH/4a9egZ8VvfQuVAtDr9aiKEr7zxiZevb2DF24s4crCOHi+9xki
      Qgi+8fo67vvi+KMXr0HPur71NdQJQBTFA7X0iXQBX/y/OxAlGZ/9+QtwD1vQq0wpIQTf/Ok6
      Vrbj+OMX2Z1/EKBeAEBt4N3ZiOA/vnsXTy1N4WPPnIZW093whRDgGz9dwyob/AMFdQIol8sw
      GOrn1CuihP/98QPcXAnimfPTeP/iJDwj1o4vnhECfOP1tZrb8wIb/IMEdQKoVqvQ6Y4PelO5
      En62GsSt1SDKVQmXF8bx/qVJjHdADI/6/H/4wvtZq8MBgzoB1HOBjoIQgmS2hDfXQjUxVERc
      XhjHtaVJjDmsbQfNhBB866YXy1tR/PGL19jgH0BaEgAhBJVKZf9OTQiBRqPp2gxwFEKmiLfW
      Qri5GkS2UIZ72IJxpxWTLhsmXXZ4nFYY9VpoeO7ATEEIgSwTiLKMckVCMldEMlPCve0YArEM
      /uSTTzG3Z0BpSQC5XA7b29vQarVIpVKYn5+H0+nseAzQ1HmqImKpAsKJHILxDILxLMKJHEoV
      EXqdBhMuGzQ8ByFbQipbAgGBhudh1GngsJngsBkx6rDguUuzbPAPMC3N6aIowuFwIJlMIp1O
      w2g0KmaQUl0hDDotptx2TLntuIqJ/dcJAYrlKnbjWciEwGEzwmEzdT2rxKCDll2gnZ0djI3V
      SoCr1SrsdnvXYwAGo10UC4L3OsO1u6GlnRjgUQghbWeElDgHTbbQcg6abFHsVrt351fChVHi
      HErMRkqcoxZgy1TYIkkSeJ5va9AocY6989BwTRRNgzIY/YbikZ8oilhbW0MymWz6vZIk4cGD
      B8jn823ZEIvFsL6+3tY5AMDr9bZ9jt3dXUSj0bbOEY1G4fV6W94tRwjB2toaZFnG2toa0unm
      S833ziFJEtbX1xGLxVqyJZ/Pw+/3gxDS8vXd+x7VahXr6+uoVCpNn4MQgo2NDWUFUK1Wkcvl
      oNfrIYpi0+8XBAEulwuRSKQtO2w2G4rFYlvnSCQSCAaDbe9Q297eRi6Xa9uWdq+JVqtFoVCA
      2WxuWZBarRaEEJhMppa7eJtMJpTLZfh8PqRSqZZEzXG1dZxQKIRcLodSqdSSLXq9XlkBaDQa
      cByHYDDYUmrUYrHA5/PBYrG0Zcfa2hqsVmtb59BoNPs/VjsMDw+3fY49W1qFEIJUKoV8Po9I
      JNLSb7N3jkQigc3NTZjN5pZsyefziMfj0Ov1kGW5pTY4oihCEATwPA+NRtOyAJLJJH0xgBKZ
      JJrYu7ztBI2EEBBCFLkusizv30EHgXbHC3UCYDC6yeDcahmMFmACUBGVSgXFYhGZTObY4wqF
      AnZ2dpDNZrGzs3PIxy6Xy5AkCeVyGfF4vJMmdxzmAqkIv9+P27dvo1KpQKvVwuFwYGxsDIIg
      oFAoYGlpCa+99hoAYGZmBtFoFBaLBSsrK3juuecQjUZRKBQQiUTg8XgQDodx/vx5pFIpJJNJ
      eDwexONxXL9+ff+RWbTDZgCVYTabUa1WUa1Wsby8jNu3b2NjYwOLi4vw+/37ZSgLCws4e/bs
      /gMRd3Z2sLKyAkIIzp8/j1OnTsHj8UAQBBBCMDw8DJ/Ph83NTaRSqR5/y8ZhM4CKqFarkGUZ
      1WoVqVQKw8PDiMViGBkZgdVqBSEEfr8fY2NjMBgMyGazKBQK0Gg04HkeoijCZrPBYDBAEARI
      kgS73X7gMwRBgNvtbitt202YABiq5v8B7EOSo8nWvK0AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Journey' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Male vs Female Distance' width='192'>
      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
      CQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Pie Male vs female' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Start Stations' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nMS9+bMkyXHf+Ykjr7rrXX3NjcEMCIBDAKQo0khqKWpJrWi2+8eubE00rXZp
      FCkuRQqkJBIYHNPAzPT0+a6684pjf4jMelX9jn7VMwM6AEO/OrIiIz083L/+dQ/x/PlzL6Wk
      leP5nEQpsigCQEqJ856z1RlZotkUj2cQjxFC4r3HGAOAEAIhBFJKhBDhPVeHLwmQSKRQlHUJ
      eJZlxaqs27eba1/8u/3bAVIIEALjHACxENzf20OI8Gnj6vU4lFRIqVkVBUoIHNBJkvV9raoK
      LSWxvriv0uQkOuNXIZUxPJlM8Dt8R0nJnUEH62s6UX+Hb748o0GWRcHxYoGQNXcGI1Kd4b1n
      Uh4jhaIbDdAy2uF3vnrJq4plVXHQ6934uWl5ivOWUXK41odXiZZS0i6AvKqYFwWj0WitxBAe
      lPEV9qUve+8p7IpO1McYg/d+/bpSan3d2lYYe7E4LBaowQuO5wvK2uDYVn6avzdfc8C98ZCT
      xZKiDtergFVZksQqLMTmP0IIHA4BPJ1OyaKIO8MhSqn1fXWbxbA5WVncvdXEXSeFWaFlxLKe
      0Y9HSKGu/ezpcsmqrne6/r3hECkFieojRTu/JSCIVAzAopoihaITBYXx3nNenDBKD9bfaV/3
      QrCqKqLY4IVbP7Ms6lHZgkjFt1amr0uyOObZbMZ+r4faMNYvi5Ka2tR44VC3XLTSOYdzDu89
      x/M5405n64aFENS2Jo62H2RtSzye3CxYVvOLQSiF1hqlFN57SlNgrFlfc3OROGx4CM13PWxZ
      w82/e2nKg70RiZbsd1PaabDAZLXEWov34T7a35BCoZVEKIXSmjjanpTNRf5VSWVLpuUpxtVY
      Z679XFHXTFarW1/Xe08WK8bdLonOthR5Xk2ZV+fr+xZCXuy4hPscpQdb4/HeY71BNnOw39kn
      lsn6/Ux3GSR7X6vyO+9u9TkpJd0kYV4UV77v8TjvkEgEgtpW67l4lWgAYwyucWF6G9uM9x7n
      PctqSZZJ8npJFnVZVRVpFLGq53SjAYVdksQZWuq1hfXeU5kS5y6syuZ124lNIk1pLAIuuQKe
      4PIcDgYMOhm1CTtJJCVaKSob9qRFVTE025bKWYfEU1Q5qdYkUXRpHF+HJCqlG/WR4mIe2vvd
      HN+L+Xwn10drx4PxILiAL8kgGQOsf6+0Ob1osPUZKSSy2SEAVmbOql5grQfvEBs7SHstcYXL
      9FVJZQtm5YT97M6tFtmo0+HJ+Tm9JEFKgXU1lSuxzmKdwXoDeAQS62sm5Qn9eIyW+sbraimD
      /17VNcmGe9DKqirRUfAfrTdUtmBeVEBKojIKsyTVXQq3pBcN1w/BWrN2e+B6a6uV3FJ+QXB1
      lJQMOx3G3Q5CBN8ewXpnGWUJJ4sVDrAezvOSe0nwX9uL1a7GexBS0E/TV07yVyHXxQ+b976q
      KmZ5futrOm8YJIpEXX3t1kf33rOq5zhniTas+VUSq5TKlpRmgUd9jap+WayzzKsJ4PA4BNe7
      ia2kUcSo0+HTkxO6WR30RgiwzciFAClAgHGGQby3tUteJ+tPGOdgw2K1VquyFVoF5e1GfQqT
      M+pkvJjPARV8c+8oTY71IQ4ILlXwyfCQVzXWuo0t+mK6dWOVRTMYLSVHgwHvHh4w6iQYW2Fs
      vV5YEKx7J9LcHfSI13FGmExj64vgwQtSnfBgOCKN/vkCuc379d7z6Oxsp++nUcpRf/+VnzOu
      JjcLEp290qpGMmaUHNBtd4pfoZ8vhCDVXfrJ3o0x0ssSxxata84Wlto6cM2YX/KdrTNIIW+1
      s+jgOweFlxtKJqXEek/lS7LmQkJI+vEIgKN+HyUlWnbXN7WsZwziPbz3IQ5AUeLIZMQiL8mS
      6LKlEQIPxFoz7nbpZSnG1VSmXF/Xe09d11vWHSBSYYzh383uJQTOOfKqJo1utoJft7TGoHW9
      vPc8mUyo7ctwws1yNMhYVBPi7M6NbonD4Qlu2G1ECEGsUmD5yh3gKuP1uiKFpHsDguW8u9J6
      d6MB3b0Bz6ZTzuZz+p2KTEVhTlqUhLCvePytXDg9y3PyqsJYy6ib4AjBBMCiLNDKIcSFH9VO
      QCcO/qJzbv1abStqVxKpoHi1uQhG0kiTlzWduLHEAuZ5ifVwb29MJ46oreF8MSdWEimDD+pv
      8JTbGAVAa4XzHiUiFlXF2bJg1FUMOt31pFa2IFGvto5fl5wtlzu5PgD73S6WvPHJb5b2ub3K
      /dmU9pqvmpNZdUZH97fihF0kPCsb4PFXWP1peUpH9y65k+0Y7w6HxFpzuliwdCWJhixWaC5c
      +Gl+yjDbf6UbJKWUZHFMljjm9Qnn5XPm9TkrM6d0MyJ182A3fXshBKt6gXOWos4x1lzsLlKE
      XVaAVBKEZNDpcXc8opvEWOd5dj5DAJWxLIuKytxsKStr18sjbmIDJQS2sbr9LLsYn4dVtWRS
      ntyIzryuOO+YlqdbLuTm/FjneD6brXes24iSkk7q8d6hhEZYYPbSAtpA1XKzINPdnRa48wGA
      WFU3Iye9aPSl8wHnxfGtkJ9eNFwb0atECMF+r8f7R0fcHR7gXML50nO2rFhU5TonNSvOb7wn
      AF0Yw6Io0LrEqxIcKCWRQpDGN0fQ7WA2xbiKVb1EuOCDSSXXn4sRICVxFEOzTanGGmgl8QKM
      93Tj4Cq5GwYvpKCyF5PZTRKsc2gJvSSlm2b0kotJFELQ0X3m9SniFsHR60gvGmEb96ZNBG7m
      WHbdd/a6GbXL8Xgy3YV5jv3lc/QP3oMGw2dVIWJNLS2VLdnL7tx4zdLkCCGJGwWzziIQdOOb
      8X4lrzeEYfEtSVR27eeEEOxnd2+1OG+7y0gpGXe7DLOMWVFwMp+zyIP7PO6k1KbibPkCqSRZ
      1CO9AqCQ1jlKa7GiWr+o5ettcxDihMoVCCnWgXSbFOskMZGSVHVJWZZYY2nzEAJI4yjsEDJM
      UotRK60Q8vLElc0OoYQIu43zWGtJtGaQXXGzQtCNh7dCB3YVKeQ68GoVv33Y1jme7Wj9tZQk
      cbi/ypZUrsSPO6gfvAce7I8fhQ92E3ykWNZzevEQZW/+DSUV1l0kLStXB/DwS0DElS1Y1TPO
      ixdb+YeX5etyPaWUjDod3j08JI0iqlpRWrPWQWsteb3EX7H7yPujEffGCVlj7T2ewtw+QXOV
      OCwIj1QS0SiGRGKMoa5rXIMIhb+rxkWwCO/RUuKdBxGsvFQS6zxlk/ltXw95hqAgB/0+sU5I
      dFi46hq3TUkdLOlXLC38uLnYNx92XlUUO2Z8h52YaXkCwF52SO9xSVEvOVk9xXiD/M5bmwNg
      KAakqoMvbv4dLWMiFa/dNWMt/ksmBAu7AiQ4yOvla1/ny4pqEEQhFPM8GEQAPBhTc5q/oDTb
      LqQGGKQDUhtT24rCrtbB1G3E+WC9Wz6QlhFSOIQELRVKaKwzIUXtLlsnLy6SYmkUFqHUitJY
      OpGmNobnkznGOvZ6nfVCneYltXOkSrHX6QTOknOol6zvptz0kI2rX9vHzc3iRl9zV+uqpUTr
      GuEyejYjMwn+QUoWaZSMLgeRp3Pcw2eof/kB9F5CgGoL0xUcXKAuSmiGSYBVnfVIrmIJ3U5q
      V1HZEoEEwT87b6iXJERKUZmIvKoDWOMvnv28miAQyEY3pfceLSK60YBhss+dzhsM04OAwLxi
      y24V3kPYXrxAIqltRaIytIip6oqqqq5UfmDtAhlbEynFqqqZrnKiRmkWRUVtHVpJ0lg3UCfk
      zY6w1w1BX4tGtVteS+9oZZOcd9V9LKrpJetwW1nViwZOvCzT1YrPTk52ut4gi8B5IpmQ+gRv
      LDQLP1YJYrKiskVQ7FkOSqF/+4OrL5ZX2CenWy9tAhe1rfFc5GN2FWOrJo4Lu7Z6Reb165T2
      eQ+zDIRgVnjOljmzsmRZl1TG4Cw8mz3iyfQRtavQk+WSYcP/aScllglxesiynlOYJVyRFvfe
      o6RGCYVSikR28N43JLBx2HacwdorEJfmUtY6lmVIXHnnyesaJUJAhnd4L+glEYmSKCHXNIBZ
      XlIYS6IUg02kh/BwjTEYY9acpFdt70IIhsn+tZ8rTI4S6srgrI1zrrJ81jmeTqc7+/6RNuCh
      lwxBXyws4TxeCqq+orQ50cziXkzxqxL9B99ef879+BHy22+GPwYZ6qN3rv29RPdZlDmVtSSv
      kSzMoh6J7jCvzqlseSVV41cto06H08UCh6ayUNmQP/I4hDAIEeDz/a5D51XFNM857PdJGlpw
      gC0l3WhAqjssqim1q7DOEamLWKGje2vLNy/Psd4xzPZZFiU1+RbNuHYlUihkk/YOFllQW4tx
      nqKqmBUVeJgVVYA3RZOq9iFR2QCLVDZAd3udziUFl1Kitb60A7xKrlP+4N/PkEIxlNuLxHtP
      YZYM4qtJY8573js85OHxMdbdjvjVSwMxJI5iEh/hPztGvH0IgP3JY9S3HrAyi7Do3zxA3d9b
      Q6EAwoP68EGgjP/9Q9QHD6B7NaQohGCQdTlb5hRVRS9JXisWkEIyTPawzu6U2f2qpTWEsRD0
      koRZWbbvNP9VgMI5jfUrzvMz9LibcrpY8XQy4WgwWCe4Wixby4hhsk9uljyePqMyliyOGaQp
      s/KcvexOQFUEdKIey6IgL0sGnYxIR2gVYZxjns8o6hrtM4raIqXEWIfxnsX5bCdimATGWbbm
      92yS6zYD0fbv62Tze9dJYVY477DOYly1hU+3Vm8/u7v1HWMtjycTFkVBJ45vrfxaSeIofLYb
      D6Fy+LxkVc/CrvydN9fJxr20gTvVhuuyKnHPJoj37oD3qDcPILmw6oKwiOS3HqzvP9IQScnp
      YkE/y74EZUT8s7o/rbR6O+52NxbAtgghkCQUJkd88eSRd96xKismq4K9bo9Blq05/ZuIivOW
      F4tjvPd0khjvgtIXdkkkEySK2tTMi4pYa+ZlRWUdtTG4W6amBeGZVq5CErEZnglAC8F+t7t2
      fdrxvQ6MNy1P6UXDax+c846z1Yt1LYlWeu0qee84yZ8yTu9cYhwWdc2nJyfrop3byqgrSRQk
      UcogHUNZrxXYP59AXjO7J5Eo+slot5s9WyD2+1AZfENtb11cZxKOZyvSOObdg4NfSaa8qGvw
      nvPlkoN+PxhE5y68kOCz7DwW7z15tcR5x+dnc64JPandgnujIdo5F6x3EhNpxcl8iXWOUacD
      hCAVgoJJobjbD9bOecusmLCq5wzSPWpTU5tqnbJ/Pluw+fivUv5ISSKlcdbSSxKyKCKJImqf
      c5rXKJtQGotxDgsMk4T9bjfw3Bo3zTl3Lez5KhnEeze+n9cLvPMIFcZuXEDJApQqSFTnkvIv
      yhJBqDxbFMWNybxNiZQg1uGhd+M+WEf9Xz4m/v1v42ONOBhQ25LaTBinRwD4J2eIcQ+yq/M2
      obLrBC0jentDsC78L1KQV6ReYVVMpQq6ScKiLFlV1bpQ6OsS6xzPp9N19nmyWq2p7500JYsk
      QuVoGTFKD3a+vpYxLxYvsM5fm/TUIqOoK7RznvYzWkgO+13OFiuMcxwOBoiXUvqtSKHoJYFJ
      aGxNXVcgAjx5viq2XJpWIYaN2+K942R1jFaOg2yfs/l8nbUNVj4m0wm1FaRKMW/gTQ88aVy1
      rMlcni+XdJJkXeq4i9xkXZyz5NVyw7UCkCyr4I7Q7AKbUtQ1n52c7OTOtdLLApcnjhLUWQ6d
      mPgPfx3fJgCVJDcFSiqUVAgP1T/8Ev1rbyDfvQPzHAYbyT/rqFzRuHAW5x29H51jPzsm/pPv
      QTdFEdP3GcbVZLomP6l4Np3y7uHhVx7MWueYrlbkdc08z7H+MsvLe88sz5nnnjiuuTfcpeQz
      SIsSzguDENe7c0IoFrlHVtZe0ElFyKoe9DoYU/N8MrmgIF8RVGoZgYfaBCSnMPaS8nfjmG8c
      HfHO/j573S6RUkgp0Mqv0+aqqUlYF9LUJQkdqroGKVFKESnFuNejsJYvJhMmec7xfI6S8rX8
      Vu8dzl/PNVrVC9b67UOcaU1gmc6rKXm9IN5AaKxznC4WO48DINaeSIUxdeM+9T/8AveL5xfK
      3wzCuItsvf34EdH330W+exRoEbPt5KX7+Av04zmxCnUbme4gRj3kuIeIN+ICIZqyR8fBoE/Z
      LOJdE3fXifee2lo+Pznh6XTK+WqFuUL5wx22/y8oq5jJsr52B93kW70sJ8szrL1NPCKQnWRj
      +2yKR4QQjLsZAs+T8/OtQWySvUIlTlAi6zzH89XWjfWThLcPDkij6LK1FYHeKoQgjSKKlu4s
      oPSrAGcAhTHsd7tUxvDZ6SlKSvZ6PVZVcLeOFwtezOcsy3In1KewOaW9usTOeRsCJATeBas0
      y3OeTWecLBYhGJYJZR3yBpUx/Oz5c85Xq9ew/p44LhEIYp2ihCb+X76L/LU3wrtPzzH/309D
      IO4tbUwk39hHHAxCNZB1iDf2oTK4n3wB1iF/7Q3kW4ckKmVcdolVinzvDtG//nXsw2dbyBFA
      J+oz7nSRItQIL4riErHvdcRYy2cnJ6zqeue5maxWvJhOt8bhnKOsa07n8y2jXNuyKUN1LHJu
      Xd+goaEWNNHCmoaAYNhJmRclj09PuTsaEUdRwzkPcFfL7JNKMlnkW3j3II5DAfcVA1FCsZ/e
      RclwDSUFcRShlGJen6OEphNniEHE4+mUeVGw3+tRG0MSRfSShC+KgrqxUncGAyprKeqaLH41
      j6ldvN2XygZbWVSzBk8U5FXNeb7CE2gavShBExPJmFbdn89mt0Z6Xh5HEnuyOCbVGVnUw338
      CJEliHeDny8ijcjiNYO1IzLM3/wU/cGDkBybrqA2cDCAZYn55Bnx20eQxQigTxeG6sK6eo96
      /14g0jV/r8yCTHdQUtFJEmZFweliwXS1xPgwx0eDMaNsN6ap955nsxmF2c4FSSGIlbr0+lVy
      sgxuqBKCZVVRGbMuhe0myTp3oWXMvDpnmbv1+7eRsACEwAu/uQetpZ8maCl5cn5GN824Mxph
      vcD5UEhjaoMTMC8vtudxmnLQ610bnIYbCvTl8/wY5y1Z1EWpBG0ilNpGfxZlSVHX7PV69JKE
      h8fHa7bo/aaDRaJvB8F57zjNn98I2bWdJYyv6CQx99SA48WCo26fSGq00ngcUioqY5juyPG/
      +J2aXqboRUOyn05RH43hg/tgHP54hj/ssxw4et97F+k9vWhIIjOslBcWbti5uN75guTf/SZe
      tZlGh310gvxGAC6EdfhVie9n7WQgfEh8zqspg3hMP02ZFQW1s3hZcjAI11/UgTu01729Xz5Z
      ra6cm71Oh/1ul+ezGZNrCt035fga1/KXJycopehEEXvdLmWlma52c0Nvxg4b/n4aaUbdjEme
      s6pKnLdYZ3HeIpXkbHlxk6nW9LOM6BZF6LWrcNYhCAX3RZUTiwznBIui4PlsRqw1UoQ+QM45
      Hp2drQthUq1x3u9kfYWQ7Gd36Mfja63ZIB7Tj0dYZzCuJokiHoxGRJEC5Yh1wrKe0dV9Fq+r
      /N6TJp5YRZS2RH73zbDNa4WvDO5F4KxoGcF0hSgNWdSloqL4/h3IohD4NuK8o77bvVB+ACWD
      8nvgfIlXEvobgXJtoTJEKm76O4kALgB4RzfVa/Aji2Kmxfmt57qsa55Op5deV0Iw7nR2fm5X
      iQNqa5kWBZ+ennI8n++UdYdXLYBGhBBkScxer8vx/KIFCj7wa/KqbUQleWNvj36W3QqXd96B
      CNY2VgnLasFkteL5bMasKFBSUtY1sZQMsyz4fxvb5tFgwCjLgu+9U9ZX3tgtINSsdnjQf5de
      PLjU1cH5UHS3qgzPZ7Nb/+6meFEzzAJy1Y362z6rlohuCLBT3cE9n8B0iSdwlmpbYn/8iPpv
      fx52wofPEKsKkb7k/tU2wJ4CGAcWrH96Ds3zItaQRut7hqCgAfAydOMM2ezUQgg6ieLp7Bjz
      ChfDec/jl2LHTVmWJU8mE+ZVdeX7ryNtReSucYaGCxLRVb1JhBAIKYh0xEBpXswXfH46IdYK
      a4O/1SZ87g+HOyEyiUoxcRfnQJIwzSc4d1HR0z4M4z2jKOJkc/ERAiytFAe93lYh/1clQkh6
      8YhUd1lUEwqTI4ViVpyT6A7PptNLzcJuI957OmmAdlPdvSj98w3nA7G1IOQH93E/fYwvK/wh
      WG+pvnWAtAfk5Rz1s8foSBO9dQ1mXtagVFhYgw7o6/MmrkFosljivaMXj7HOsDIBcROR5fHs
      Mb14xLjT34rxWj16MZtd2/DLes+TWxgNsRGjfB3SjnptBtc/2K4Af/F6pKJgfYqQWi5qs+7M
      1l6smyRXFqHcOAghyHQ/ZE3taitzKoRANCWOh/0+z1/a3lTTLKmVm5TfNX1vXndxBDrIAUKc
      saoWaGK6UY93Dvo8nkxYXpNyv068qEK2HU/SQKnu4y9wZwv0730LOnHg/3gfrHUSIbopLhKE
      XniwEjlomCxyOr/zBp1MktqCWG7wedpmZmcLXKqR/c4WL8g/OUd0kxBHWAd5hYubAv6G3Tkr
      z+jFQ3rREIcjrxd0U0FtZ3x2NmOvs0+/4RB54Hg65XT5+jUB3Thm2OmsK9Q+Pzv7yiDZTWk1
      6SIIfinh5WygF2ulsTiOp0um+eWARQjH/eGYYdZpitJfrWTeeypbEKuU8+WSsq4vtUWEYPkP
      +31s4/+3IoXg/mjEvCxDFwStr10A3num5SkCGiV+vUUghGAQ71FVFZGOAhOW0B3jlzssAO89
      vY5Y5z5U03BAHgwQ6Uu7Z2nwJzPEG/uYe/2m+9vF27UrKExBheH5qqaXxLwzeAP52TnyvTtr
      npA/7AfFbe/Fefw8R94ZbiXa6CSYsmh+2q3ve1FNEEKyl97Be8eqXhApjco8T6cvOBEpaRRh
      nVs/k5tECcFhr8fZarWF2OjGhd6sQ3/v4IBfnp6Sf4Xu0qZc6wgLKdBak9c1TyfzLessgUGW
      kUYaL1cMsnQnLs7KLFjVc/CCWS7XbZE227t47+k21IeqrimShGVZYgi7TSeOQ/1AWYYi+Guq
      mkqbY1y9btr1ZaWXDIh0TF7XPJlMbk11WIssGaQdQDBMxhflmYcDxOFLsOw8D7HA+RJxNsXd
      k2zySySao94QZ+DpfEonztC5o/rxI+J7Y8hi3I8fob7zFt0igmZ9eSlg2AlzbRz+UWCcehGC
      VwDvNzhYQqKEwnrDql6s51EKQTcTzBY1+S0gzVac9xTGhMKVjQXQbYpZtqZLSt4cj/n89PRW
      sOmuotvk05ZyNMQvYy3PXlJ+CB0Y9nu9xt/v74wNlyantpb5UnDQ6/NiNrvk68VS8mA4xDbU
      58Nej24c82KxYJhl64nqJMmNfmLtQsFGqjvXfua2ElCSYEdV5Omn6TYo8Arx3tHvhAa+42Qf
      lVugDIGolJfKssxPH4MQyDsjqlSyyAt60UX2WTXUdIGjl0Tsd/ZBpyT/+78ISu48YtjBCxBp
      tG2ZlyV+WSAiTf0/fkl8OMCkmrPlMvRpUpu+vaMbj5mV55fuKYsilrLGuNvzsTwwuQI9uy5+
      jLXmvaMjpqsVRV1TGMPqFjvNbUQ8+uKRV0o1Xd2C4gvhMdbx7HzG6pqIXxBQmINeb2fL6rwj
      r3PmueHucEheVTw6O6OyFknYIu+Px6Rar7ssFMawyHOGnQ6mIcK1jNBX/ZZ15rX72WzKppvo
      vefnL15Q7WCVhCy4O+rRkR2ypI//7Bi8xzx8hnrjAPnh/ZcHj3v4DPOzx9R//AGLao50oQFs
      oM2GxOWqnpHFXY7S+1DUl/j/bSHNptRVjq0rbASZ6FA4x+Pzc0pr8d4y6ns6cTAuiUrxeCp7
      0axsU87mBWX95Ush39rbu3UcWRnDi/l8pwbDV4n2PkyilJJIR0ipKE3B8XROcQPc5YHTxQKl
      C7rR5SZGN4kUkkSlLAhJiyyOeffwkEdnZ6EwI03pxPE601tby2y1CiiEEHQan99ai35FAuzl
      prDXSe0qtNDXsgc3u7ytmiL3XZTf4xlmmkQlJD+fwHf6yLdCoKulRLQJrVUZAtJ+BlJg3h3h
      3ugyq87J62XIDYgIS01XDUmilNFJH320B8bi56sQ2DYinMf+7DHyW4FagQk1wstuiZUGbzzz
      ynC2LNbelVKWbGOnEUJSmNA9rjQFUuiGPwS1NVT1V9NlY5eKtFhrHoxGdOKYJ5PJa/+mbB+i
      lkH5jatxzq+j+qtk3OlwfzTi/mhEohO0im/NGWk/M8lz9jc6UUdK8e7BAYeDAXeGw63vREqt
      Uaaz5XLLEn9VYmyF8TcrdHtYyNPJZOdJTyNFGkdUtkJ8Jyij/dHnVH/xT8i3D2EYylLrv/wx
      1Z//I6I0uE+ewrJkyaoh7gVMv/Zl0/oPYq/x//gYXsypI0950Cj/+QL/fIqXAvfBnXW9s//i
      lOqvPqYneyEBWShON5QfwDrBsiopTU2sUlb1nHF6yF52h7u9t8hUF9/wcGZLg9+hicJNsotB
      gfD897pd7gwGr13ULx598YVXTRmh9aZxOQSrsuDZ/DK5K1KK94+OLh1UUJgc7x1ZdH3bEess
      k/KYfjy6toi8Fefc+qQXD3x6ckKqNYM0JYvjsGNdRbL7GqU0OQ+PTxBe7Zxx3OsLskgzyg4R
      syJQl2cryGvE3dEF6/bhMyhq5OGA6j//CPXOEfNfH1GZknl1TqwSKlvSjQaNWyfYjw4QWkFt
      8VFTIupc4HWpl5TTeSgqfBaHHpuNzw/gqdDaUdWCNDZoJRh1BkQy2sqch5Y0JU+nxyyK7ZzF
      l5G7gwEH/d0p0BC8hGfT6c60FB01hePGhkLyliNzVZcAKQTvHhxceUrHbRqyGl83fYfyVy4A
      IQRRdNH2+85gwGy1ushY3qLYvZXrmq3uKuHUlZRFuRskF0eeSAt68Qgxy6n+438n/jcfwbiH
      +Z8fI4+nyO+GPj8tb8c7i/rBu5iDjGnxHE3MMNrHYolVYI1670O3M+fBeeynL+L1Z4YAACAA
      SURBVFDfvEf95/9I9DsfrrO8L90EdBKWRbGl/Iiau8OUveyoaXS1BHyTDBttzbXznrNlwaq8
      HLg/GI2ItWZZliyriryqbo2UTfO8YSJ3d65HiJTijfEY10CxtxUdtnWHsQatLtLixl92gYad
      zlah+6bcRhkTlRKnd1/5uc3rtb6+JKAESbNgbwu7FmbFvJrQjQY79818WSIVo29oEXiVeAy9
      TJGoNFjsQUz8Rx8hRj0oatTbh4gsaTBgD03Tr1k9wdwTeJ9DGZ6FF6GQI3DhQuPgbjzA/OXH
      6I/eQX7zXmhx8i/exzfKb//uE9Q378GoG3aIZxPmR4LJ4sLp8d5yd9ThoBPO1spkl0jFnBfH
      DOLxJeNxPJtdSnZJ4N5oxLgbPIBug855H7p9LMuSZVmS19dz/PO6Jp9OUU2nt12ldYl2WQDS
      46nqABW2yrGsKp7NtuG9QZpirN0d9wZKW1xKtN1WnHO0LdzbrgW7WH8hJKnusKxnTQez20vb
      L6h9kM+m0yvhu5skiR2dKN0GCfZ6+KKi/LO/hziCgz7uR59j/vLHQNNsypSsyoplXuFMzNmy
      5Nl8ytPpJJQQek9H9xEnC9Qb28XvdC6CYPWtNy4IcFoh9ntEosuqURLvPWlq2O/sbxmdZTVD
      CbU1bu89y7K8pPxKCO4Oh6Efz4a0vZg6ccxBr8fb+/u8f3T0SrrMrh20N0XvWB6rn0+mlHVF
      rEM9rlaKZ7PtLg1v7u3RT9OmA9xuFrRs+kbGyeFO32ulXTibCMEuY0hUSqJSMt1bN+K9rVSu
      XFMoZnnO7BbU3U1x1Iw6Kf0nNZw9ht96HwD/6QvkvT2if/lBKFQH5P09xChYz2U9Y1FUnK0W
      27vwBj1FCkUn7lH97Q9Rd8eoDR6QXxSILA6cn34KlcH+t4eo775FlXom8xW2uZyQNXvd7lY7
      k9qFXqTqpTypsZYn5+eXyl3f3Nuje0NLlRZB01oTS8k7+/t8fnbG6prs7qIsKev6tfoU1TsG
      0nqUJVSxwljHLF9RWLd1g504Jmkoya8jsUyIbmg6dZO0E7cpr8/n2a1lh/eOZTVdtxCUUu4M
      e3aSAHGSKETTslDUluoffkEUKcSDjVNf9nqIvR6FWWGtCRVyV1xXCck4G9KNu+Ah/qOPAquz
      xfnLGt9LQhLsxRSOhqFkMg/w6rJcMVuV625+w65klGyT6CKZkKpO6Bq3seO/mM0oX4LGD/t9
      eq84fqrdCdb3ICVvjcc8Oj9necUicN7zyfExidZESpFGEZ04ptuAH1dJoNfYndi5h71eWOJR
      U3OrlOTZ7CIwGmYZccO5fx1Zuz2vCZO5lzhAm21Qvk4J3RROQ7dlGYLNpztjzZZ+FuO8Y3WY
      0H/wRntxiDXubIF6sI//9EUgwf3627hHJ8iDFLSguqqjHnCns0f/b54Q/8G38YpLga5/co58
      cz9kllvWZxKh//C7eO+Zny6xPkCoStf0ki7OG9TGOV1CCHrxkGU9w9gaJTXzPL/k/illGWQN
      mc/7a43kVW6vUor74zEPX7y4Ur+89yHrW9fr0yG1lPTTdN09ZFVVgYjYfL+oQ3vNe/0+T1+R
      oRfAXrsA2hs4WeRrPLhtPlU7t26WtYts1nFurlrvPYt62hRrX2852uB3PWARuEnX9ff8stKO
      K1Wdhvg2XiNiJ4vFVh3Cba7VzTxDuqiVR+8PNt67+IcQAvPZMe50jogU5qePkffGxL91h1RH
      1NW2tY2kBu2IfveDdW+fTXEPn6GORvhlCbHGjzvrFjLWOZ5NJmuymsfTiQXOO86LEw479ynM
      itLmeBfOJStNjleejB7TPN/akby33BlmJDrC+3D0UzeOGW0cs+u9x/ia6KV2+5vv7/IkjXOc
      r1ZcJmQEkUBfKcwtiHNthxHd1gCc5wVV2wMIuNvvo4VA3sC0vI1cpbDhxJObLfmm9W8h0V0D
      6F0krxesqgXdbn/LH66M2YnvAyCkpZdG6Nwhj1eINMM9nyDvjWFekPzpb+FFUAD9ux8i8gpv
      HPJ8gXhrH2MNe1mXWGmmxQrjHZlO+GCaIlfAN5NQAP/L58gPH1z8bpaAltR/9RPk4RA+ehMl
      JEVd8/j8/BKZzDQNhQWCWXlGbSsiFWN8xaKqEQiKOkd4teWvewyjXsQovXBt749GHDexY/uE
      alcxK8+uPBijbXJgfUijfbnasCD9KEIJgVQKWZavvGZZ12ghBPOqYl5ecK57cbyGsRKtX9t/
      v4qqIIRgkNzckKr9fist6vOqcYTTAW+PELVSmYK8WjFM9reU3znHs+l0JxfQex96/AhJPYzJ
      Dvbwn77APnyG++IEdzwj/t9+AL00nCqvI8TPnmCfnKH+5LtMWeBMqF/oJymxUjxdTOlahf/R
      F1gpUG8dgRSIl3YBcW+MffiU+He/BWmElwpjLZ+enl4qPxQIilIzISeJFE55lJTUrlo3RcAB
      Dp5OTzC+rdOueWNvyCjdzg1IIS5n8GW8PrHGN4U2y7IM3sZ8jlaKRGsWO9ZTQKgbWFXVeldK
      pCRrWugUzt1qQVXWomtjt2p6u1EUKqzYHbJ8Wb7MqSObxwvdBvZ03nFWPKcfj3dmfq7qJZ2o
      ty5OgYB4/OL4eKcOA2Hcll4SNYX6YRzinSPitw5xx1PkwQy6Cc5bFtUELSP6/QQxyKgwOOO2
      mhPESjPudPAo1K+/hVAKEg2rCvn20TYiUxv8qoQsxn7yFF8ZVt+8c23trUCTl5AXHoRBSceg
      o0kiDXhmRUleebyLQIQz3sa9mEFyOwJku7u0u/mTplO2FOHc5oN+n9paTudzyrq+desUKQTD
      KKIDzK2ltJZBU4M+qyrmOxTQ6ElervsnCgLVuTIG4xz9HSu8tgb5JU9lb6kOt3W/pJAM4r0b
      D1e7SrwP3TAidQHjraqK8+VyZ+X3eJK4IhN9ss9z5Puwji2lQNwZIe+M8GXNkgW9eIySisnb
      huS9tyjKFS9jjEIKRlEnwLF7h+uklP35Y+TdMeLOCP/5CWLYwfzkC3xRBbw/jUGpy8rvHY4C
      SXZBYRAC0FgH5wtLmhRYB1XVUE3aBhRdTxIp/CxHDPQlhulNUltLrHXg7Ww8Ty0ld4dDvPd8
      cX5+qySW855ZWTKMY0ZC4LRGCUHtPbMdq8f0JqelF8cNJhxgq10STrtIbe0rT5+E3XegXRip
      m9KLhzgseV0iifn89HSnxra+bR0nLIM0I6si7E8/QT3Yh16Ke/gM+8lToh98A2cs9V9/TPrv
      PiInJyLBeyjqHHzYeaQU647bbRJWCb2VkVW/8S4Q5qj+5AnqwQHqO29Bc/yUePsQASQvBYTW
      l0RSX9s0FhRF2bawv3i133GhAMp7bD9G31L5A7gwwfuI8UaAvP61jTOUO3F85QJoDXOiFJEM
      5xe1MyGlDLwn74mUItN6p+Ic2c7DQbfLnX5/rfxfF+JirGXSMDq/roLnXaWlVsQq5clksnNX
      Z+8NxhcgC2KdoEZ9kv/jt9fHFbknZ/h5Hlygfob+1pvEnR795xb9f/+EQZFR1+2BeJZZXqxr
      csP1A+UBCHSGRydrOMl7T/xHH4Vagl667ibRShpFxOqi5k6KGEd0awKbAPqZp5uEWK4fj7bR
      O+83oK3LUtkikPfi9MbE1k3s41GacpimDKKIjtZhITTGufUQpJQ4axlHEaO2tcstRAL0oohx
      08qkVf6vC23Z7DXa/v3PuRDaXUbLiHlRXpmYeZVIEdGN+3wjOqQveiyrjUz68Qz94QOiH3wD
      uden/uEn6yOLfGXwlcGUF+endeKYYTcLHakbpCjRGfLjZ/hPX8BkSf33v0AUNZzMsf/0+YX+
      rUrK/+vv4GSO/+IU/8vnwV9eu7ICIRTtygr9la528zwepSzDnqOXBf5/56q6j6IO7VeukVil
      7Gd31uS9m+Q6Elx77rMQYisv9LLuqOas6FQIDtJ0fczWTaKBNfGoxdq/LuV33nO6WJA0A217
      O7a5gq8L43+VFHXNLM85f83qIu8d+1mG/ouHiA/vE32jyazmFdVf/gi53yf63nuU/+l/hAKY
      772HB/K3uqwO3uVFPmXoN4pYmoqvVCVIL0mjHmLPI+IIsdcj/tPfhNpS/defInsZtOBjGqO/
      +zZi2MEdT/FljQKyRMHcX7L6UWTY76UM4n0WZcnz2QzXFOiksaCbOoSQRDJmsIxg7wqq8jWt
      2df3IgQgyE04prQTbV9jU4G/OD8PMCahIUIrlbVrQyWEWOeH3MbCaH+r3Q2Ec+zHMblzzDbQ
      opdFC0Im+CrawVcp3ntqY0i1phPH68G3RDdrLVHTH/RXJe3kP5tOXwuKa0XrGhVbon/1bUR3
      o0FAGqG/9QZi1GssfLP7PT3Dn85Q3z7iyeoUZz0662wF/JGMyP7pDPv0HPnH34N7Y5iucI9P
      EUdDfG1I/u0P8Lr5rcYKy2/cxcO6ua51hsJMEcLiN7g9kVK8d3AHIcIpQEkDOBzP57zV7RNJ
      x5SW9CauVn5PqDC7Iin3sqTqamSuffbOOfY6HRb1hLyATTfebDTB3fQgNg0nsLVLyKbrRiYE
      aZoyresrKxylJ/RwbF2fr1PyMhyi5l66ifWNGvMrdYdabPrLIFbOG/odTVZH4fDq840zBQBf
      1vjTGWLUJf6D7xD97rfwywL76ITo2XLty06LnEmRY7wNrg8eEo2I9cUh4cMO4o193CdPqf7q
      x6F0sjkX2PzdzzH/9WfwbIL9u5+3g0OczHFeXAp6j/p9IqW3Dvc76Pf58N49OoMeutdv2r+H
      moArn4v3YQFwqSzgklwHaGy6Nf00IY0lQm4rqvGhFWYLp7Zew2Z+aPNIrM3/KaUCqyGK2EuS
      S217JMCsSU583S5IGkXM8pxlnl953kDbEe5XtQgCq1K8FtUDgpJqXZNFMdHS4R6f4V4EzpD/
      /Jjy3/8d9uEzzMOnoYPz0RCx30d/5y3UN+5R3++RxTFv7o+RGipf46WndDV5XWB+7Yj4334f
      XxvYbEvz4QPif/0R9Q8/wfy3TwDQv/42+qN3QtfnFlnB4YRnkRuEuDBuUkKvaaMoagvLC5ar
      XC9ewSAZM84OGa4StlJLZ4v2w8EFsi6Ucd4QC9wkcRwTRRGFzRvaxvb7qVLrtjfrliyvOA96
      83ivdoHEwGGa0ttkFv/txx/7vK456nY5GAy+NH5fmpxIJZeKKFrlPm0ygC23v72Bl0lvt2mu
      +1WJc45PXrzYCfcXgPWG++MO+52m4dZs1Rz1ImBR4F5MQ7ZWK8S9MSwLqv/43xG9FPOH77My
      iw0AJfxDCkm20ugaort7CATlv/9b9IdvhIKXx2eIO+F8MFHUwQVq/XDrtkogp8Ups2LJdCnY
      bAOrFbxzcEXC8GwBez2uEucvToAU69FuyKrcqkN4HZmWZ5RmxfkchFcoKQMdRwi6UYRkm2Gw
      uRiuks04s0WM2tesEEyr6sIpXNY1h1/S+nvvmVcTOlGfTrQ9kZtMzmTDz78KBfpVI0PFRs/5
      24gkKEAnjtlrCkmEcfimlbj3njJ1xO8eIvIami5rSAmRQiQR1tvgQZgaJZqHKSHRKfrvf4lf
      FPCnv4lPIuLf/06AVCtD/fcPiX/7A8zDp4hIo3/z/bCIvKf+f/8n6p07yMMB7otT0g/v8Hi1
      XI/Ye4sQGmtBERbNVtvIa5Qf2KKIrJ/MZAWjZhHtqPyFWYWGZfEFfWIQj3HRgHHsyZvyyHY+
      N2OFTb//qh3gZd1p9c5ae7FrWMt+HF8sgLwOp2vsWlGzKUII9rI7Vx6It74RQtVOa/2vCrxf
      5o/fVgqzIlbJjWfVeh/O9s2i0FD3vOlGvYsE2FRyZ9APp8U8WVL9w0P0Bw9QTfBpXA3GIP+f
      n0JtiP/X72F7EebffBMvBaUN9BPnHcpfIDSVrUi//QCRm3BCzZZVViR/8n38LEd/9x38Iqf8
      Dz9EHvSJfudD9IdvIMZd/LzAnc44XwxwPpziHkUlSgjKSuOBXxwfBzqwruhEneuTiJvsts05
      tCuSQXo90d178maer5JIJcQvZe2FEMEY4K4gUDY7ZJOgXX9+ozx2k0C5GSRv1pFvHvro/UY/
      C+f9+tS+LyNSXO2XtZTcpEmwaa3X29jm51v353UkME9u15Z9VZb84uSEJ5PJzn3qjXM4kZPF
      cYD35qtQdfXwKfV//hEswxkKSseh36cKbtCynpFTULgL7lWsEoSSWGFZmimlWeHuDZHv38P+
      8hnV3/x0a37cdEX1X34ckBclQ4eHySoEvG8dhPLHeyMmP3ibs1VAcbLE8db4DrG+ULjaOV7M
      ZiQrRSJvKGiZXm50K4QgXYF0N3gMk9WNmXkl1LWG6jr92YQ9tdZ0u13iNCL3MwoWlHKB0QVZ
      lq4RxZd1q/1/0cRKW7DPsizXh09/1SKEQCvFsNtd34T3nrgJQI0xa9/udX3/21AhhBB0oj6f
      vUbDVSkEsdZUpmLcTdaHiPPhmGjcx72YYH/+BD/P6d8ZY1yF3OtjlyfYh0/hgyugxOZWS7PC
      +tCVo+XPy2/eJ37nKBil8wW+MoijEfGffB86MdJ74t/7NRh08E0xvfOORREwfQ+MsoyjYZdI
      xjiT47m4Zyklqte5qCaDdePc9ckzo8ttbvzDZ4GIpy+ekygN3tiLrnTj7pfqFtTqB2wrv5SS
      JEmIm+7ReOjFo3Cum81xzqCUJss0ZVmum6u112mV3xhD4dz2GI0xX0kuYNNf23qdbWbny3DV
      l1H+XSSv69fC/VVTFnl/tMdB52h9bhdKIu6NUHdHRN9/D3k3UIVVbrGfvgBjsT9/QlKHfEvd
      nPYoROP5CE9Hd5FSsZ/dxfz1T2CyDBa+QWv8okR2U9zPHgdEaVFQ/ocfYh8dr5VuVc+ZFROe
      TiZhrqXk3mhEJGOmq9V2lltYvpl0LxWot41zLz52hYv61uGW8gP4RF9qyfi6cl3lXxRFqESQ
      bNQfSyGJVEyiM4bJHuPsaK1TaZqSpunWdVvXRwhBP463F4CHdWLqdaVV/rqutyBN4xxfNMcb
      3XTTm6jQVxkIbyICr3Oml5aSumnUK4XAmRoen0EZFoEoDdVf/4T6f36Kb7B52UnXLQ/FuIeL
      JR5HbS8Wn/OOWXnOrDwLu8nPnqF/7c2A6DSwohAiuFlJhP30BX66QqQR8sE+8u5FbUUkY6ZL
      E44h9Z79Xkplc07mMx43i0IA427M4VDhhvEFo/P86p7+voFIa1tdBPO3SHx9WdnMSUkpibMI
      kTjSaDfCo9aaJLki1lCK0tptF8htwESvk5Ftlb/t6LZpzc8XC/o3HGb9st93lR94VcHLZruV
      qz5f2nydfrfeYoznfMfzfIUIZ5S1GXMPqF+eYf7xM3j7CHnQx3x2jBh2kf0MkYRAEymJ//C7
      wUcfdZCfvWBPaar7d/HesbQrKmPoqi4pKYP0ANKTAJN+/EUwCKMO9Z//I+ob9/CRIv7j7wV3
      B4h+833MTx6hugns98krx7I5/khHFV56nsxyiiK0Qu8kkgejfZLCY1YrZCduWKwCMepeTRdo
      kC3ja9TDE+T7d8POVJqwEHagRO8iuun/hPSUfoVWEd3XaHHfxpTOOaqGElEagwBOiiJQIVpJ
      N5rO7poUaxdOq/xrToYIB94Zaxn1rofZrhr4y9eflqdIoRhudJmobMHKLBhdcfhF7S5aaHs8
      0/KE82WFu/5YhCtFCUEnTSmqiiSKGKQp4mCAGHWR98aYjx/hpyv0b7yLemMf+/EXyPfvhbpc
      43Bnc6QA+6NHIAT6kxicJ/6dN5mbirvHGveLx8g/vYt/+zAssI/ebsYN8s5o3VUC7xHW45XE
      fXGC/dkT/GQJv/ctnk+nayt/bzAG4ZjWCo8n0pZ+R7IyM5JkjNZ9QOCmCxh2Q95mWW67MRsI
      UKa78OFGPPCaet9Cmq+iunsctcpRQtPXowuo+BVinAH8VoZbiOA2nZWnTBceuzF4vcmYa9sh
      vhxx73JzEILpXpqukZ/Zcsl+c2zq62aahRAMk/31wdytJDq7ts1iqrsXY6pnzRgtN5wLcq3M
      8pxekqyPZWW/H6yx90RZjHs+Qb1zhP3kKebHj4i6KfKdI+q/+3k45C6NiX/nQ4BAY/DQf1HR
      Mwp1b4wcda91+eT9vaCYy5LqL/4pgAf/6ruIB3uo6RL5YJ/H0+m6pnvc7SCkoyw0tS1QUjDu
      aaRQoQWKEBA1eZusJrUlic7wL6aIdw7DjlA1Qe11+H68MYeTZXMOwe2ebWtgb/IynHc47+hE
      2ZYyv0rOixcooRmnh5cQoIPePtP8MZhkDTtv7QBtkUpLUmv//Sql3UxUAGtYsQ049AZO+2WC
      3HAs0bbyOu/42fEvGKY9jnoHl87/De5L3XRH3q3AxnuPowKXrI9rjbmwlGuF3e8j9/tQW9T7
      90CrQInQaj3RQopwsruSxH/0G/hlQf23P1vzefT337tAPR6dYH/xHP0H30ZIQfkX/xRIdVkS
      Sh4BfzZHvH2I+v57zPKc6dkZEJ7hfq+DcY7HizM8cH80ZpCmWG8uKcVwoz67PZwbwMcaYh3O
      Fl4Wa1foSmndpyYhd5NbdBvrDyGP0o/HOzczG6eHFOZqVm+sUo4GQx6fLZDNcTmybjsvyJLS
      zyht4OlswlC3kTZ4XlUVtbXUJjTbNU155WZh+VeZ6T1bnTEvch5PT/hi+vTKzzydP2Fe5BR1
      SblDL/vwoMCJOYVZcdDvY/7qx1R/9kM4mYd+/E/OQ3B4vqD8P/8WvyoRWmE/O6b+4Se44ylI
      QfT738Y9OaP6s7/H5yXyznBtRf08p/pP/2MdiIpuCJ795+EAjfiPPkJ+4y7i/hj17h3UO0eI
      B0FxrXM8bVwfJSVv7o0Bz4vpAgf00zS4bKI5c7hlxU2WVxeyeH/B9YFwtnCr/NbdWPyCtWty
      3k3SwpnWGXKzbH7Ws6rD767qBdPydKtd521Fy4hefH2sMM7GpMkF0CMdgdE46GikktSiYGmn
      IPxOgbBr0BVjLXvdLouyZJHnLIsC5xz5Ri/Kr5Lwtt/Z5939+2gl+f+5e88mOa40S/O597oK
      kSFSQyuCIKsIiq4qsqp7p0V19dT0CNtfsmu23/bD2tr8p92ZHeuZ6Wkx01XdpciiJkCChMoE
      UkRkaHe/Yj9cj8iI1AkkQPYcGs0SGZERHh73ur/ivOc0y/UDn9MsNeiPLK2uAHe68CeSJeai
      OjeWFilHkTefiEKIAszvvyH/h08xH32DqFdQN8+T/+oObph60du5EhiLmCt57tAXvkdg11q4
      QBH97C3Cd1/1pthRAFFxvuerqIsLuxWlauITTyVRP7iB+uErEPiEfL3dJi/uvKu1GoiMtc5T
      BlmKEGJ2BtdY3CM/jEOjQjdvQ2tPQcD5QZ2D4Nbb0D1CHjJQUD5+PmB8ce3lO5PpMq8aPvBC
      zTafCWH6WWfib/C8kEJxob6CE4XYFjjiSFMKy+C8aTUSMjuaVL1KU2zJ6av3OJxxeEZpvVJB
      CT+wUC+XyfIcCyzVapMQaTrJPgsIIVisLNBIavvCnzG0EeBiDnN/OfB1gctRmdJmD3l1BVmc
      g+CHNwmsxSmJbFQwUYCsV3wvIAlx7T5GCqL3bpH9j08BkPNzpP/t95Ab5FIN9f1L/k3iEHF5
      kWi+CpWkYJk53EYHWSsT/+sf4AIFaY7+zZeo66uIVU+Ec87RmVJrK4UhjXIZbQyjUReHY7Ey
      Vec3FoxFXlz05W6rMdYgGs3Z6o8U/j0c2LtrM26T47tOcQDjL+DE59Q/3T8/NymRTCbdYCkk
      zWTJe1S4nEg1pw7JG7fEPLtIwzSiIGJhLmK7lxE4MhrlBJzACUsjXiSQvmzU6vfR1s40S8ZX
      8JlBBOG9fKebXwIvaCulnPxumrcxXQ04C4yl3ffCWst2L0VJrwF20nnfShxT+nwdu9ZCagsX
      F9Gf3Ce4ed7rbW51QQriP71N/v5XmCdtwreugXXe1O4Xn+E6vnavLi9h7j0BQM7XEA5cu4+o
      FU6N1d0k3q21yf/hU+RijeBP3/C/2+xiH2/7ClJhpjHMMh4XtX2AlVoNh+VJp4N2fkB86QCz
      ibH5o5IBjWRhdvG3+p5LNHmy22V+7uUEbXV9OLVcL57qGOTd3dnlI+CcIzUjKuHsc4UQKALq
      e7RKPWv1bHtCcRCwXFMEtVLo6eN2N2EcG8pVkoRBltFLRyRhQSSyu4PIBy3gaTnDcRIMTPjZ
      e8faXjQ2ez0GWYaS8lScn1GeY8/PI0Y58vw85t4T7FoLLSXRYo3RLz+HYYZoVnFFGJFbiyhF
      iFoJEfpegKjEiMUa4Y9u4noj1K0LZP/lfe/QWIohCoj+7Db2SdvLjZRjP1W2vBvOyXNNgjeu
      oM7P4/AKyA9brYlLzUqtBjLlfusJ/aGf+R0LHExQhFATDDP/HRbaoiI3uOnFL7xD/eTfnYHf
      sOOXXCwWr++eYqWXQTwOznmP6CTYrxABRYi0p8bqn3d2/YZIxZTDGv28QxCqAIMuXl8w0F2S
      oIzF0UtHlKKAUBWL3XkzDdhNeg+jL0yzPfd2eeFk1aXnhbaWUWHCfZrFf7HZ9J7ECxUq11f9
      9FHslRTUtRWsFMj5OeyjLS9FXo5BSex6C6xDnV8g+MPXcE/aiKW6N7YoZEoQxd+Cj++1Aetw
      g9QPzgwzgjevom5d8OccyP/pDsH1FczaNjyVrNW9hS14AePFapVeOqQ/lDgElSg63kGzFM1q
      fab50R3esa/wXjgHqUZV4omS9mFwzrI5XEcJRTNZPvK5LxrlsEoSlHa1QR2eFx7IiMyM6Kea
      uSTEaIN2lkFm6PQHNMtlpJQkRXfNTA0sj8OiMeVg/NjexX6SMtizYpyMKyF8D2I0IlJqXyXq
      KDxstbjYbFKOot1kvZqg3rk2ufMFr18k3xkgz8/7MqE2qMtLPoFcnPM5wcU9CyLV6A+/QVQT
      ondfxY0yhDbYtW3/t4MU89U6IgrI/sOvCb53CXF1GVFcgNSNVbZ6PQb9K97XBQAAIABJREFU
      3qTqs1qv08u6PGr1cQXvf7l2uHLbQZap2mqCqTCMVh+aRdNrmPlq1V6vMfCbN1D7OEDGajpZ
      i2Yy6wnhDbcDKuHpvKVfFKRQBL7U5G8LwZSKbxJIdF5QGlCUlKAn/DxvuRCq3RsCjWmq01M4
      0/+/SDhn2Ulb5Hk04feP3/G0Cm/AgWrQ9st17P0Ngh+8Ao0K0c/fgVyT/j+/8slrb0j4x2/M
      LBb3eBuUQqzUsV+tY74ucoHVJsxXMZ+soz95gLq6gnna8s+tlnDa4HLjF/qPbgIwzDKe9HuT
      4cSFaoRxGZu9FrlRCCCJNQPdIlBN4q71FIepU+96w5mavnMO0R0iqhVf8oTdPGCQISKFkxK3
      3kYoCYWbvcgN5psNT43YAyEEtehg/ddGsvDMcvnT2B4+oZHsKuU9K4JQxH4qyKld4lo+LlOK
      SS1WSMdqo0E/TWdCmr1X970yFS8L2mms9SYOY4zzttOmT5FS1EohdpRif3kHuVhD3b6CufcE
      1+57pedayYc2cYioxLjeCNdPMR99A+UYda6JWKiRf/oQ2agQLNWQjYofj4wD7FYX1lqIRgUx
      X0Wen0e9dgG30yf/4B7hO9cRl6ZcX5xXbBhv5bkkwYgu/cyRpkHBLDXUStFuzb8Z7P/sexpa
      DoeueG8IALZ7uGIARyiJCxTCOn+ln7pzuFDNLH5tcwZ5l1o87ys7h3z1Rw0rnQa1eGGSK6Rm
      hEScWhYTILDWLxNjDMY4BHKGcDa9oLUxk+R177TNNL6N21soI+IwIg41aa6n9WVPjcVaGSEc
      speiNzs+VHnjEuEPbmC+eoK6vDh5XfPZQ6/HDyAE5sGm//3dNdS1FZ8gVxOyv/Zl0Pgv3sa2
      ++S/+AzwNIfovVveHK8UQT/F7fSx210vrVgsukGWTSyalJScbzRwrsY3m5sYBwJHNYGmqaCS
      MvKEjjgSORHxBWbGIl2hBmc+e4h6/dLMnWTf6whFKTg51+t5Me34Y52BZ9xYElfIXlj/v7UG
      Y3dDhsc7OzzudDBAdzTa5fgUm+FFze4ae/pmWSACbiwtc3NlhbkkOdDq9TjUSyXKUeD5RQs1
      wj96neAPXwMHYq6MebiJeeRpB8KB/uLRpCYevnN917HFWu/dK/zkkesOcYOR3zjTIckwI/3r
      D8j+5iM/0bZSJ/r5O5j7m9g7azgc2/0WD7a2JptutV5HScl6e4e0sLSqxAnn66uoahkZnGKi
      rn0wDXoa8ntHL37Y5eWfBcbzwidFKaicyKb3IEiLvw2CT1L2UiDOFe5/xlqiQm34RQrnjtHJ
      WuykWzPc+WkcJOkXB77yEQUBl+bnTyTAOw2HI4k1SVBGCol2OeJcE1HzJTsXSMI/fB05Tm6l
      QJ33P4tKgry46JtiQPDmNfqvzpH9y5vIt6/6CouQ2IdbuEGKunkedXWZ8O3rqPMLOGfJ/uOv
      PZWgkhD95DXk1SU6oxYbnf6E419NQhqlEk92dugU3fXxHSFUEXJvPyTTuKc7s79r9RHjr7i5
      f+LroCGYl4mh9lSIl4Eg05poz3TPWJMyLSgLcRh6Vd4oYpjnk5nd6WT3LJGZFGNzLI7hsEcp
      qFIO5yZD1KkespNuUYnqVMKDncUFpxe8si7d1fTPDSoMYLuLbZZ3JUGKJNCttcg/vo9sVol+
      9jZiLgEEtuOJWGKuRDmoMmSACAPUcgPzcAv94df+8UpC9Ge3Sf/rB6At6sI85knbX5EDCYs1
      jNW02ynajgl1mlIsWO9ssN3fvUKer9cP9W8mzXEbHcRy3QvrrrWQV5aOvLu6YeYrO99SpaYe
      Lx4qrHDWCAIpi1u4IDeGYW4Y5TmZ2S0bqqKKM1+tslCtztwl9v58FghlSCmsMsh7fojFZrTT
      TZrxIqGKCVVMJaqTqKNb46c9GqUMc1ED85svMQ82CN+7hVmdwzk7m7y1B+T/dAdyjWn3kYs1
      KEdewc2BXK57Dr+AubjuRyKftmfErVx/hN3uIuIQhEZdXCT4wSvo9+95tYcfX0Jr6A9tQbJ0
      lGNLmhm6Q4MrjAfqpRK1vT4OrR40i3h8roT8fjFh1hv5Bltu/Cab+jwTeROY6Ux/G3jeys5p
      EFigO8oYZJrc2gOTRuscOEdnNGK+Wt23sMbNLjibTSCEpBLWSIJKcSVwZCadlGmlkIde+cdw
      RSPPb+3j6NwGy5BmqYwQ0lOOtcWut7GfPEDWyogfvjKJg/UH9/xcboH8t1/6Btdq06s0KOGT
      2odb5J89JHz7GtG7r5L90x0YZeMPiZgrEf70TegOyX9zl9A6XyF6/SqDvM3mTualzPEVHiUk
      3SGTxQ8+H9h3zptVf3xqt3LjHm+T/9Md4v/1PfJ/+JTg7etQ8xtHHNbk+paQmdGhMx5njaA1
      GDE4oavGoOCfXGh4Qta4CjSmNpx1XjDNBZ9WMdM2p5e1KQUHyHVPPcfQw7mQQBznY6tQxJSj
      iFQPid97Fboj77jS6mFaPZzxHdvw3Vf3U4KLmNkWsufqVd/FtestXKuHfbqDfP0i0U9ukb9/
      D9cZIJtVRDn2TanC0SX7zV1Ic8RSha7IMCaY3MYcmv4onFn8SRj6RN/YItmezq6Z3NkBxPl5
      oj9/c5LHTA+1H5fgHoVB3sU4f+c8K2QmfWkbQJ5257cHA3YK1a7pxX6QCsSLgnWGzGZsj57u
      KjNMHrOM9IDcZiRhhOL4iohxKVFkkULQybZxoYSF6mTxyeU6dqPjjS46A8K3riHqFW9GMb3o
      Cq69fbDpa/G3rxC+9yry5jn/+MIc0c/eQlQT7GYH89UTaPUQpYjwj14nvH0FdfM8tlYhzWZN
      LISLJovfOUuoJNcWizHQguk5g73dW4fXDIJ9ig7PA4d3rzktjNV+0P4A7FUVPCsYq+llOzi3
      e66eSQ66PRhMPAW+DUQqYbG0Sidt7WusWGcZ5F2EkGhjEMd+RIdFE4gylTaEeYS8KLCPtlAX
      Fz3Ds5rgtrvYJ23yf/zcT3X9izcg1+jPHmLub/jFNr4TDFIvkAWEf/japMMK+KmxCwsYB+bO
      Y/QHKXK1SfC/vI64uox0jrXNzf0WRmJMPXcksaFeSuh1u1SjEsTBxGpo8qm+2fAcpSJpp9Xz
      lagDdH5Oiml90DHGoahzDm0zlAxPFMMfNXB1Vs2yvdA2Z6QHJEGZoDjGoBJFxGGINgZt7YQ0
      FkhJOY6pRBFKSpSUtAYDtnq9/ZabB5DdpuHpr0OkUPvk8J4VUigayeK+3wcymBCt0nLE5jEK
      EM75z3phFCF+eRcNu4PmQPQvvucH0ptVxM5g0vTK/voD3DBDLtWI/uJtRByS/d3HuEFK+Na1
      SaOLVCMCiQsDz+v/+D7q+irB9y+T/tX7QOqZocWCaPX79I8wdADNXClkqbKA+eUdnLUEf/Q6
      APbLJ9jFEnlFUaomEIfQ7mM+f0Tw41vP3LNxztEabQCO+dIyB5UXHI5utkNuU5rJ0rEhjF8L
      L88LAsZuNbOexcFitTrRYBlLfowf3rugxwd8kH7oUd4CQ92jn3dnSpmnxUgPCGR4ogHp8XHH
      4UlmDhxKKmR3atFlesKhyH59F5FEPpRpVr3ZtTbYTqHt2Rl6R5aHW57/D9iNHcJ3biDKEeb+
      BvrTB8jVJuFPbuG0wXzxCN57lfC9V7H3N5CXFj1NWGuedjqHLn7nHElsJ5FN8NbVmVa3KIUE
      YYyQChaK78M61BtXnqthKYSYIraJybFYZyZDSOOBFusM26MnzCerKPlyF/hxOGgdBPtYmke8
      wJhUVtmjp39c4psEZYwzlIOT335zk2GdIVLJhCN+2lhTSYElnyghHwxHblJay2XmLy5A6gfU
      yS32SQv9yQPcMPNUBm0Ibp7HPN2BNIc4JPrJLT/pNVf2V9w0x9xdw9bKxD9/h/z3X4OxXhli
      lPu5gGIxpmUwt5qUgxJCG7Z6vRlroP1HaogCybxp+Om2cgyDzOceUiDOewKaXGvBUt2XOqU4
      E8W2gyRncptTkXMzz1EiKCRqnvstXwrkSao2zjm0MewUHlrlIwSuDn4TxVzUOPFI4nhedKB7
      k3+Pu7wnhR/QzyfT/4fBV4DmeDrI6Ny+QPiT13wCuVBFLtYQ81VPb8g0WIdZb02UGWQlwXWG
      pP/vr8g//Jroh694dQgAazEPt7zOppKIKCD9Lx9g11qe8uAcYTtHZRbz4Tek/+HXNAeHs1a9
      QkVOIALk9gDRG/kZ33Z/n0ndvuT8MLQHnuj2DAhkeGgfJjxGofukGOS9QxPls8Kxl9Tx+N3T
      btebZycJpWdUbx7DOsNIDygFh/PWrTPMRU2M0+yk2yyUVk71HpnRbHS7CHE0P0UKQRz4JHKO
      gPQ//RacI/jeZfQH91C3Lnjl53tPEOWY8A0vWGUebCJXmz4BNha73iJbbyGqiWdyrjZ3+fLj
      OGWUoT+4h/vVF4g4wvVHyFKEq1cgNwht4JB1IyVci5pUag1EQ+Gsw6Bxq5UZYhgwqe9DodUk
      QGz3Yb4607QUzcO1iI7DUYzPs4KSwcyE4ovAkRsgN4ZHrdZESLYcRVxqNp+71t/LOl7RLe/t
      S0rAfznzycokMdw7WDHGMO8jhdzXC8hMxlcbW4gjQx8PLws/RMkA2coxmZf8czt9RDVBrTax
      Wx1EOUZdXiL7xed++D3XfvGHCrlU9/In4GVRzs/7CgwgGxXsZgd1YxHRrGLuruEGKU57ZqfL
      NOLtq6Sjczx1ORxywZPSEtXKPr53wCBFPGnDZgfefXV3MXaHk3IneNeVWMWU5qsM85xvNje5
      vrREFAS4re6RphjfNmKVTC4I3tdhQCl89irWQThwA2hj2BkO2Siu+uCbLlcWFp5bzSE3ml7W
      I1LBkQy+6c7yQZnJWGVZCEFMyfPlB49RUtEedtG2dEI+iSNzPUKXIC9fBmdRl5agFBE40L++
      g/lmA9GsIM/NwxePJiFQ8YEIbl8h/8cv/BV9pYH59CG21UMuzGF3+gTfu+yNrJUkKEW+Gdbq
      gRCE792ijeFRegwrU+Sgis8jQCR+DoG8PHMlFlOjjs45b7lU1NXTPGdxbs7zhqw71eK3zr5U
      isJeOLzhxkEXvNNC211XngD8vOwwy0i1Zpjn7AyHM7fGchRxeX5+X6351B/COR612nRTRznJ
      udpceua7iRDexG3m9bFs9rfoD2PCEx+qoBI0fWUrDjA3FlEq8oxI5ybUZ9fqg4D453+AWdtG
      v3/P/3moMA82JyrK9unOpB9gOgNQ0rNHVWHhuVAl+qPXfVIdB4jlGnn/eLHeUElCuZt7uUAh
      Vps+1Jo+B8FuDDV9jpxzbPf7XFlY8Iu/P5q5UxwF5xyddPvAsvNJ8bx8MSlkUYJ9fuQmY+j6
      zEUNgqedDq3h8MChcQHUy2XOFfzz50UvTemlKQJFLTpcx+dZIIRgpXKJQWrpUaienfBkX2zO
      U41izO/uoRAY4WP86L1XUVeWMffWwTqy//Ep0R++hlzaVWxQl5Z8gjyGdV49YZgS/vCmJ5+F
      CvPRfcx6C3VthfTTB8hmlfDHtzDCK1AcBYehNDaEwF+wbFE21dZSCsOJ3eqBf19MkyVhuPs9
      nnDxgz+3xw28H4dB3gXBPimUbwNJUJ7Q6YN+ls0s/lApylFEOYqoJgnxGXoHV+KY1VqNrX6f
      +crZxnJQxIm5IRK1U11pNrpdkshgv1wH8I2vNMf1RgTvXCN4/SLZ332E6wxx7f5E/3/8XLlY
      wzza8kmvEKjz86jXLuIC6fsqae4HZ6zzRDrrvAme9KoZ6TEbIAw0jVKTVI/YGWRs9fsoKYkD
      rw6Rak0UBCxUKtRLpRntpdwYWoMBzjlW6wcr550Ez5v3ZWZELT54TvhlY1yuhakcoBJFzFer
      Ex3JFwEpBItzc8wXNklnDe00Wp/+yxrmOcwnBG9dAwHq0iL680eY9Za3N+2NcN0hopLgRjn6
      0weIaongtQuYx9u+xg8TOoT+/BG8soxQ3snERSHq4iJmveXvSmnuVSDGfZdjjjfXksftLXQu
      cQRcaDapT1GgrXP005StXo8nnQ7zlQpKSnaGQ6IgYHkc93+LaCSLJy6Dv0wEgZRcqNeplUrP
      ZIrxLHhRNki5GYHqYswI6eZO3ncYH9cF78urC01O+6SNu7GKGFtyliLkch3xYAN1fcU/5/H2
      zGuJaoK6cc7bo24PvHLyepvgzavI5Tr5776CUGEv1LE292HgMRtAEJJmnrJxdWFhRqoS/IVl
      LkmYSxJGec5mr8dOt0s5ir4Tix/4Ti5+gOB8vT5jWvdd0Gt5VhgL2MhXTE5R3pZCIL/ZIPvd
      V8iVBna9jbp1gejNq1AvI9Kc4PZV5ELNW57+/A+8DMp62xPMphpRolpCXVki/avf+fHGojss
      v3nqF7qxIBRZ4kjTAZLoRLV4h2W1PkeyM4LFaLfyk2rcVgdxbh6Er9ZdbDYn+cG9jQ1qpRKL
      c3OnHhH954rMpGRmNONBfBiCvVqdL0Ox7UWhGlW5ULvk5cJP8REEIOsVxPwcwfevwM3zZL+6
      i6yWkHMl8t9+hX205Rewc0R/ehu7uYO+u77v6m3XW+T/8Blyfs5vklGOS3OcdQS3zuMKAS0Z
      lBhmI9Z2tk+0V0uhohpE2K/uE8xXJwxT97RN/v49or+sF00337+Jg4B6qUQUBDztdrm3scGN
      5eUzKWZ81xHKaOK0eRQykyLW1tbceKJrvPinjYiPQqo9w/NFduqmoYuELlCKUCnvOSwEUghG
      ec4wz3na6WAOmWw7DOUo4vrSEsJYzL0nfrA9UOS//BxnDMGrF7w0Sq0Mg9QPvGx1IAy8AnRa
      JLFC+N1UVIL0T2+ijEB9+gRzdw1Rjon+/C1wDn3nMXa+yjeBZnSACNdevLa6erCJuXO+ChXv
      dufHOcHY8nasJN0djbg4/91IRL8rCMaiteMB92kl52MhxMud31SK+UrF6xNZS2/kRx7bg4EX
      sz1lW3886zwODfRH9zF3HnvV55//gecAdXLkagNnLUJKxIUFXLtH9vefoG6cI/oX3yP7r7/3
      x3frAq4/wjzaQq42SPWASCvEZmHPlOZ+8f/+a99FDhTzf/Iaj/XRfYBQqcmV2z3Y9F3mhbld
      mcN4lpoyzgnGEEJQK5V40umQFRWjF4mDQrqXEVX4C7IkkNHM+znnMM4QSO+Bt5NuTXzmgpEe
      UIo8n2Svyd1xeFYtlufBeDZB25xS5IdynuzsnHrxA15deervxJhnbB22MyD6kzf8zw82yH/z
      JeAlDcN3b0ISIqoxbrtXcIcugRAE37tM8PZ1XBxQdxZ39yG6mC0I3rxGGtmJDqcoRWiOn6LL
      i1mNyIL++ilyYQ4ZBqT/7UOin94+UU1fFJuil6bMv4QNMM4nn9Vx9Fnes5fvEMiIWhQy3R4f
      6C4SRSB999cTM/3jQZanDHSPSjRHKahMnNu/60jNkJEe4BxoZ55Lb3KigndhAT57COB5Mst1
      zBePvAJ0s+Lly1frmHYPRp72HP3Jbe8GOcpRqw1cd4i+/xR1ecnTk+erPjSKFPJck1HeR92s
      U7mwgKgkZN2NEx3jaDBCPekS/vH3/RXWWC+eW0lOHO7VSyWedLs0ywdLk58Vpk1UzkIX1jhz
      Iq+wMX9sL2JVmqHSTzdg1f/+f/xv/94JR25TMjNEyXA/u/A7iFBGlIIKoUwIVDBRcj6pAQZA
      NY6RUlKJYypx7PX60xwRBajvXcI+2EJ/+A1uZwAIyDVysYZeLqH6XsrEPt7GbXZwrR5ifg79
      1RruyQ52rQW9EaKSoFbquO0+QkC8skwoY0QSQW9EZSenEzLR+j8MQgnqF6ZIgVIgSjH5f/09
      aqWxLww6CIFS9NKUQZb5z/uCNsF0Pvm8G6CfdxnmvRlRBOBAYebD3mevt/TMYzvDIanO/e0K
      SyfdppO2ZuQRv4vwH1iSG8t2r8dGt3tqFejL8/PcWF5maW4O96RN/rcfoS4vMXh3FVcu/MAK
      tYXgil985st1pJO+CXZ/w3sCFLAbO8ixHo+xmK+fkv/6LvruGq4/8g20zOx+GbUS4tI8507Q
      od0ZtclNhltrYb947Mu8UYC8tLgrx3iCc3ax2URby9ebm3RHo2cKHU/yPmelCi7x4e54kN05
      Ry/bYaC7Z3GoBNpaYjlLoMrMiMyMKIfVIzn7zwNPb+2TmtHMqKQ34PAivSd53ygIfFWoSBIz
      5469mgJFHuHjajoDzFdPsBs7mG82qP3Bdf+kc02in71F5lJUtYb+ch3SnMgqzNM2rt1HLtVx
      1sEoQyThhBY9HqkUtRJCKU+JqJa83PjUcUipKMcxgRBHToPFqkqoIvJPP8O1+0SXFyGJUG9c
      PvazTmO8CXaGQza7XdZ2dkiCgFIUUQpDkih6Jk3Vg+BHbO1zDcfEQYJ2OQ43iepjdTrv4L3H
      NDMTnETBvuGhcVNM24PLc7nNyE1K+RhxquPQyzte73JKU2aoewzzHrV44cTzw0oIhnnuLYFO
      eEUz1nJvc5MbGyn280cEt68gqwny+q7kt/1yHbczwH1v2bs6/vmbPiz65IGv6AB2u0v80zdx
      owy5WCf7+49xDH0ptF5GLtR8ZQlwnQHmzhry1fP7jue4K7HAf3nhj2566cKkyNUGKa47Qqyc
      nOcjhKBRLlMvlzHGKwEOsmxiJ3V5fp5q8vwFjtQM6WYtSkGVSng6ftYY42nC6WN/1rL7tIT7
      GIHDsT0YsrzHUM3hDvVxCmWEfE6TAyEEi6VzWGdnhqeVCAhVfOI8JFSKShzTz7JT3861MWRL
      c8SjJeSV5dlQQhv0R/d95/f8PKyCqJWxT+56bf9xxUgUsfinD+CTB4Q/eQ390TeY+xu4nQFm
      Z9a0WUxdXccXGuesv8UfUVKOC1MS5kqIamky+GK/foq5v0H4L9852Rjk9LHg84KqUpMF309T
      HrVaXFlYIH7Oyb9YlTCBZqB7KBGc+TDLaRHIkLlolj4u7j74zGXWm8gNsoy4CCnAhyOloPLM
      u/co5DYrLJkOP8l+6GW/SthQD3jcaqOKcUdtzImaSQdBCMGrKyv7aALu66de/LZeRl1YQFxZ
      9nKHT3e8S8yti9hWF9GoQn9E9g+fgoPop2/60cMHm+T/+AXgS6fBaxcQ1RL28Ta2OyR48wr5
      33+CXG7QvpzweHtw5AaoxjEXm35uwW12yP/2I0/JqMTeqDucDWOdc9DqYzc7iFdWTsXF2ez1
      2O71uLa09Nz0iemewHeRYSCFEDRLi4CPjVqDwdSD0jvHu7NVfHPOncj82DpLdtBQtBOEMkZb
      yyDLGGmN4NlGVAUgEZ7XU4Q1woH+5IFXUx5m5L/5ElcYX4h62Tu7/+oLxHIDUS+Tf/QNOFDX
      VyaitOLCAuqVc4hKgn3S9oM1cUj+0TeYO49xOwPklWXEUo1+OjjR7MKDVouvNjbQjTLRn73p
      adtCzC5+B9l/+QD3cAvX7mEfbjLMuqea/Z2LY3JjeLC9/dxqf0clw2N3+L3qfi8T6v/6P//v
      fz/QXawzhEqRFR7AwYQj5J27AxmeqWKXFNKL3x7xxUshD8wDQhUSBQFRwXdplsv00/SZKhqh
      UixmeCW33CDPz8Mow3zxmPCd68hmFZdqbLsHmx0EAnPXuznKihfMkoHyzbA3rnhFiUxDP0Vd
      WwHn+UEiCVEXFpC1MnK+CqMcudokLUNr0EObw8+tc44rCwssVCoopYjCENEd+Q1bjsE5hLbk
      f/cxslpCBAq5MIdYbWIvNTydI4xnRkS9AcXBC1NKSbvfJ9WazmjEMMsYFm6bRw3enBZCCDI7
      8vPYL0gN7jhIhJcj95QGR73sh2B2rxiCbtbiQecOnXT7TBxhhBCnljnZi+1+n0etFg+2t/lm
      a+tQZevjEIcholFG3brgFyzg1tuEb1xBXllCXFsh+vM3vcT5RsfLnBTHrb9cR2iLG6aoy0vY
      e09gZ0D+9x+T/ef3MR/dRyQR0Z/dBgfpf/oNcqmOnJ8j//Br3GaHQd5DH1O9FTJFSW9MUk9K
      BFJ6n4Jiptf86i769197tmoSIl+7AHVfN1dbI+R//gwx2r3KOvyA+WGYplIIISgVlaHtwjj9
      LFEJa89c0TkLBAJBOZyjFFTJrR/2DmXMIO8y0D1iVWKhtEo3axVD5+Gx0uQvA8baZzLA24tI
      KQgU6vYV78917yn5b+5CoIgvL3p3lXNNoj+7jfnkIfrTB8UfBsilGvb+hk+WC4jH2141QojJ
      c+Of/4Evhw5TGKRkf/MhcqWBvlAjH2xg7OEXAuccpUR429G0iuimiEsLOOHzqFBFcK6OtMLf
      ffbQIsR8lfCdGxDvFhUE4liqcK1UYnswoFEqsVD1G+35hiJfHJ5n3nhyVoQQM8lmJaoVVSBZ
      DFfPU43q39qtai8uzc+jrWWj22W7f7zP1TS0HYKwhDJiLklwj7a9p1cpxjmLunkeEQe4NCf/
      x88J/+QN74w+rhIJQfSntxH1MqZwfCEOvA7oXInw7WvoD+5h1ts+hBqMYJgS/fgW+cf3EZUY
      dW2FzHqPNWfloQmMlJblcoNYS2wtJmiMlRwc6tEOulmis2ipZjHh4z6uUYKHrV1F6lAhLp1+
      6ZajiLDQgx2bonxbsM5grEY7jfe09v8Zq73Lpc2IVTJTTj8pjqw17h1af57Ff9YuMqKgQctT
      vp5zDiGtP6lkJO3hRMg2/Mlr2KsLk1uy0JbgzWvImjeQUDfPI8oxIlCIqjcLREpfEk01lCLC
      d2+if/sl5uEWohIT/sn3MR/fx9zfRMyVsQ82PU/o4gJ5tkOuffFh753MOYtmxOrcHJVPW5i1
      FuFf/mB3eg2J/vgB8tYF7KqlEw4QVySRHFAbL/7ngJSSapLQGgwm1IlvC/2sS2r2F0x8tcsC
      +8/fUeik2ygZ+PDrzI7yCGibk5ohqR5Ri5tnFvPlxtBLUyKlyI052UkQIF0ZKRyhMjjlJoMu
      WEuwk+E6bcSVJcwXj9CfPMBud2GY+XHHK8tkv/gMEQWE777q6Q/y5+2JAAAgAElEQVSLNezT
      nYkrpLp9FaxDrjS8BEkYEPz4JuLCPNG5JlTGd1qHNq5weN9zmELQLCU0yzXkYuBLndp4y9LL
      S7hGhfhf/QBrDPMf3UffmKevhlTuDeBmA1Rhbt2oFJ/NnVojdKXmy99nHfefFtplkwvn+EIa
      yMAPvqiEQIan8hSb7gW8lA1gnSEQIQPnS14HbYBxzT+UJydpDbKMNM9PN+XkHEJqLsZNqg/b
      qGWB/PM3yT9/hP7wG9T1VczjLaLLi37+d62FrFfQDzahN5pUeVym0Z8/wm50vOHdz97yBDcl
      IQlR770K2z3S//hrguuryIUFX+dvVHzikhuss+Tm4G0bSsVipUasEsTlMuryInathfnCd5WV
      daS/+4rwe5ewW13Cq0vUyguIYNddUdTKXuXu8TZkGnFjv6v7UZBCYKwlf8Yey1nBs9b9nbIS
      1YiVFz17Hk2pMV7KBhjnFqHuIQ+RzHZYelmHJCidmGKRam+IfZorlJCai/NV5n6/4cls954g
      zzUR5Zjg2ipiuY7d7qI/vI968wrRz97COUe0MOcZl4HE7Qy8MtvtS8hmxVdf6mXcVhf9y89R
      r1/0rozVhODmBdTNc9j7G7jcIG+e802y33+N/OmNaauxGZxrNKjGJV/PL5SfReJngd0g9b7D
      7T5Om8kxSvDVn3GXuuQbhdOO88chN4bOcDiZsBvnAfPV6qnDzbNCNaqRmhGVcO7Mc9CXyntu
      HKLxCT6/aJYOf/wgzJfL9EajGWOPo1COIlYoEdkIUfMVL1GOkdUSdruLGWYEi3OoS4sQFi7p
      VnuXyGHqI81anfCPvw+dIfrhNnKujP7iEUES+i7vxg6iFBEs13GZRjYquN4IN8xwhYCWWK6j
      3r5C36Q4tz8BltJQigKEdWSFAV98fh5nfLxLppFXl4mW6lCeHaoXjYpXjVYS+9lDRBwirs8K
      CzvnJkZ0e6+iTzsdcI5GpcK5KEIKwVq7TavQcvo2kuFIJS/MM+w7Rfw/Ko4ba4GGU+Nu7WGP
      btYmksdrXEohuNgz8Js7uFCh/vIHPk5fbiDKEbbdxzzYQL1xeeaK6bSGXuptUaOA+N/+CCdB
      //YudqODKbSA7GIN9doFzNM25v4GollFvXreO0jGIfK9V1DjWD8J6S1JOjs7cICBn5AZA90l
      jOcJf3wLIQX2qyfozx8R/fH3EWOV53JBCmv3/dDOxQWc8BuEUuRzhd5o5rUzk/p+Do5qWJ/h
      53gtUUESRZOkN83zwjbXkBvDcq32rd0JXgSeawMYa0jNgFiVZwhtzjn6eWcyxVM6I9OzQd6d
      kegbZoZQnIxgJYVADnI/gJgb3HbP1+mLWn3441vecaUc4x5s+Qmu5Tr2rz9BXVjwlZtq4hth
      mUZdX/V052oCDvTdNV/5KSdeR9T6qajwJ69hPn8En63BrQuMTcg7aYtR7vZteucslTggLrT3
      xbKv19tH276cKgTm80fIWxcmoY4oxYi5wuo0kBD4jWEebGK+XCP8yx9MiHKBDCmHVRxucudx
      zrHZ69EZDplLkhkm6GavR7NQnIPvJp/nefDMG8A6QzvdBByloLrvsaHuo0RA8zkFVadVoseD
      zOPH9JQ/8XHQ1rJ9rsq8uISaKyFWGwRvXfdm1+stYHe43DzaQkQBcrlBcPsqolZikGjKqkL+
      V+/jhinxv/4hLs3R79/zyeYwww0zgpvnCb5/2W+WwlRDf/EIgOiqZ5ymZogi8hadYk8zT+aU
      ozKxDSbOLwDq+5dQV5a8O2V3OCmdCiHI/uZD1MVFb4it7cQEW948h7yyNMMSlULuy7GEEFQK
      /s9ybVa7s1Yq/bPXizoKz8xplkIxnyzTiP0C7+e7hCslA+rxAo1kASEk1lmG+azywVG8HW1z
      cpPx5cYGemrKa++XcFpaxtNhn0crIdli7McGbiyjvncJUY7Jf/EZ9ovH5DbDvb6KWdsm/++f
      eE+wakI5qKJ/8TkICN64ggsD5IUF1K0LhD+6iVyq+bJnrr3m5zdPyf7qfYgCgrevE7593ZdJ
      ndfJHKQGkJPFPxn2CKA2jMj/v9+i//ELRKaxXz3xpteNCk6Abfcwd9Ym5yD80U3k9RWfl/zD
      p7vnSclJIkymvZ3SARib843yfN85nUuS/U70/xPhuUKgscjoMO8xyLtkZkgjXiq6yrs1Z8Fs
      U806w+OddQQh5ahCKYwmJCsB9LMOI52T5obtfp/lWg3rLI/aWwQyoBzGlKKI7JTluVApLmxo
      7KcfY87P0397kUjFhOUYUYpQ15bZSdvMpQo3zHy4ZO0k1FBXlhBRiFiq+YVbighev4h93PLd
      YufI/up9lLHIK0uEJW+ELa+vgLak/+m3BG9dZTSfMspm1avHy66RLBBqSW4daOMrSx9+TXxx
      ARf5cyhqZcT0DHCjgr2zhrqy5G1Zx4vYOtz9TcQVT+lwvZHnCe2Bw5eUD3SdPwXOutn5MvDc
      SbB1hn7eLbj9B0/qCCFnsvjMpMSRQGBY766hc1+NCKQsRK8koYopRZqtQZs40vTzHkOTMugb
      pIgIZenUPKAkDGB9y8/rrrWI3jlPZjLiZhXz+SPy331F7Q9vIu6tIa4uE7x20SuwpRrz6QOC
      t69h72+i//ZjL23+wHvx5r++Q7RU853gn73lu8MCxOq4Ne/IyJBvXiJtBnQGO+DiA+kP1aSE
      iCLif/UHfv4gDon/zY9w7Z6vTNXLyL31/Nygv1xDzFc9SW4M53C9IcKBuLhwaIlhkKY4eK7k
      1jlHN2uhREAl+vYl0E+K594AIz2YTI9Vw+OvIN4zeFTM/MJ8tUSqNbm2GCvIjGOQO3ABEolA
      8mCzi8MiKBEUr3+SsudeDE2X4PYV9KcPkZcWaJsB5bAConB8EYJgZLFJ5NXfeiMvPhVI5HK9
      mOtNEEs1TK+P/uQB8c/eJv537+JCVVAjxOTC7pzzzvPO0Rn1ySsaOxgyysIDz1Ok1MR/zay1
      0B9+Q/xvfgihIvunL5CVEsGffH//B4sD4n/zw8kV2D3exm50UG9dRZ5gZrgSx5yr1+ml6Ykp
      D3vzAu28CfV3RQL9pHjuDVAKqp40d8Ih9tQMyXXKmL+hhKISKcZ2XmOvYmMNmdbkxmEslGPF
      djfzvhco5CktUwEqYQKlGP2TK0QypmpzQhFhvr7vze1+dBP9u6/8iGEpQpxrFneZXQtS5qu4
      RoRFwF++Q1trRoPdxtH5RgMlpRenNYbWqIuxDqMV4FUmDjtN04pt8sI8YRL5Tq5zqAuLE+cZ
      nMN++gj16nlckfDapzu+UTaXIFYaqIU5X57FIqRilkrgZibEhBBU45iNbvdECa91ltbo6YwO
      TyBCGsnSiTQ5v0t47g3g4/bju3N++qfLUPcRUlB8DwW7D8YjXeM8QKqAUAUzf3+uEWCc9aYP
      vRTJybktUghWNyH78DeEP76JOFfyYVlu/IyvsX7B9IYQB+S//JzoT297x8XeCOpltPFevmM7
      qfyAu9D97e09vxkzSA8/tnIUMcgyAqUQusg54hDRrGC/WkdcW/FOM2MNUkRBud59Df3hN8il
      mqd1K0/Qs58+9Fn1uBFmLKkdIg7w2RJCMF+pnHADeBrHtMTg3rzvWeAre3746mXlEWJjY8MJ
      IRgW3P+ztC2aRj/r+MUvphb/3vUjjxyLncBYy5N2hjjGA3gaQghu2BD12WOCH72CqE/1D3YG
      Xl0hzbFbXUQ1wTzaIvzxLdxGh/w3dzH/6m0edHZOTro74TEpIShHEdY5kjBk4Rdfoa4u7yar
      U6VQgJmy0fTP2vjcY/q5tqj1j8PG9+8hl+qIC88XpjjnGOhu4fK5cmb0hFQP6WbtA51DXxTE
      xsaGQ8BOukUlrD33Lj4M1hlao43DFz+MB3QnIYJ11j9XMEN+ynTO5o5FnCIMcuSsNEosmxq2
      FCD3KB64h1vkv74LQPjuq8gL8xMJwnS7w0O3OxZ4llJSSRiijfcAy7Xmmotw1ZCguttbGVMX
      4qDkleusw5Ui2PCyMuNm2RiDvFeMnM6qqQljvZjudPXpOSo31pkz5eb0sw7G6ZeaRwTgmyOH
      efGeFVI9wlkOXvhjTK2szOQ8bWd4I0tDoCRCWkIlC72iU3JDhKY5DMn+5neo6yuId27gerue
      uvLiIvG5pm9cffrQ3wWqMUJAJ1EMO/nkEE+7CaKx+nRhbjeN3BjO1+sECB53dtCLFVLTZ7qO
      MtKD3QUah7vvvVSbjayMLXIMQfRlC16dtVAdewrsvnfGIO8yFzdOFMbuxVkT00IVI46YjnsR
      eGFcoDG9OTcZmUnRWh/N2S6u/uDoZV5OvFaO6Q9BEGOLzWM0QHgSEYU9xxPQjyzVS4vI8/Ne
      ovzOY4J3riNvrGI+f1iY4l33CnELVb4eeNXpZI+a8mQTOIfF+MUjDAKDlN5k5HLjPFEQTAZ3
      vGO74OvNTQbZbkNK4JPf0siQRBGjTBOGAbnJJgJQJ9XTcRsdRCmiVK8grie+jHqEGXaoIurq
      xQ46jlWbY1U6NrqIVHzkc4a5n/w7S32hF7IBMjNiJ93aVWx2e8yu97Y/98T9oYyJVERXZ1OC
      eM8H4QLWBzlLb86Tmw5LncBXWFo9eLqDiAL0/Q1cf4RIQrYqAVl/hAB62cEd1OVGGSFyOoMR
      caSYS+aIVeL56nt26Pjfq/U6D6eG+HWhUHdpfp7VSp0H29vMJSGL1dMPDYnVBmKUY+6uI19Z
      9UT653SCt87QzzpUo/qptIWmIYU6k+rQ3pDuLPBCNkAoY+aTFXrpDpnJ9i/hvb+wTG0CQahi
      Wv0RaRo880nf95ZCkBtDd5hTiULSa3OUkgS73sIpSXquTPBkHtcZjC/vwP5Qx+GQMmMlqdH4
      4AnBm1dZXFyGR9voX3v6sVusIaaTWJgkp6XQS7qYLGNM8qiVvNJDqBRXFxZItX7mJNAlIfLG
      ygEPgP30AfJ7l2Z/fUQO4Jyjm7bJbEpsy8+UHwohzkxE4TTnRNsc4wzG5lhXjMAWMutSKAIZ
      EqnkxWwAIQQSRS2ZJ9VDeqPOMX9AUQL1J327OyTPoxOJRZ3quBD0h1COJPHdHfI7j31VZGGO
      4XCLwa0llBNIAduDgwfthdAszEU0ggqwMfm8tjvEdQbIiwuYtW3kahMaZeznj/Zx8s83mzzY
      2vKCXkIwF8cT50cp5T4XyNN/0KnzlubeO0xJ712856kOx/bwCY1kcd+knhCCKEhQNvhnV9/v
      pNtYZyaGedZ5kd4kKBGqmJEe0EjC5xT4PALj2nASlqnEc55+u+9JgGJS+XHOsdUb7Fv8Z6FF
      NHktFO2+hnKMbFaxWx12dro8bqX0hkO2hn2eDvoH5uoOh1KaUIWIKGT4o3Neq9OBeu0i8ue3
      kddXcVtdzB3PAJWvnkdcXZ45L1EQcGVxkXLh8N5L01N/RufciRT7XLvv3SrBV4D2QApJKagc
      mp+VgkoR/vzz4feMLZFym02YCp49axnqPtZZHJZUD30Z9Hl9e52z5Daf3CKNNRinJ//2ZbyU
      XrqDtXb3ZI+v/MXbt/tDBqM9TRCRkUSOYSpPVfc/DqGULEUl5jopa3OKTpqe6HOC49J8hdqj
      DHnznA+t/uZD1NUV7GBE8NpF7MMt0rrElsJDxzszrRkMR6AkqdYo4U3ET4q9VqDCOW/k0fh2
      BWi/K9gePqWbtbBuVnXMOTdRhBBCHB8CZWYEHN7ls87QHm1hnaGRLKJEQDdroW0+aWh4JbiE
      SMUMdZ9B1pvsSn9QMMoyhqNZ2T0pDVFkqJcqVGLDVjcHd0aKEtbyeNT3FIz0eFapdikD84RS
      WEYFNdSVJd/Idg717ivYJzu4jQ7uFnBxgWG6iclTjNXMxc3ic+7G29pa6ihEKSlm5A+Whxvp
      PsYZKuEswWxvxcQJsbv4nxYeBcsnl0z/nw1Kqn2LH/y5N1Yz1D3K4dzBIdB4oqs12qCT7m3t
      717RO+k228OnWOddTzYHa3SzNrnNqE4ZkU2/eSmooKRipz9EF5qA1lo6A28gPYZ1mrkSOCvZ
      7PbJjcbYs2xBnRzOWVLbJpZ15uIySVD21OSdAW6jQxpaOquCwXurOLmb+EUq9km8sei//wRy
      PdkE5SjyMufGD/WEm70D+fpSBATilJt+ub5/8e8MEN/S+TsMxuozF14Gf3dM9XDiKrMX400A
      RwzEpHpYXL3mZ0KZoe6z0V/nceexNxoWux1aY+FJp4USilCGk1hsvGH8xuqitUYhyXIDFnaG
      KcbO3oyEsARC0iiXMNbR7smJHPrLhkXjnCF3OzRKcwQi9APrf/8x+d9+hOxnaOttWsfhXWxD
      qvdTH6Ioibx9mY7dYWu0Tj/v0s3a0Oqhf3UX4fBWSu9/tS8ST83wbHSU6uXdHGCrO8kLnhX9
      vENmjg8bD4Mn1G0812schl62MxH/HXsvjI37xpti3GM5MAQaSyEaayZWqJ7/0WOQ99ga9Jib
      Mlkz1tIdpVgjGOUh6ztd0kpOJSqT6hGRislsSiTjoiwqKCcRuTEMdcoo3a84LIho9XNUkOJM
      8lL9iPdCiYiqWiFOMkqFaYgD1Ll5XG+ISUIwYtLCH+kB2mVUr+8mv7YWk406xDImlJGfl54P
      CH/4ip/G/NlbvsvbT7EPN5E3z3u/YlU6VEpmGoeS2DLt5wjGaZcQZL+6g7qyjHz94jOdD+MM
      YfE5nhXOOUph9YWYrCdBGW0zSmGlWDeiuBDbGZVziZxNgqdj1LEu/PixYT6gk7XQxhIoRSBl
      wetxbPeHZHlUtEiLuJ6cRlUW/PY9o4zWsdkbonWIEAaOSG6/7XlU67Rv6AnLYl2xUjmP3Bl5
      ga1ayQ+pC8to2KVcqvvhlKfbmHNzxDLZX8rtDhHl2NMStCH/u48J37mB/uAe4Z/dxq61/M9/
      /qYvXxbIbebvPAedC23ouz5JX6DieHcMEnxYVQoPLY2eFsZqtoZPSIIytbh5/B98C3DOsT16
      MvkZfAUvlBGBjAhlSKhipNizAYzxsbyUct/CW+88ZaSHlOOQQZZRjiKkkF6X35SoJ2WkEDza
      2Zm8qXWahZokCcMJCW570MNaic6jyZX0uwrnHKlt43A0yxUWqnM0kyU/G2wswWsX/SJqVnD3
      niJW6rinO+Tvf0X8b9/1FqujjOAntw59D5FqT1nO9GTk0eHIzawzTm4zlAiQuYVhNpE/B6A3
      wpQVql9c7ZPQs0ODsxcyHuo+xmqSoPytypofh6Huk+phIZ8YHao4OBMCyT3+VWN4I7sEJQzC
      CapxwiBLvXSeiThXaxAHAf00RcKkwymQ9EYj0jz3g9XCW5tqHX2rV/WTwxGKBCs0S9XGhEMf
      vHvTPzy+gm52yH/3JdG/fAdxZZnofJOW3qJxaQGn9ydiQtvJIIuLA588hYG3X3q0hbp9hSjY
      Xfzu/iaqEiLmawWT1s2+VjXxVLa53QXpHm77kczE52IjPfCDS3728ZnPSKLKoL77c7+JKpOo
      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
    </thumbnail>
    <thumbnail height='192' name='Trip Times' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAbL0lEQVR4nO2dWXBc15nf/3frvdELGg0QIhZukkCKoooyKdmyLFqUZY0cT1SeGdmpmVSl
      KpPkLVV5ylSe/DRVU5lUJZU4UzVOMklGNeNlxuXIJmVJlmRJFK2FpkgCJLER+9bovdHbXU8e
      gL6NS7TABtndQON+vyo84PQ593733vO/9yzf+Q7HGGMgCJvC77YBBLGbNFQA5XIZqqo28pAE
      0VQaKgDGGKhF1XpWVlYwMzODYrFoSdd1HeVyGcViESsrK7tk3d6Ga2QfoFQqQRAEOByORh2S
      qIPXXnsNp06dwqVLl/DMM89genoaPT09WFxcRDwehyzLOHPmDIrFIuLxOKLRKDRNQzQaxRNP
      PLHb5u8q1AfYB5w+fRqffvop+vv7kUqlMDk5ibm5OZw/fx6Dg4Po7+9HJpOBpmkIhUIolUoY
      GRlBJpPZbdN3HfoC7AOWl5chCAIkSUK5XIYsywiFQggEApifn4cgCPB4PBAEwSxTKBTgcDgQ
      Dod30fLdhwRA2BpqAhG2hgRA2BoSAGFrSACErSEBEA3FMIzdNmFHkACIhpLP53fbhB1BAmgg
      yWQSsVhst80gdgAJoIF0dHSgUCjsthnEDiABNJB0Oo14PE4OgW2EuNsG7Cei0Sii0ehum0Hs
      AFMA+Xz+gXvwsixDEASIIunKrrRbE9CsqT6f74EPRr5ABLDeF2oXqA9A2BoSAGFrSACErSEB
      ELam7uEawzDAGAPHcTAMAxzHWX7fvNqIINqFugUwPDyMQCCAYrEIRVHMCs8YA8/zeOyxx5pm
      JEE0i7oFMDAwgPHxcfj9frjd7i2/G4YBXdcBAJqmNc5Coq3Qdb2tnn/dAlAUBd3d3fD5fCiV
      ShBF0WwOCYIAnuchCAJNhNmcdnv+dVtKU/zEfoRGgQhbQwIgbA0JgLA1JADC1pAACFtDAiBs
      DQmAsDUkAMLWkAAIW0MCIGwNCYCwNXX7AqmqiuHhYYRCIUiShFKpZHGGO3LkSDPtJIimULcA
      bt26BU3TwHEckskkPB6PZYEMuUMTwD52hz5y5AiWlpYgSRIkSQIAs/KLokju0ASA9nOHpj3C
      iIaSy+UoLhBBtAskAMLWkAAIW0MCIGwNCYCwNSQAwtaQAAhbQwIgbA0JgLA1JADC1pAACFtT
      t9cSYwxzc3Pwer0ol8sQBMHiDEehE4l2pG4BzM7OIp1OQ5blmr9HIhFyhyb2rzs0AKytrUGS
      JHN/AIoOTdxNuz3/HblDV7LWKsLzPLlDE23nDr0jqVa2Rbp7eySCaFdoFIiwNSQAwtaQAAhb
      QwIgbA0JgLA1JADC1pAACFtDAiBsDQmAsDUkAMLW1O0KUS6XoWkaJEmCqqqmwxNjDDzPw+l0
      Ns1IgmgWdQugWCxifHwcTqcT3d3dSKfTAKoCGBoa2tZZjrAHjLG2ev51C0CSJIiiiIGBAUxM
      TCAYDFp+r1z45jDphP1ot+e/oy9ANBqFruvo6+uDw+EAx3HQdd0Mj175ayd/cKKxtNt6gLot
      7e7ubqYdBLEr0CgQYWtIAIStIQEQtoYEQNgaEgBha0gAhK0hARC2hgRA2BoSAGFrSACErdlR
      dOjtoGhxRDtStwDi8TiWl5fh8XhqBsd9+OGHm2knQTSFugXgdruxtrYGl8sFSZKqB9jw/Nvs
      BttO4bGJxrIvwqMnk0mMjIzA7/fj9OnTANZDo4dCIbjdbsiybKn4FXdoCo9OtNvz/0JLGWMI
      BALm/729vejt7W2JUQTRKmqOAl29ehX5fB7T09OttocgWkpNAZw9exaCIODYsWOttocgWkpN
      ATDGkMvlYBhGq+0hiJZSUwCGYSAYDCKbzbbaHoJoKTUFUBnjFwSh1fYQREupKYB8Po8DBw6g
      UCi02h6CaCk1BRCJRDAyMkKRIIh9T00BpFIppFIpLCwstNoegmgpNSfCEokEzpw5A5/P12p7
      CKKl1PwCTE5O4pNPPiEBEPueml+Ac+fOQdd1uN3uVttDEC2lpgAuXryIUCiEEydOwOv1AgBW
      V1eRyWTg8/nMCbLN7tDkJ0S0IzUF8PLLL+Ozzz6zpPl8PsTjceRyOYiiuGWWmNyhCWCfuENX
      VnflcjkzbX5+Hl6vF6IoYm1tzYwOXfkCkDs0AbSfOzTHaqx1zOfzALDjTnCpVIIgCHA4HI2x
      jmg7crkcOjo6dtuMuvlCX6ALFy6QOzSx76kpAFVVIQgC1tbWWm0PQbSUmgJwOp1QVZU2viP2
      PTUFUFn/m0wmW20PQbSUmgKYmppCLpeDx+NptT0E0VJqCmBgYAAul2vLTpAEsd/4wiWRAEV7
      I/Y/NQXg9/uRyWSoD0Dse2oKwOVy4eTJkyQAYt9TUwDT09OYmZkhBzdi37Ptonhyhyb2OzW9
      lubn5xEKhSyd4Hg8jmw2C7/fXzM2aE9PT2ssJogGUtMZrhayLGN0dBQul6vm6NDRo0dRLBYh
      CIIlejRhL9bW1uD3+3fbjLqp2291ZGQEgUAAiqJYvgCMMXKHJkza7fnX/QWowBizzBMwxsBx
      HDiOI3doou3coXcs1Upl3/w/QbQrtEkeYWtIAIStIQEQtoYEQNiGyyPz+Otf/A4zKxkzjQRA
      2IZ4poCA14lUrmSm7XgYdDtoGJTYy8Ogum4gmSuhK+gxRy/bZ8aCIB4QQeARDXktadQEImwN
      CYCwNSQAwtbU3QfQdR2KooAxBkVRIEmSGRuU53mKIEG0JXULIJvNIh6Po1wuIxqNYmlpCcC6
      cxzP83j00UdNJ7kGDiwRbcZmZ8l2oG4BBINBpNNpHDp0CGNjYzV9vhljMAyDNti2MZU60C7U
      LYB0Og2e5yHLMvr6+syx/sqKMI7jwPO8uS6AqI+VZB5vXbmDr50awGBP+8dharfnX7cAOjs7
      0dnZ2UxbbMnnE8s40hvCtYmVfSGAdoNGgVpItlDG7ErG0kY+/+RhCAKPF88cMdMUTcdrb93A
      6x+N7YaZtoIE0EL+4Te38MH1WcTSBTPNIQl4+vhBeFzVddTFsgpZ1bCcsIanV1QdK6l8W3Uy
      9zrkCtFCBrqDWEzkEPK5ts0X8DrxrS8/DJfD+nh+9O4IeI7DMyf7cegANZcaAQmghbzwpcN1
      5eM4Dj3hrdtT9Xb6MbOSQdBH+zY0CvIGJRrKXvYGrQX1AQhbQwIgbA0JgLA1JIAmoKg6/vbN
      63jvKm0zu9chATSBZK4IgecxtZxu+rkYY0hki9DbyP9mL1H3MOi9BosoQlyVnrAPZ4ceQrij
      +eHlr02uYHQuAZ/LgW8/80jTz7ffqFsAyWQSmcz6NH65XDYd4AzDgCAIeOQRuvkVOI7D0YPh
      lpwr6HNhraigPxpoyfn2G3XPAzDGMDU1BV3XrQfYCJBL4dEJYB+HR08mkyiVSggGg5Bl2dxF
      puIOTeHRCWBvhEfXDQN/9/YwdMbwxy+chCR+sXt23ZZGIhFEIpGGGEgQzYQxoKRo4AAYxj36
      ruQK8WCMzyfxwfVZvHjmCPq7qR2+V1whCmUFjAE+9/Z1kYZBH5DRuQQOHQhidC6x26aYMMYw
      PBXDrZm4bV2nvS7HPSs/QN6gD8xLTx3FncUUHu7bO6vlirKKq+PL0HQDRw+G4dimDWx3SAAP
      iEMUMDTQtdtmWHA7JfRGOiAKHCSBPvLbQX0AoqHslT5AvdAXwCYwxvDa2zegqDr+5BuPw+mg
      Rw9QJ7ilMF0FUwr3ztgkyrIGw2DQyG/IhJpALUS+/N/Aylk4nvo34L3rcyqMGTBWR8FHjoET
      mjuDXpJV6Aara3Tkfmm3JhB9AVoJLwLMAPjqqIx28+fQV4ah3vixJatRSIDJa3cf4YFwO6Ut
      lX9iIYn/86trWEnlG3qudoEEsAN+/O4I/ueFz1FWtPsq7zj7r+E892fg3SEzje8+ASM9DSF6
      wkwzSmkon/4Q8uX/+sA234vhO6sY6A7i5nS86efai1BPaAfkigrAGBRN3xKyZDNMKUD+7Q/A
      B/vhOPU9M53jedz9zhG6HoFw7s8saZzoAgQJnKv5M8svPXUUo3MJnDwcbfq59iI77gMsLi6a
      AVA3u0MfPHhw3/cBSrIKRdMR8G4f18fILUH5/DWAMbjO/ftt8zLGoC4sQHrooQ2BfDHq+FvQ
      YyNwnvlTcK692c7ey32ASlXnAOB+9wgrFotm5d+8CMYwDNNVWtPur4mw15EEDpIg3vv6PFHw
      J78LzhW8Z97iBx9CLxTAD4/A++I3ts2rLd8A5wpCTU2D39Rk2kvour5nn78+fhH60nVIx18B
      Fx0CcB8C8Hq9iMVicDgcli8AuUPfRXhgS1Lu4hvQVlcRfPWPwG9sKOIaHEThgw/hPHvGvG/M
      MJB/5x0IgQA8Z8+a5YWzfwojOwe++2RTV+BpmoFf/HYMhw+EcOpoz47K7uXnbygFCO4AOL1o
      2rhjSw8cOIADBw403Lh2RV+8CnXiLUjHX4EQfXT7vKkUOI6HUSqZAnAcPgTH4UPWfJkMjGwO
      6sKiRQCcOwjB3fyQiAvxHASex5WxpR0LYC8jPf4qWDkD3l1drbdjAdhh7W+hrOBn79/GsYOd
      ePrEwW3z6qu3wIcOQV+9dU8BBP7wD2AUixDD2y+XFEIhOA4dAh/Ynbb0QE8A8/EsnthHlR8A
      OF4A57E6LdJEWA0mFpK4OR1HJl/Gv/i9J7bNy3QNRnIcfNej4Lj1TixjDOXrNyBGo5B6m/y1
      ZAxGIQ7O0wmOb67Xp6xokFUdHd4vjk26lzvBtbD9PIDBGIpl1eI3f+ShMI71deKVZ7d/owMA
      J4gQosfNyg8A2soKlOlp5N9+u6G2Ml2HUSpZbNXmPoZ64ydQr/9oU0YGPTkJIzW9vjyqQfz9
      OyP48bsjyOTLDTvmg7KczON//PIqPhqeu6/ythfAr69M4Sfv3cSt2eqCFp7jcGKwC8F7hDH/
      IsSuLoDj4Dx+vFFmAgByv7yA7E9+Ci0WM9M4dwCsnAXnqTarmFqAOvIzKNd/BKarDTu/xyWB
      MUAS9061iWcK8HscWEzc36z53uyutxCB56AbBgT+3n0bfWUYrJiCeOhr5jhyLThRROCVf9pI
      M9ePy/NgBrN8bYTocQjP3yU00Q3e27XueiE07hG/+vW9N/R68nAUkYAHXcH726a3ZX0A3TBw
      8bcT6Ap6LR3La5MruLOYwre/8ggcUutXLjHGoGoGJJG/Zwe//O6fg3MHIZ38A/C+bgCAurSE
      4keX4X3+6xCbvIcaMwxA14GNmEwV+421NfA+3z0n0lrBXugDMMag3X4dzNAhnXjF8sK4m5bd
      sWS2hKKsYXgqZkn/3dgSHJKAhXiuVaZY4DgODkmoa3RL6DsDzhMG56lGxyhd+R0chw+jdOVK
      M80EsP4F4DY2KK8g37qFtYtvIP/rd+5ZnukamK401Kbx+SR++Mure2pNNHQF+uoYjPQMoBS3
      zdoyAXQFPTjcG8L5J627pLz01FGEOzwY3LTlz3JyDf/r4ue4NdM4By3GGD6fWMZno4v3XijO
      GIzMHJhq7exJx74Bx6nvWUZbvM9/HXo+D+9zzzXM1p3AuVwb8wrbh2FkjEH+6D9D/uA/gW2q
      FPrSNZTf/48w0rP3df7p5TQOhH2YWc7cV/lmwAkOSMdegDj4VXAO7/Z5m9EEkiQJiWwRkYDn
      vuYN3r82A0XTsVZQ8J3n1qesGWMYmV6FyyHi6EPhbY87F8vijU8mcOShMF7YEJyi6XjtzRuQ
      RB7f+doQvNv4xOvxUWjjbwGGDuez/85ML3x4CXo2C//vvQRuj+yFu/nxbW4WyaNj4AQBjmNH
      zeh98gd/CRganM/8W7NiKFf+BnAHwXECpOO/XzkojGISnNMPTtx+OybDYJhbzaI/GgDPc8jl
      chAcbrz21g0EfE587/nHmnPhDaIpX4D3r83iN5/P4L3PZ+6r/FdP9uNApx8vf/mYmbZWUnBt
      YgXvfT5jGdnTDQP5kmKpCEVZhccpIV+qfu4lgccj/Z3o7w5admTUE+OQP/0hWKkayZnzdoGp
      JfBh6wytPDkJo1CEntud5lotKj5Zm18IrFRC6epVFD/+GNjklyOv9qO00Atg0/VjCIUPrsFw
      DplpRm4R8oc/gHz5B5ZzMV3ZsqKN5zkM9gTBbxpE0DQdPLe+Am0zw1Mx/PzDUaiaNbxmvWQL
      Zdy4E7MEu2KGDm3uY7DS/X2BmiKAsN+BVGwBYV/1Lcs0GfKl/wLl2t9b8qo3/x/K7/2FZfEH
      zwNDnjicfPVG+VwORIIeHDvYaRmA+cVH4/jpezcxs1K9AY/0hfHyMQP/5EzfpjMxfKn8Np6W
      fwWw6nG1ibfBhwahzV6u5tQdKC0chJKxRnvwvXAerscfgxDc2zs0ci4XpJ4eSP39wCa/HD1X
      ANMBplaHRrVEFkLvk9DjqWq+vILyyA0os9YmaPnXf4nCz/4DjGL1ZWEUk1Cu/A2MQrUPEPA6
      8eppH773lV5L+U9uLUISecyvVl8ghZKCn18axeqmrWMZY1hJ5ZHMFi0vttcvjWF+NYubM6tV
      W2cvw8jMrXvf3oPS9RtI/9+/hbqyYqY9sADS6TRyd70RH81/gFcTF3A8/xszzcgnUb49AuXW
      by15y1feRvHKdWixKTNNG38TuX/4K8if/m8zjYOOc8U38OXye5byopKBko1BRLVS63MfQ3jj
      r6Fe+qtqRkODHrsDPT4PaLKZrBb6ULpyGQarOq/piQR4txvKjLVd7Ojrg2toaM+7g3A8D9/5
      5+E795xpK8dxCH73uwi88gp4b7Vd7PvGC3A/dRbup6o+R7w3DBb6FljHly3HlSfuQF1ahrHp
      eau3Xoe8pEC99bqZZuRXgV/8BbQ3/txS/jn9MvDmf8eAv/pl/ujGDLpu/x3e/XjYTCuUVbz+
      s5/ix//4uuVr/2igjNVrb6E/Uh3y5EJHUbz0K8BT7VsyxrD2qzeRu3BxfeRsA2V6GmIkAnV+
      wUx74EHi2MakjN/vN92k1RUdfIcOOaaD1zRwHAddEWFwQ1BzAtwbbtOMMaiOszDEO2DOHui6
      DsYYlJgO3mdAjekQN8oba0noyUUYpTykL/2xuazwufwFcINDEFNXoUfPr5dPaODcDOqqAWmj
      PFMNyImDMDhAkg3wwroNuu6Crh+DqHPm+fm+Pjg5DmIkYrr2WpoYjLX8/8023Ov/zcew/OZ2
      rQ8RbtwTM18kAmNTRWE+HwL//E8AnjfvCcdx4I7+EfT4KlhHl+n6Xo51QBQmUY4dgbiRV80r
      MHSApQxL+e7UBLoPq1Bjy2DuTnAch9P6dfwGnXha+wy6fgYAIJbTkFIL6BA0MEODZqzbeiJ+
      ASdOHYWw8Am0h8+B4ziUxhcgPv4vkb85C/HkRr1SVSjLy+AEEXqpBM61ft3eb74IdWkJjoEB
      8x48sAAqlb5ykzmOg+vJb6LwvguuJ58108RIBJ7nfh+c32d5UIE//GeAooBzu80b5Xz8q1AT
      KpxnzpjlBX8EfM9XIDg94DZN7jgf/zb0mY8hnfqWeVzHI6ehzKfhfvzxahtZkuA49gQMVQHv
      qXbOfeefByuVLG9FAHD095sVxKxAqFasu78Cjf7/QY5Ry8Ydl73LpZnjOPhffNGSBwDcZ55F
      8UMOnme/Wn3WXT0QjnwXUrTLch7H2X8FZXIUUv9xYCNv8Ph5vJT6KRynv2nmlTxBfKePQXCH
      LGP40slvQ526DPHQK2Z51/EhFH79DrxPP1Wthw4HfOfPg2MGeHd1dIxzOuE8tNGvq1zng44C
      5XI58DwPn8+3b5zhiPtnL0yE7YQH/gK008USxN3s/tw5QewiJADC1pAACFtDAiBsDQmAsDXm
      KFA+n7dMhtwPld0j7w6LYRgG+Lt81Wul1ZrQ2Wl5xlhdeWul7SRvrdhI7XStzbK/UNga/Xov
      Xn8l3aypPp9vS4ad8kXzAO1SKXaSlwRQ235g69D4Xrz+Srrw/e9///tbfrlPNE0Dz/MoFosY
      HR2F3+83A2gBwNjYGFwulyUtHo9jcnIS0WgUPL++KkuWZUxOTgIAPJtmbTOZDObn59HZ2Wmm
      LS8vIx6Po6OjwyyvaRrGxsbgdrvNczHGsLi4iOnpafT09JjlY7EYZmZm4Pf7IW0sNlFVFbdv
      34ZhGPD51meu4/E4UqkUUqkUEokEIpEIFEXB2NgY/H4/JiYm0NW17jw3PDyMcDiM6elpZLNZ
      hMNhpFIpxGIxKIqCmZkZRDbcD0ZGRhCNRnHz5k10dHRAkiTzPt25cwccx8Hr9SKbzWJxcRGq
      qiIejyO44ZB3/fp1BINB3LlzB+VyGYFAALOzs9B1HXNzc8hkMujs7EQsFkMmk0EsFkM6nUZn
      ZycKhQLGx8dRLBYxNzeHcDgMnucxNTVlni8YDEIURcRiMUxNTcEwDMzOziIajaJcLmNychLl
      chkLCwtwudbXUDudTty+fdu0p3Kv0+k0VlZWEAqFTPHJsoyJiYl1VwWv18w7NzeHeDyOcLjq
      +s4Yw9WrV9Hb22uW1zQNN2/ehNfrtdSrmZkZlEol+P1+My2bzeL27dvo6Ogw8zalDxCLxTA0
      NITV1VVLemdn55aweZWL3vwmcDqdKBQKlryMMdy5cwelu6IicNy6D/rmHexzuRzW1taQTqct
      +bq6uuC9y+WhVCohnU5bfWEYQ6lUwsomr8FIJAJZli02ORwOOJ1OU9QVgsEgGGMQRdGsFKFQ
      CJqmwe12m3YJggCPx4NEIoF0Oo1SqQQACIfD0DQNjDFks1kA629VxhiWlpaQy+Wgquq6e8LG
      S4bneUSjUfM+K4pi3gcAZoUtl8vmdbndbhiGgXw+j76+PmQymXVXhg27g8GgeV/dbrdpr7Cx
      FsLpdELXdYTDYWSzWcs9FEUR5bJ1QVEwGNzSzHY4HDAMA263e0v63U6Wk5OTkGXZ8qx1XYdh
      GOZ1VlheXkYymbSkdXR0wOl0wuOpOtM1RQDd3d0YGRkx34gVEomE+UArzM3NbamUxWIRHo9n
      y8qtwcFBs0JVEEXRfCAV/H4/PB7Pls9ePB7H4OCgJU2SJITDYcu5RFFEKBSyRMBLJBLI5/Pr
      jn0VR7ByGZlMBslkEplMxqzA2WwWiUQCq6urkKR13/uK12w2m4Xf7wcAKIpiVrre3l7T3nQ6
      jXQ6bbnWbDZrvs0FQTDtyGQyyOVycDgcpgiTySSy2Sx8Pp/5sOPxOPL5PCKRCHp61gNera6u
      QhAEBINBzMzMIBAIwDAMrK6uQhRFpFIp83ktLCzA4/Fgbm7OPGYmk4Gu61hbWzPLVlAUxbz2
      Cul0GplMxpIvl8tBUazLNBljKBaLW0Rx4MAB8+VSgeO4LXUCALq6urbUC0VRLF8UAPj/i9zF
      Nqc3EGkAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='trip Durations' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
